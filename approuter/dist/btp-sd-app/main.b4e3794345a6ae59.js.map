{"version":3,"file":"main.b4e3794345a6ae59.js","mappings":"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","names":["FormulaService","constructor","apiService","this","formulaInformation","createInformation","formula","description","numberOfParameters","parameterInformation","parameters","relationInformation","formulaLogic","testInformation","variables","getFormulaInformation","addApiRecord","row","post","subscribe","response","console","log","setFormulaformation","static","t","i0","i1","_angular_core__WEBPACK_IMPORTED_MODULE_0__","Yz7","factory","ɵfac","$event","variable_r3","_r5","$implicit","ctx_r4","ctx_r2","TestComponent_ng_template_2_div_0_Template","_r7","ctx_r6","showResult","ctx_r0","getVariables","_r9","ctx_r8","prevPage","ctx_r10","saveFormula","TestComponent","router","formulaService","messageService","confirmationService","result","visible","parameterIds","parameterDescriptions","ngOnInit","history","state","passedCreateInfo","passedParamInfo","map","item","paramID","paramDescription","match","navigationExtras","navigate","valuesOnly","Object","values","filter","value","valuesTestParam","formulaObject1","testParameters","formulaLogicWithValues","i","parameterId","parameterValue","replace","RegExp","eval","confirm","message","header","icon","accept","localStorage","clear","reject","error","status","add","severity","summary","detail","life","TestComponent_Factory","i2","i3","i4","Xpm","selectors","features","ApiService","MessageService","ConfirmationService","decls","vars","consts","template","TestComponent_Template","rf","ctx","TestComponent_ng_template_2_Template","TestComponent_ng_template_3_Template","_c0","_c1","_c2","http","baseUrl","get","url","queryParam","headers","params","HttpParams","set","getID","id","body","put","patch","update","delete","deleteFromApp","updateApp","_angular_core__WEBPACK_IMPORTED_MODULE_1__","providedIn","ModelService","recordsChanged","Subject","startedEditing","getRecords","recordsApi","next","addRecord","record","updateRecord","index","newRecord","deleteRecord","core","_r22","record_r2","modelServSpec","_r27","blockingIndicator","_r32","serviceSelection","_r37","_r42","searchTerm","record_r46","code","_r49","currencyCode","ModelComponent_ng_template_11_ng_template_24_ng_template_1_Template","ctx_r15","recordsCurrency","_r54","ctx_r52","onRowEditInit","_r57","ctx_r55","onRowEditSave","modelSpecCode","_r60","ctx_r59","ri_r4","rowIndex","ctx_r58","onRowEditCancel","ModelComponent_ng_template_11_ng_template_4_Template","ModelComponent_ng_template_11_ng_template_5_Template","ModelComponent_ng_template_11_ng_template_8_Template","ModelComponent_ng_template_11_ng_template_9_Template","ModelComponent_ng_template_11_ng_template_12_Template","ModelComponent_ng_template_11_ng_template_13_Template","ModelComponent_ng_template_11_ng_template_16_Template","ModelComponent_ng_template_11_ng_template_17_Template","ModelComponent_ng_template_11_ng_template_20_Template","ModelComponent_ng_template_11_ng_template_21_Template","ModelComponent_ng_template_11_ng_template_24_Template","ModelComponent_ng_template_11_ng_template_25_Template","_r62","ctx_r61","navigateServices","ModelComponent_ng_template_11_button_30_Template","ModelComponent_ng_template_11_button_31_Template","ModelComponent_ng_template_11_button_32_Template","ctx_r63","editing_r3","ModelComponent","modelService","modalService","fb","modalVisible","deleteDialog","editMode","clonedRecords","subscription","records","sort","a","b","navigateModelAdd","showDeleteDialog","Record","i5","i6","viewQuery","ModelComponent_ng_template_10_Template","ModelComponent_ng_template_11_Template","_c3","_c4","ModelEntity","modelSpecDetailsCode","AddModelComponent","modelForm","FormGroup","FormControl","Validators","required","onSubmit","form","filteredRecord","fromEntries","entries","_","res","err","complete","AddModelComponent_div_27_Template","AddModelComponent_ng_template_37_Template","tmp_1_0","errors","touched","invalid","ModelSpecDetailService","getRecord","modelSpecRecord","ctx_r1","_r12","ctx_r11","showDialog","ctx_r13","_r15","ctx_r14","ctx_r3","_r17","ctx_r16","onSelectAllRecords","record_r73","_r76","record_r18","serviceNumberCode","ctx_r77","onServiceNumberUpdateChange","ModelDetailsComponent_ng_template_18_tr_0_ng_template_7_ng_template_1_Template","ctx_r22","recordsServiceNumber","_r85","shortText","_r88","ctx_r87","updateShortText","ctx_r81","updateSelectedServiceNumberRecord","ctx_r82","ModelDetailsComponent_ng_template_18_tr_0_ng_template_11_ng_container_0_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_11_ng_container_1_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_11_ng_container_2_Template","ctx_r24","updateShortTextChangeAllowed","_r94","quantity","ctx_r91","resultAfterTestUpdate","ModelDetailsComponent_ng_template_18_tr_0_ng_template_15_ng_container_0_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_15_ng_container_1_Template","ctx_r26","updatedFormulaRecord","record_r98","_r101","formulaCode","ctx_r102","onFormulaUpdateSelect","ModelDetailsComponent_ng_template_18_tr_0_ng_template_19_ng_template_1_Template","ctx_r28","recordsFormula","_r107","grossPrice","ctx_r110","ModelDetailsComponent_ng_template_18_tr_0_ng_template_30_ng_container_0_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_30_ng_container_1_Template","ctx_r32","netValue","ctx_r115","baseUnitOfMeasurement","record_r118","_r121","unitOfMeasurementCode","ModelDetailsComponent_ng_template_18_tr_0_ng_template_34_ng_container_1_ng_template_2_Template","ctx_r116","recordsUnitOfMeasure","ModelDetailsComponent_ng_template_18_tr_0_ng_template_34_ng_container_0_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_34_ng_container_1_Template","ctx_r34","ctx_r36","_r126","overFulfilmentPercentage","_r131","priceChangedAllowed","_r136","unlimitedOverFulfillment","_r141","pricePerUnitOfMeasurement","ctx_r144","materialGroupCode","record_r147","_r150","ModelDetailsComponent_ng_template_18_tr_0_ng_template_56_ng_container_1_ng_template_2_Template","ctx_r145","recordsMatGrp","ModelDetailsComponent_ng_template_18_tr_0_ng_template_56_ng_container_0_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_56_ng_container_1_Template","ctx_r45","ctx_r153","serviceTypeCode","record_r156","serviceId","_r159","ModelDetailsComponent_ng_template_18_tr_0_ng_template_60_ng_container_1_ng_template_2_Template","ctx_r154","recordsServiceType","ModelDetailsComponent_ng_template_18_tr_0_ng_template_60_ng_container_0_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_60_ng_container_1_Template","ctx_r47","_r164","externalServiceNumber","ctx_r167","serviceText","_r171","ModelDetailsComponent_ng_template_18_tr_0_ng_template_68_ng_container_0_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_68_ng_container_1_Template","ctx_r51","_r176","lineText","record_r180","_r183","personnelNumberCode","ModelDetailsComponent_ng_template_18_tr_0_ng_template_76_ng_template_1_Template","recordsPersonnelNumber","record_r187","_r190","lineTypeCode","ModelDetailsComponent_ng_template_18_tr_0_ng_template_80_ng_template_1_Template","ctx_r57","recordsLineType","_r195","lineNumber","_r200","alternatives","_r205","biddersLine","_r210","supplementaryLine","_r215","lotSizeForCostingIsOne","_r220","ctx_r218","_r223","ctx_r221","_r226","ctx_r225","ri_r20","ctx_r224","_r228","ctx_r227","selectedAllRecords","ctx_r229","onRecordSelectionChange","ModelDetailsComponent_ng_template_18_tr_0_ng_template_7_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_8_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_11_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_12_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_15_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_16_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_19_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_20_Template","ctx_r231","openPopupUpdate","ModelDetailsComponent_ng_template_18_tr_0_ng_template_26_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_27_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_30_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_31_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_34_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_35_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_container_37_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_40_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_41_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_44_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_45_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_48_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_49_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_52_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_53_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_56_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_57_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_60_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_61_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_64_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_65_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_68_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_69_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_72_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_73_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_76_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_77_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_80_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_81_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_84_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_85_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_88_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_89_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_92_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_93_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_96_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_97_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_100_Template","ModelDetailsComponent_ng_template_18_tr_0_ng_template_101_Template","ModelDetailsComponent_ng_template_18_tr_0_button_104_Template","ModelDetailsComponent_ng_template_18_tr_0_button_105_Template","ModelDetailsComponent_ng_template_18_tr_0_button_106_Template","ctx_r21","editing_r19","ModelDetailsComponent_ng_template_18_tr_0_Template","ctx_r5","isMatch","record_r253","_r255","ctx_r254","newService","ctx_r234","_r257","ctx_r256","selectedServiceNumberRecord","ctx_r258","ctx_r235","ctx_r236","ctx_r237","resultAfterTest","_r260","ctx_r259","ctx_r238","record_r261","ctx_r240","ctx_r241","ctx_r242","record_r263","_r265","ctx_r264","selectedUnitOfMeasure","ModelDetailsComponent_ng_template_19_ng_container_27_ng_template_2_Template","ctx_r243","ctx_r244","ctx_r245","record_r267","_r269","ctx_r268","selectedMatGrp","ModelDetailsComponent_ng_template_19_ng_container_40_ng_template_2_Template","ctx_r246","ctx_r247","record_r271","_r273","ctx_r272","selectedServiceType","ModelDetailsComponent_ng_template_19_ng_container_43_ng_template_2_Template","ctx_r248","ctx_r249","_r275","ctx_r274","ctx_r250","record_r276","record_r277","_r279","ctx_r278","selectedServiceNumber","ctx_r280","onServiceNumberChange","ModelDetailsComponent_ng_template_19_ng_template_6_Template","ModelDetailsComponent_ng_template_19_ng_container_8_Template","ModelDetailsComponent_ng_template_19_ng_container_9_Template","ModelDetailsComponent_ng_template_19_ng_container_10_Template","ModelDetailsComponent_ng_template_19_ng_container_12_Template","ModelDetailsComponent_ng_template_19_ng_container_13_Template","ctx_r281","selectedFormula","ctx_r282","onFormulaSelect","ModelDetailsComponent_ng_template_19_ng_template_16_Template","ctx_r283","openPopup","ctx_r284","ModelDetailsComponent_ng_template_19_ng_container_23_Template","ModelDetailsComponent_ng_template_19_ng_container_24_Template","ModelDetailsComponent_ng_template_19_ng_container_26_Template","ModelDetailsComponent_ng_template_19_ng_container_27_Template","ModelDetailsComponent_ng_template_19_ng_container_29_Template","ctx_r285","ctx_r286","ctx_r287","ctx_r288","ModelDetailsComponent_ng_template_19_ng_container_39_Template","ModelDetailsComponent_ng_template_19_ng_container_40_Template","ModelDetailsComponent_ng_template_19_ng_container_42_Template","ModelDetailsComponent_ng_template_19_ng_container_43_Template","ctx_r289","ModelDetailsComponent_ng_template_19_ng_container_47_Template","ModelDetailsComponent_ng_template_19_ng_container_48_Template","ctx_r290","ctx_r291","selectedPersonnelNumber","ModelDetailsComponent_ng_template_19_ng_template_53_Template","ctx_r292","selectedLineType","ModelDetailsComponent_ng_template_19_ng_template_56_Template","ctx_r293","ctx_r294","ctx_r295","ctx_r296","ctx_r297","ctx_r298","addRow","shortTextChangeAllowed","selectedFormulaRecord","parameterId_r300","_r302","ctx_r301","parameterValues","ctx_r299","_r304","ctx_r303","closePopup","ModelDetailsComponent_div_20_div_6_Template","ctx_r305","saveParameters","ctx_r7","parameterId_r307","_r309","ctx_r308","parameterValuesUpdate","ctx_r306","_r311","ctx_r310","ModelDetailsComponent_div_21_div_6_Template","ctx_r312","_r314","ctx_r313","ModelDetailsComponent","modelSpecDetailsService","dontSelectServiceNumber","totalValue","modelSpecDetailsCodes","selectedRecords","clonedModelSpecDetails","selectionCheckbox","lineIndex","deletionIndicator","showPopup","showPopupUpdate","getCurrentNavigation","extras","undefined","detailObservables","forkJoin","reduce","sum","ri","event","selectedDetailsForDisplay","checked","Array","isArray","length","selectedRecord","find","updateSelectedRecord","updatedRecord","indexToRemove","indexOf","splice","updateSelectedServiceNumber","resetNewService","push","updatedModel","formulaObject","ModelDetailsComponent_ng_container_5_Template","ModelDetailsComponent_ng_container_11_Template","ModelDetailsComponent_ng_template_13_Template","ModelDetailsComponent_ng_template_14_Template","ModelDetailsComponent_ng_template_17_Template","ModelDetailsComponent_ng_template_18_Template","ModelDetailsComponent_ng_template_19_Template","ModelDetailsComponent_div_20_Template","ModelDetailsComponent_div_21_Template","ModelDetailsComponent_ng_template_25_Template","ModelDetailsComponent_ng_template_131_Template","_c5","_c6","_c7","currency","ServiceTypeService","getApiRecords","updateApiRecord","getApiRecord","deleteApiRecord","_r14","record_r4","_r19","ctx_r17","ctx_r20","_r25","ri_r6","ctx_r23","ServiceTypeComponent_ng_template_5_ng_template_5_Template","ServiceTypeComponent_ng_template_5_ng_template_6_Template","ServiceTypeComponent_ng_template_5_button_11_Template","ServiceTypeComponent_ng_template_5_button_12_Template","ServiceTypeComponent_ng_template_5_button_13_Template","lastChangeDate","editing_r5","_r29","newServiceType","ctx_r30","ctx_r31","ServiceTypeComponent","_ServiceTypeService","Date","onEditItem","ngOnDestroy","unsubscribe","ServiceTypeComponent_ng_template_3_Template","ServiceTypeComponent_ng_template_4_Template","ServiceTypeComponent_ng_template_5_Template","ServiceTypeComponent_ng_template_6_Template","FormulaComponent","isFormValid","items","label","routerLink","CreateComponent_ng_template_2_small_24_ng_container_1_Template","_r10","ctx_r9","CreateComponent_ng_template_2_small_7_Template","CreateComponent_ng_template_2_small_15_Template","ctx_r12","validateNumberOfParameters","CreateComponent_ng_template_2_small_24_Template","_r2","submitted","dirty","_r4","_r6","nextPage","isNumberOfParametersValid","CreateComponent","route","getItem","Number","setItem","String","CreateComponent_ng_template_2_Template","CreateComponent_ng_template_3_Template","index_r4","param_r3","ParameterComponent_ng_template_1_div_0_small_8_Template","ParameterComponent_ng_template_1_div_0_small_16_Template","ParameterComponent_ng_template_1_div_0_Template","parameterInformationIterator","ParameterComponent","JSON","parse","every","param","stringify","ParameterComponent_ng_template_1_Template","ParameterComponent_ng_template_2_Template","record_r5","paramClick","record_r8","operationClick","RelationComponent_ng_template_1_a_9_Template","RelationComponent_ng_template_1_a_14_Template","operations","RelationComponent","operation","RelationComponent_ng_template_1_Template","RelationComponent_ng_template_2_Template","FormulasService","navigateAddFormula","_r16","record_r7","_r21","FormulasComponent_ng_template_4_ng_template_3_Template","FormulasComponent_ng_template_4_ng_template_4_Template","FormulasComponent_ng_template_4_ng_template_7_Template","FormulasComponent_ng_template_4_ng_template_8_Template","_r28","ctx_r27","FormulasComponent","formulasService","FormulasComponent_ng_template_2_Template","FormulasComponent_ng_template_3_Template","FormulasComponent_ng_template_4_Template","FormulasComponent_ng_template_8_Template","FormulasComponent_ng_template_26_Template","ServiceMaster","mainItem","numberToBeConverted","convertedNumber","toBeConvertedUnitOfMeasurement","defaultUnitOfMeasurement","ServiceMasterService","record_r9","record_r10","record_r11","record_r12","record_r13","AddEditServiceMasterComponent","serviceMasterService","serviceMasterForm","copyMode","pageId","serviceMasterInfo","copyFlag","Copy","recordsMeasure","recordsMaterialGrp","getServiceMasterById","patchValue","AddEditServiceMasterComponent_div_14_Template","AddEditServiceMasterComponent_div_21_Template","AddEditServiceMasterComponent_ng_template_38_Template","AddEditServiceMasterComponent_div_41_Template","AddEditServiceMasterComponent_ng_template_44_Template","AddEditServiceMasterComponent_div_47_Template","AddEditServiceMasterComponent_ng_template_61_Template","AddEditServiceMasterComponent_ng_template_69_Template","AddEditServiceMasterComponent_ng_template_78_Template","tmp_2_0","tmp_3_0","tmp_10_0","tmp_17_0","searchValue","onSearchInputChange","navigateAddServices","navigateDetailServices","navigateEditService","navigateCopyService","exportExcel","selectedColumns","cols","col_r19","field","NewServiceMasterComponent_ng_template_9_th_2_Template","columns_r17","record_r20","col_r23","NewServiceMasterComponent_ng_template_10_td_3_ng_container_1_Template","NewServiceMasterComponent_ng_template_10_td_3_ng_container_2_Template","_r31","NewServiceMasterComponent_ng_template_10_td_3_Template","columns_r21","routes","path","component","NewServiceMasterComponent","cd","filteredRecords","serviceMasterRecords","markForCheck","includes","keyword","onColumnSelectionChange","col","RecordDetails","__webpack_require__","e","then","bind","xlsx","workbook","Sheets","data","utils","json_to_sheet","SheetNames","excelBuffer","write","bookType","type","saveAsExcelFile","buffer","fileName","Blob","FileSaver","getTime","NewServiceMasterComponent_ng_template_3_Template","NewServiceMasterComponent_ng_template_4_Template","NewServiceMasterComponent_ng_template_8_Template","NewServiceMasterComponent_ng_template_9_Template","NewServiceMasterComponent_ng_template_10_Template","ServiceMasterDetailComponent","navigateMainPage","children","AppRoutingModule","oAB","cJS","RouterModule","forRoot","AuthUser","email","_token","roles","token","AuthService","clientID","clientSecret","authUrl","registerUrl","loggedInUser","BehaviorSubject","hasRole","requiredRoles","user","some","role","signUp","familyName","givenName","userName","HttpHeaders","signIn","password","Authorization","btoa","URLSearchParams","toString","pipe","tap","resData","decoded","id_token","jwtDecode","groups","logout","removeItem","tokenExpirationTimer","clearTimeout","autoLogout","expirationDuration","setTimeout","handleError","errorRes","errorMessage","throwError","onLogout","HeaderComponent","authService","isAuthenticated","userSub","HeaderComponent_ng_container_27_Template","HeaderComponent_ng_template_28_Template","_r1","AppComponent","title","LoginComponent_span_10_span_1_Template","loginForm","controls","username","LoginComponent_span_11_span_1_Template","LoginComponent_span_19_span_1_Template","LoginComponent","isShown","loading","userData","alert","LoginComponent_span_10_Template","LoginComponent_span_11_Template","LoginComponent_span_19_Template","LoginComponent_span_22_Template","RegisterComponent_span_10_span_1_Template","registerForm","firstName","RegisterComponent_span_15_span_1_Template","lastName","RegisterComponent_span_20_span_1_Template","RegisterComponent_span_25_span_1_Template","RegisterComponent_span_26_span_1_Template","_r13","RegisterComponent","RegisterComponent_span_10_Template","RegisterComponent_span_15_Template","RegisterComponent_span_20_Template","RegisterComponent_span_25_Template","RegisterComponent_span_26_Template","RegisterComponent_span_29_Template","RegisterComponent_div_33_Template","AuthModule","CommonModule","FormsModule","ReactiveFormsModule","forChild","AuthInterceptorService","intercept","req","take","exhaustMap","handle","modifiedReq","clone","AppModule","bootstrap","provideClientHydration","provide","HTTP_INTERCEPTORS","useClass","multi","imports","FundamentalNgxCoreModule","BrowserModule","BrowserAnimationsModule","NgbModule","HttpClientModule","ButtonModule","TableModule","DropdownModule","DialogModule","ToolbarModule","InputTextareaModule","MessagesModule","ToastModule","StepsModule","AnimateModule","CardModule","ChipModule","ConfirmDialogModule","PaginatorModule","MultiSelectModule","CheckboxModule","FieldsetModule","TreeTableModule","NgHttpLoaderModule","__NgCli_bootstrap_1","bootstrapModule","catch"],"sourceRoot":"webpack:///","sources":["./src/app/formula/formula.service.ts","./src/app/formula/test/test.component.html","./src/app/formula/test/test.component.ts","./src/app/shared/ApiService.service.ts","./src/app/model/model.service.ts","./src/app/model/model.component.html","./src/app/model/model.component.ts","./src/app/model/model.model.ts","./src/app/model/add-model/add-model.component.html","./src/app/model/add-model/add-model.component.ts","./src/app/model-details/model-details.service.ts","./src/app/model-details/model-details.component.html","./src/app/model-details/model-details.component.ts","./src/app/service-type/service-type.service.ts","./src/app/service-type/service-type.component.html","./src/app/service-type/service-type.component.ts","./src/app/formula/formula.component.ts","./src/app/formula/formula.component.html","./src/app/formula/create/create.component.html","./src/app/formula/create/create.component.ts","./src/app/formula/parameter/parameter.component.html","./src/app/formula/parameter/parameter.component.ts","./src/app/formula/relation/relation.component.html","./src/app/formula/relation/relation.component.ts","./src/app/formulas/formulas.service.ts","./src/app/formulas/formulas.component.html","./src/app/formulas/formulas.component.ts","./src/app/new-service-master/new-service-master.model.ts","./src/app/new-service-master/new-service-master.service.ts","./src/app/new-service-master/add-edit-service-master/add-edit-service-master.component.html","./src/app/new-service-master/add-edit-service-master/add-edit-service-master.component.ts","./src/app/new-service-master/new-service-master.component.html","./src/app/app-routing.module.ts","./src/app/new-service-master/new-service-master.component.ts","./src/app/new-service-master/service-master-detail/service-master-detail.component.ts","./src/app/new-service-master/service-master-detail/service-master-detail.component.html","./src/app/auth/auth-user.model.ts","./src/app/auth/auth.service.ts","./src/environments/environment.prod.ts","./src/app/header/header.component.html","./src/app/header/header.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/auth/login/login.component.html","./src/app/auth/login/login.component.ts","./src/app/auth/register/register.component.html","./src/app/auth/register/register.component.ts","./src/app/auth/auth.module.ts","./src/app/auth/auth-interceptor.service.ts","./src/app/app.module.ts","./src/main.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ApiService } from '../shared/ApiService.service';\r\n@Injectable()\r\nexport class FormulaService {\r\n    constructor(private apiService: ApiService) { }\r\n    formulaInformation = {\r\n        createInformation: {\r\n            formula: '',\r\n            description: '',\r\n            numberOfParameters: 0,\r\n        },\r\n        parameterInformation: {\r\n            parameters: [] as { paramID: [], paramDescription: [] }[]\r\n        },\r\n        relationInformation: {\r\n            formulaLogic: '',\r\n        },\r\n        testInformation: {\r\n            variables: [] as { variableName: string, variableValue: number }[]\r\n        }\r\n    };\r\n    getFormulaInformation() {\r\n        return this.formulaInformation;\r\n    }\r\n    \r\n    addApiRecord(row: {}) {\r\n        this.apiService.post<any>('formulas', row).subscribe((response) => {\r\n            console.log('formula created:', response);\r\n        });\r\n        return this.apiService.post<any>('formulas', row);\r\n    }\r\n\r\n    setFormulaformation(formulaInformation: {\r\n        createInformation: {\r\n            formula: string; description: string; numberOfParameters: 0;\r\n        };\r\n        parameterInformation: {\r\n            parameters: { paramID: []; paramDescription: [] }[];\r\n        };\r\n        relationInformation: { formulaLogic: string; };\r\n        testInformation: {\r\n            variables: { variableName: string; variableValue: number; }[];\r\n        };\r\n    }) {\r\n        this.formulaInformation = formulaInformation;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","<p-toast></p-toast>\r\n<p-card>\r\n    <ng-template pTemplate=\"content\">\r\n        <div *ngFor=\"let variable of getVariables(formulaLogic)\" class=\"field\">\r\n            <label for=\"{{ variable }}\">{{ variable }}:</label>\r\n            <input [id]=\"variable\" type=\"number\" required pInputNumber [(ngModel)]=\"testInformation.variables[variable]\"\r\n                class=\" text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary\" />\r\n        </div>\r\n        <div class=\"flex justify-content-center flex-wrap\">\r\n        <p-button label=\"Show Result\" [rounded]=\"true\"  (onClick)=\"showResult()\" ></p-button>\r\n        </div>\r\n\r\n    </ng-template>\r\n    <ng-template pTemplate=\"footer\">\r\n        <div class=\"flex justify-content-between flex-wrap\">\r\n             <p-button label=\"Back\" (onClick)=\"prevPage()\" [rounded]=\"true\"  icon=\"pi pi-angle-left\"></p-button> \r\n            <p-button label=\"Confirm & Save\" (onClick)=\"saveFormula()\" [rounded]=\"true\"  ></p-button>\r\n        </div>\r\n    </ng-template>\r\n</p-card>\r\n<p-confirmDialog [style]=\"{ width: '450px' }\"></p-confirmDialog>\r\n<p-dialog header=\"Test Result\" [(visible)]=\"visible\" [breakpoints]=\"{ '960px': '75vw' }\" [style]=\"{ width: '50vw' }\" [draggable]=\"false\" [resizable]=\"false\">\r\n   <p> The Result is {{result}}</p>\r\n</p-dialog>","import { Component, OnInit } from '@angular/core';\r\nimport {NavigationExtras, Router } from '@angular/router';\r\nimport { FormulaService } from '../formula.service';\r\nimport { ApiService } from 'src/app/shared/ApiService.service';\r\nimport { ConfirmationService, MessageService } from 'primeng/api';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-test',\r\n  templateUrl: './test.component.html',\r\n  styleUrls: ['./test.component.css'],\r\n  providers: [FormulaService, ApiService, MessageService, ConfirmationService]\r\n})\r\nexport class TestComponent implements OnInit {\r\n\r\n  result: number = 0;\r\n  visible: boolean = false;\r\n  parameterIds: string[] = [];\r\n  parameterDescriptions: string[] = []\r\n  testInformation: any;\r\n  formulaLogic!: string;\r\n  passedCreateInfo: any;\r\n  passedParamInfo: any;\r\n \r\n  constructor(private router: Router,public formulaService: FormulaService,\r\n    private apiService: ApiService, private messageService: MessageService, private confirmationService: ConfirmationService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.testInformation = this.formulaService.getFormulaInformation().testInformation;\r\n    // hold data from previous page:\r\n    this.formulaLogic = history.state.formulaLogic;\r\n    this.passedCreateInfo = history.state.passedCreateInfo;\r\n    this.passedParamInfo = history.state.passedParamInfo;\r\n    this.parameterIds = this.passedParamInfo.map((item: { paramID: any; }) => item.paramID);\r\n    this.parameterDescriptions = this.passedParamInfo.map((item: { paramDescription: any; }) => item.paramDescription);\r\n    // console.log(this.parameterIds);\r\n    // console.log(this.parameterDescriptions);\r\n    // console.log(this.passedCreateInfo);\r\n    // console.log(this.passedParamInfo);\r\n    // console.log(this.formulaLogic);\r\n  }\r\n\r\n  getVariables(formulaLogic: string): string[] {\r\n    //to extract variables from the formulaLogic string\r\n    const regex = /[a-zA-Z]+/g;\r\n    const variables = formulaLogic.match(regex);\r\n    return variables ? variables : [];\r\n  }\r\n\r\n  prevPage() {\r\n    const navigationExtras: NavigationExtras = {\r\n      state: {\r\n        passedCreateInfo: this.passedCreateInfo,\r\n        passedParamInfo: this.passedParamInfo,\r\n        formulaLogic: this.formulaLogic,\r\n      }\r\n    };\r\n    console.log(navigationExtras);\r\n    this.router.navigate(['/formula/relation'],navigationExtras);\r\n  }\r\n  formulaObject1?: any\r\n  valuesTestParam?: number[]\r\n\r\n  showResult() {\r\n    if (this.testInformation.variables) {\r\n      const valuesOnly = Object.values(this.testInformation.variables)\r\n        .filter(value => typeof value === 'number') as number[];\r\n\r\n      this.valuesTestParam = valuesOnly\r\n      this.formulaService.formulaInformation.testInformation = this.testInformation;\r\n\r\n      this.formulaObject1 = {\r\n        formula: this.passedCreateInfo.formula,\r\n        //formula: localStorage.getItem('formula'),\r\n        description: this.passedCreateInfo.description,\r\n        // description: localStorage.getItem('description'),\r\n        numberOfParameters: this.passedCreateInfo.numberOfParameters,\r\n        // numberOfParameters: localStorage.getItem('numberOfParameters'),\r\n        parameterIds: this.parameterIds,\r\n        parameterDescriptions: this.parameterDescriptions,\r\n        formulaLogic: this.formulaLogic,\r\n        testParameters: valuesOnly\r\n      };\r\n      console.log(this.formulaObject1);\r\n      const formulaLogic = this.formulaObject1.formulaLogic;\r\n      const numberOfParameters = this.formulaObject1.numberOfParameters;\r\n      const parameterIds = this.formulaObject1.parameterIds;\r\n      const testParameters = this.formulaObject1.testParameters;\r\n      // Substitute parameter values in the formula logic string\r\n      let formulaLogicWithValues = formulaLogic;\r\n      for (let i = 0; i < numberOfParameters; i++) {\r\n        const parameterId = parameterIds[i];\r\n        const parameterValue = testParameters[i];\r\n        formulaLogicWithValues = formulaLogicWithValues.replace(new RegExp(parameterId, 'g'), parameterValue);\r\n        console.log(formulaLogicWithValues);\r\n      }\r\n      // Evaluate the formula logic string to get the result\r\n      this.result = eval(formulaLogicWithValues);\r\n      console.log(this.result);\r\n      this.visible = true;     \r\n    }\r\n  }\r\n\r\n  saveFormula() {\r\n    const formulaObject1: any = {\r\n      formula: this.passedCreateInfo.formula,\r\n      description: this.passedCreateInfo.description,\r\n      numberOfParameters: this.passedCreateInfo.numberOfParameters,\r\n      parameterIds: this.parameterIds,\r\n      parameterDescriptions: this.parameterDescriptions,\r\n      formulaLogic: this.formulaLogic,\r\n      testParameters: this.valuesTestParam\r\n    };\r\n    console.log(formulaObject1);\r\n    this.apiService.post<any>('formulas', formulaObject1).subscribe(\r\n      (response) => {\r\n        console.log('formula created:', response);\r\n        this.result = response.result\r\n        this.confirmationService.confirm({\r\n          message: 'Formula Created successfully. Click Accept to go to the Formulas Page.',\r\n          header: 'Added Successfully',\r\n          icon: 'pi pi-check',\r\n          accept: () => {\r\n            localStorage.clear();\r\n            this.router.navigate(['/formulas']);\r\n          },\r\n          reject: () => {\r\n          }\r\n        });\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        console.error('An error occurred:', error);\r\n        console.log(error.status);\r\n        if (error.status === 409) {\r\n          this.messageService.add({ severity: 'error', summary: 'Code Conflict', detail: 'This Formula Code already exists', life: 10000 });\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  //private baseUrl = environment.apiUrl\r\n  // private baseUrl = \"/api\"\r\n // https://express-proxy-app.cfapps.us10-001.hana.ondemand.com/\r\n \r\n  // private baseUrl = \"https://express-proxy-app.cfapps.us10-001.hana.ondemand.com/api\"\r\n  private baseUrl = \"https://proxy-app.cfapps.us10-001.hana.ondemand.com/api\"\r\n  // private baseUrl = environment.production\r\n  //   ? environment.apiUrl // Production URL\r\n  //   : '/api';  // Development URL\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  get<T>(url: string, queryParam?: string, headers?: HttpHeaders): Observable<T> {\r\n    let params = new HttpParams();\r\n\r\n    // headers =new HttpHeaders().set('Authorization',`Bearer ${ localStorage.getItem('token')}`)\r\n\r\n    if (queryParam) {\r\n      params = params.set('keyword', queryParam);\r\n      console.log(params);\r\n    }\r\n    console.log(this.http.get<T>(`${this.baseUrl}/${url}`, { params }));\r\n    return this.http.get<T>(`${this.baseUrl}/${url}`);\r\n  }\r\n\r\n  getID<T>(url: string, id: number, params?: HttpParams, headers?: HttpHeaders): Observable<T> {\r\n    //const options = { params, headers };\r\n\r\n    //headers =new HttpHeaders().set('Authorization',`Bearer ${ localStorage.getItem('token')}`)\r\n    console.log(this.http.get<T>(`${this.baseUrl}/${url}/${id}`));\r\n    return this.http.get<T>(`${this.baseUrl}/${url}/${id}`);\r\n  }\r\n\r\n  post<T>(url: string, body: any, headers?: HttpHeaders): Observable<T> {\r\n\r\n    return this.http.post<T>(`${this.baseUrl}/${url}`, body);\r\n  }\r\n\r\n  put<T>(url: string, id: number, body: any, headers?: HttpHeaders): Observable<T> {\r\n    return this.http.put<T>(`${this.baseUrl}/${url}/${id}`, body);\r\n  }\r\n\r\n  patch<T>(url: string, id: number, body: any, headers?: HttpHeaders): Observable<T> {\r\n    return this.http.patch<T>(`${this.baseUrl}/${url}/${id}`, body);\r\n  }\r\n\r\n  update<T>(url: string, body: any, headers?: HttpHeaders): Observable<T> {\r\n    return this.http.patch<T>(`${this.baseUrl}/${url}`, body);\r\n  }\r\n\r\n  delete<T>(url: string, id: number, headers?: HttpHeaders): Observable<T> {\r\n    return this.http.delete<T>(`${this.baseUrl}/${url}/${id}`);\r\n  }\r\n\r\n  deleteFromApp<T>(url: string, headers?: HttpHeaders): Observable<T> {\r\n    return this.http.delete<T>(`${this.baseUrl}/${url}`);\r\n  }\r\n  updateApp<T>(url: string,body?: any,  headers?: HttpHeaders): Observable<T> {\r\n    return this.http.patch<T>(`${this.baseUrl}/${url}`, body);\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { ModelEntity } from './model.model';\r\nimport { ApiService } from '../shared/ApiService.service';\r\n\r\n@Injectable()\r\nexport class ModelService {\r\n  recordsChanged = new Subject<ModelEntity[]>();\r\n  startedEditing = new Subject<number>();\r\n  constructor(private apiService: ApiService) { }\r\n  private recordsApi!: ModelEntity[]\r\n\r\n  getRecords() {\r\n    this.apiService.get<ModelEntity[]>('modelspecs').subscribe(response => {\r\n      console.log(response);\r\n      this.recordsApi = response;\r\n      this.recordsChanged.next(this.recordsApi);\r\n    });\r\n  }\r\n\r\n  addRecord(record: ModelEntity) {\r\n    this.apiService.post<ModelEntity>('modelspecs', record).subscribe((response: ModelEntity) => {\r\n      console.log('modelspecs created:', response);\r\n      this.getRecords();\r\n      return response\r\n    });\r\n  }\r\n\r\n  updateRecord(index: number, newRecord: ModelEntity) {\r\n    this.apiService.put<ModelEntity>('modelspecs', index, newRecord).subscribe(response => {\r\n      console.log('modelspecs updated:',response);\r\n      this.getRecords()\r\n    });\r\n  }\r\n\r\n  deleteRecord(index: number) {\r\n\r\n  }\r\n\r\n}","\r\n<p-toast></p-toast>\r\n\r\n\r\n<div class=\"card mt-5\">\r\n    <p-toolbar class=\"m-4\">\r\n        <div class=\"p-toolbar-group-start \">\r\n            <h5>Models:</h5>\r\n        </div>\r\n        <div class=\"p-toolbar-group-end\">\r\n            <button pButton icon=\"pi pi-plus\" (click)=\"navigateModelAdd()\">Add New Model</button>\r\n        </div>\r\n    </p-toolbar>\r\n    <p-table [value]=\"records\"  dataKey=\"modelSpecCode\" \r\n    editMode=\"row\" [tableStyle]=\"{'min-width': '50rem'}\" [scrollable]=\"true\" scrollHeight=\"400px\">\r\n        <ng-template pTemplate=\"header\">\r\n            <tr>\r\n                <th style=\"width: 4rem\">\r\n                </th>\r\n                <th fd-table-cell>modelServ.Spec</th>\r\n                <th fd-table-cell>blockingIndicator</th>\r\n                <th fd-table-cell>ServiceSelection</th>\r\n                <th fd-table-cell>Description</th>\r\n                <th fd-table-cell>SearchTerm</th>\r\n                <th fd-table-cell>Currency</th>\r\n                <th fd-table-cell>Services</th>\r\n                <th fd-table-cell>Actions</th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-record let-editing=\"editing\" let-ri=\"rowIndex\">\r\n            <tr [pEditableRow]=\"record\">\r\n                <td>\r\n                </td>\r\n                <td>\r\n                    <p-cellEditor>\r\n                        <ng-template pTemplate=\"input\">\r\n                            <input pInputText class=\"rounded-input\" type=\"text\" [(ngModel)]=\"record.modelServSpec\">\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"output\">\r\n                            {{record.modelServSpec}}\r\n                        </ng-template>\r\n                    </p-cellEditor>\r\n                </td>\r\n                <td>\r\n                    <p-cellEditor>\r\n                        <ng-template pTemplate=\"input\">\r\n                            <input pInputText type=\"checkbox\" [(ngModel)]=\"record.blockingIndicator\">\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"output\">\r\n                            {{record.blockingIndicator}}\r\n                        </ng-template>\r\n                    </p-cellEditor>\r\n                </td>\r\n                <td>\r\n                    <p-cellEditor>\r\n                        <ng-template pTemplate=\"input\">\r\n                            <input pInputText type=\"checkbox\" [(ngModel)]=\"record.serviceSelection\">\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"output\">\r\n                            {{record.serviceSelection}}\r\n                        </ng-template>\r\n                    </p-cellEditor>\r\n                </td>\r\n                <td>\r\n                    <p-cellEditor>\r\n                        <ng-template pTemplate=\"input\">\r\n                            <input pInputText class=\"rounded-input\" type=\"text\" [(ngModel)]=\"record.description\">\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"output\">\r\n                            {{record.description}}\r\n                        </ng-template>\r\n                    </p-cellEditor>\r\n                </td>\r\n                <td>\r\n                    <p-cellEditor>\r\n                        <ng-template pTemplate=\"input\">\r\n                            <input pInputText class=\"rounded-input\" type=\"text\" [(ngModel)]=\"record.searchTerm\">\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"output\">\r\n                            {{record.searchTerm}}\r\n                        </ng-template>\r\n                    </p-cellEditor>\r\n                </td>\r\n                <td>\r\n                    <p-cellEditor>\r\n                        <ng-template pTemplate=\"input\">\r\n                            <p-dropdown [options]=\"recordsCurrency\" [(ngModel)]=\"record.currencyCode\"\r\n                                [ngModelOptions]=\"{standalone: true}\" optionValue=\"code\" optionLabel=\"code\"\r\n                                [filter]=\"true\" [filterFields]=\"['code','description']\" [showClear]=\"true\"\r\n                                placeholder= `{{record.currencyCode}}` [appendTo]=\"'body'\">\r\n                                <ng-template let-record pTemplate=\"item\">\r\n                                    <div class=\"flex align-items-center gap-2\">\r\n                                        <div>{{ record.code }}::{{ record.description }}</div>\r\n                                    </div>\r\n                                </ng-template>\r\n                            </p-dropdown>\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"output\">\r\n                            {{record.currencyCode}}\r\n                        </ng-template>\r\n                    </p-cellEditor>\r\n                </td>\r\n                <td> <button pButton (click)=\"navigateServices(record)\" icon=\"pi pi-external-link\" size=\"small\"\r\n                        label=\"Services\"></button>\r\n                </td>\r\n                <td>\r\n                    <div class=\"flex align-items-center justify-content-center gap-2\">\r\n                        <button *ngIf=\"!editing\" pButton pRipple type=\"button\" pInitEditableRow icon=\"pi pi-pencil\" (click)=\"onRowEditInit(record)\" class=\"p-button-rounded p-button-text\"></button>\r\n                        <button *ngIf=\"editing\" pButton pRipple type=\"button\" pSaveEditableRow icon=\"pi pi-check\" (click)=\"onRowEditSave(record.modelSpecCode,record)\" class=\"p-button-rounded p-button-text p-button-success mr-2\"></button>\r\n                        <button *ngIf=\"editing\" pButton pRipple type=\"button\" pCancelEditableRow icon=\"pi pi-times\" (click)=\"onRowEditCancel(record, ri)\" class=\"p-button-rounded p-button-text p-button-danger\"></button>\r\n                        <button pButton pRipple type=\"button\" class=\"p-button-rounded p-button-text p-button-danger\" icon=\"pi pi-trash\" severity=\"danger\" (click)=\"deleteRecord(record)\"></button>\r\n                    </div>\r\n                    <!-- <p-button icon=\"pi pi-trash\" severity=\"danger\" (click)=\"deleteRecord(record)\"></p-button> -->\r\n                    <!-- <button pButton pRipple type=\"button\" class=\"p-button-rounded p-button-text p-button-danger\" icon=\"pi pi-trash\" severity=\"danger\" (click)=\"deleteRecord(record)\"></button> -->\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n</div>\r\n\r\n<p-confirmDialog [style]=\"{ width: '450px' }\"></p-confirmDialog>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ModelService } from './model.service';\r\nimport { ModelEntity } from './model.model';\r\nimport { NgForm, FormBuilder } from '@angular/forms';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { ConfirmationService, MessageService } from 'primeng/api';\r\nimport { ApiService } from '../shared/ApiService.service';\r\n\r\n@Component({\r\n  selector: 'app-model',\r\n  templateUrl: './model.component.html',\r\n  styleUrls: ['./model.component.css'],\r\n  providers: [ModelService, MessageService, ConfirmationService]\r\n})\r\nexport class ModelComponent implements OnInit {\r\n\r\n  records!: ModelEntity[];\r\n  @ViewChild('f', { static: false })\r\n  slForm!: NgForm;\r\n\r\n  modalVisible: boolean = false;\r\n  subscription!: Subscription;\r\n\r\n  recordsCurrency!: any[];\r\n  selectedCurrency!: number;\r\n\r\n  constructor(private apiService: ApiService, private modelService: ModelService, private messageService: MessageService, private confirmationService: ConfirmationService, private modalService: NgbModal, private fb: FormBuilder,\r\n    private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.modelService.getRecords();\r\n    this.subscription = this.modelService.recordsChanged.subscribe((records: ModelEntity[]) => {\r\n      this.records = records.sort((a, b) => b.modelSpecCode - a.modelSpecCode);\r\n    });\r\n\r\n    this.apiService.get<any[]>('currencies').subscribe(response => {\r\n      this.recordsCurrency = response;\r\n    });\r\n  }\r\n\r\n  navigateModelAdd() {\r\n    this.router.navigate(['/add-model']);\r\n  }\r\n  \r\n  deleteDialog: boolean = false;\r\n\r\n  showDeleteDialog() {\r\n    this.deleteDialog = true;\r\n  }\r\n\r\n  editMode = false;\r\n  clonedRecords: { [s: number]: ModelEntity; } = {};\r\n\r\n  onRowEditInit(record: ModelEntity) {\r\n    this.clonedRecords[record.modelSpecCode] = { ...record };\r\n  }\r\n\r\n  onRowEditSave(index: number, record: ModelEntity) {\r\n    this.modelService.updateRecord(index, record);\r\n    this.ngOnInit(); \r\n    this.editMode = false;\r\n    delete this.clonedRecords[record.modelSpecCode];\r\n    this.messageService.add({ severity: 'success', summary: 'Success', detail: `Model ${record.modelSpecCode} Updated Successfully` });\r\n  }\r\n\r\n  onRowEditCancel(record: ModelEntity, index: number) {\r\n    this.records[index] = this.clonedRecords[record.modelSpecCode];\r\n    delete this.clonedRecords[record.modelSpecCode];\r\n  }\r\n\r\n  navigateServices(record: ModelEntity) {\r\n    const navigationExtras: NavigationExtras = {\r\n      state: {\r\n        Record: record\r\n      }\r\n    };\r\n    this.router.navigate(['/modelSpecDetails'], navigationExtras);\r\n  }\r\n\r\n  deleteRecord(record: ModelEntity) {\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure you want to delete the selected record?',\r\n      header: 'Confirm',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.apiService.delete<ModelEntity>('modelspecs', record.modelSpecCode).subscribe(response => {\r\n          console.log('model spec deleted:', response);\r\n          this.modelService.getRecords();\r\n        });\r\n        this.messageService.add({ severity: 'success', summary: 'Successfully', detail: 'Deleted', life: 3000 });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\r\n","export class ModelEntity {\r\n    public modelSpecCode!: number;\r\n    public modelSpecDetailsCode: number[]= [];\r\n    public currencyCode:number;\r\n    public modelServSpec: string;\r\n    public blockingIndicator: boolean;\r\n    public serviceSelection: boolean;\r\n    public description: string;\r\n    public searchTerm: string;\r\n   \r\n    constructor(currencyCode:number,modelServSpec: string,blockingIndicator: boolean,serviceSelection: boolean,\r\n        description: string,searchTerm: string\r\n    ) {\r\n       this.currencyCode = currencyCode;\r\n      this.modelServSpec=modelServSpec;\r\n      this.blockingIndicator=blockingIndicator;\r\n      this.serviceSelection=serviceSelection; \r\n      this.description=description;\r\n      this.searchTerm=searchTerm;\r\n    }\r\n}","<!-- <p-messages position=\"top-left\" *ngIf=\"successMessage\" [(value)]=\"messages\" [enableService]=\"false\"></p-messages> -->\r\n<p-toast></p-toast>\r\n<!-- <div class=\"card mt-5\">\r\n<form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\">\r\n    <div class=\" formgrid grid\">\r\n        <div class=\"field col \">\r\n            <label for=\"modelServSpec\" class=\"mb-2 md:mb-0\">ModelServSpec:</label>\r\n            <div class=\"col-12 md:col-10 input-group\">\r\n                <input id=\"modelServSpec\" name=\"modelServSpec\" required type=\"text\" class=\"form-control\" ngModel\r\n                    class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary \">\r\n            </div>\r\n        </div>\r\n        <div class=\"field col \">\r\n            <label for=\"blockingIndicator\" class=\"mb-2 md:mb-0\">BlockingIndicator:</label>\r\n            <div class=\"col-12 md:col-10 input-group\">\r\n                <input id=\"blockingIndicator\" name=\"blockingIndicator\" type=\"checkbox\" ngModel>\r\n            </div>\r\n        </div>\r\n        <div class=\"field col \">\r\n          <label for=\"serviceSelection\" class=\"mb-2 md:mb-0\">ServiceSelection:</label>\r\n            <div class=\"col-12 md:col-10 input-group\">\r\n                <input id=\"serviceSelection\" name=\"serviceSelection\" type=\"checkbox\" ngModel>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <p-card header=\"General Data:\" class=\"row mt-2\">\r\n        <div class=\"field grid\">\r\n            <label for=\"description\" class=\"col-12 mb-2 md:col-2 md:mb-0\">Description:</label>\r\n            <div class=\"col-12 md:col-10 input-group\">\r\n                <input id=\"description\" name=\"description\" required type=\"text\" class=\"form-control\" ngModel\r\n                    class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary\">\r\n            </div>\r\n        </div>\r\n        <div class=\"field grid\">\r\n            <label for=\"searchTerm\" class=\"col-12 mb-2 md:col-2 md:mb-0\">SearchTerm:</label>\r\n            <div class=\"col-12 md:col-10 input-group\">\r\n                <input id=\"searchTerm\" name=\"searchTerm\" type=\"text\" class=\"form-control\" ngModel\r\n                    class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary\">\r\n            </div>\r\n        </div>\r\n        <div class=\"field grid\">\r\n            <label for=\"currency\" class=\"col-12 mb-2 md:col-2 md:mb-0\">Currency:</label>\r\n            <p-dropdown [options]=\"recordsCurrency\" [(ngModel)]=\"selectedCurrency\"  [ngModelOptions]=\"{standalone: true}\"\r\n            optionValue=\"code\" optionLabel=\"code\"\r\n                [filter]=\"true\" [filterFields]=\"['code','description']\" [showClear]=\"true\" placeholder=\"Select Currency\">\r\n                <ng-template let-record pTemplate=\"item\">\r\n                    <div class=\"flex align-items-center gap-2\">\r\n                        <div>{{ record.code }}::{{ record.description }}</div>\r\n                    </div>\r\n                </ng-template>\r\n            </p-dropdown>\r\n        </div>\r\n    </p-card>\r\n    <div class=\" text-center m-3\">\r\n        <button pButton data-dismiss=\"modal\" icon=\"pi pi-save\" [disabled]=\"!f.valid\">Add Model</button>\r\n    </div>\r\n</form>\r\n</div> -->\r\n\r\n<div class=\"card mt-5\">\r\n    <form [formGroup]=\"modelForm\" (ngSubmit)=\"onSubmit(modelForm)\">\r\n        <div class=\"row m-2\">\r\n            <div class=\"field col-12 md:col-3\">\r\n                <label for=\"modelServSpec\">ModelServ.Spec:</label>\r\n                <div class=\"input-group\">\r\n                    <input id=\"modelServSpec\" class=\"rounded-input\" name=\"modelServSpec\" type=\"text\" formControlName=\"modelServSpec\"\r\n                        class=\"form-control text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary \">\r\n                </div>\r\n            </div>\r\n            <div class=\"field col-12 md:col-3\">\r\n                <label for=\"blockingIndicator\">BlockingIndicator:</label>\r\n                <div class=\"input-group\">\r\n                    <input id=\"blockingIndicator\" name=\"blockingIndicator\" type=\"checkbox\" formControlName=\"blockingIndicator\">\r\n                </div>\r\n            </div>\r\n            <div class=\"field col-12 md:col-3\">\r\n                <label for=\"serviceSelection\">ServiceSelection:</label>\r\n                <div class=\"input-group\">\r\n                    <input id=\"serviceSelection\" name=\"serviceSelection\" type=\"checkbox\" formControlName=\"serviceSelection\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <p-card header=\"General Data:\" class=\"row mt-2\">\r\n            <div class=\"field grid\">\r\n                <label for=\"description\" class=\"col-12 mb-2 md:col-2 md:mb-0\">Description:<span style=\"color: red;\">*</span></label>\r\n                <div class=\"col-12 md:col-10 input-group\">\r\n                    <input id=\"description\" class=\"rounded-input\" name=\"description\"  type=\"text\"  formControlName=\"description\"\r\n                        class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary\">\r\n\r\n                        <div class=\"text-danger m-1\"\r\n                *ngIf=\"modelForm.get('description')?.errors?.['required'] && modelForm.get('description')?.touched\">\r\n                Description is required\r\n            </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"field grid\">\r\n                <label for=\"searchTerm\" class=\"col-12 mb-2 md:col-2 md:mb-0\">SearchTerm:</label>\r\n                <div class=\"col-12 md:col-10 input-group\">\r\n                    <input id=\"searchTerm\" class=\"rounded-input\" name=\"searchTerm\" type=\"text\" formControlName=\"searchTerm\"\r\n                        class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary\">\r\n                </div>\r\n            </div>\r\n            <div class=\"field grid\">\r\n                <label for=\"currency\" class=\"col-12 mb-2 md:col-2 md:mb-0\">Currency:</label>\r\n                <p-dropdown [options]=\"recordsCurrency\"  formControlName=\"currencyCode\"\r\n                optionValue=\"code\" optionLabel=\"code\"\r\n                    [filter]=\"true\" [filterFields]=\"['code','description']\" [showClear]=\"true\" placeholder=\"Select Currency\">\r\n                    <ng-template let-record pTemplate=\"item\">\r\n                        <div class=\"flex align-items-center gap-2\">\r\n                            <div>{{ record.code }}::{{ record.description }}</div>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-dropdown>\r\n            </div>\r\n        </p-card>\r\n        \r\n       \r\n     \r\n        <div class=\" text-center m-3\">\r\n            <button pButton data-dismiss=\"modal\" icon=\"pi pi-save\" class=\"rounded-input\" [disabled]=\"modelForm.invalid\">Add Model</button>\r\n        </div>\r\n\r\n        <!-- <div class=\"row mb-3 align-items-start\">\r\n            <div class=\"col\">\r\n            <div class=\"col-auto\">\r\n                <label for=\"modelServSpec\" class=\"col-form-label\">ModelServSpec:</label>\r\n              </div>\r\n              <div class=\"col-auto\">\r\n                <input type=\"text\" id=\"modelServSpec\" class=\"form-control\" >\r\n              </div>\r\n              </div>\r\n              <div class=\"col\">\r\n              <div class=\"col-auto\">\r\n                <label for=\"blockingIndicator\" class=\"col-form-label\">BlockingIndicator:</label>\r\n              </div>\r\n              <div class=\"col-auto\">\r\n                <input type=\"checkbox\" id=\"blockingIndicator\" name=\"blockingIndicator\" >\r\n              </div>\r\n              </div>\r\n              <div class=\"col\">\r\n              <div class=\"col-auto\">\r\n                <label for=\"serviceSelection\" class=\"col-form-label\">ServiceSelection:</label>\r\n              </div>\r\n              <div class=\"col-auto\">\r\n                <input type=\"checkbox\" id=\"serviceSelection\" name=\"serviceSelection\" >\r\n              </div>\r\n              </div>\r\n\r\n        </div> -->\r\n        <!-- <div class=\"mb-3\">\r\n            <label for=\"blockingIndicator\" class=\" mb-2  md:mb-0\">BlockingIndicator:</label>\r\n            <div class=\"col-12 md:col-10 input-group\">\r\n                <input id=\"blockingIndicator\" name=\"blockingIndicator\" type=\"checkbox\" ngModel>\r\n            </div>\r\n        </div>\r\n        <div class=\"mb-3 form-check\">\r\n            <input type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\">\r\n            <label class=\"form-check-label\" for=\"exampleCheck1\">Check me out</label>\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-primary\">Submit</button> -->\r\n    </form>\r\n</div>\r\n\r\n<p-confirmDialog [style]=\"{ width: '450px' }\"></p-confirmDialog>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm, FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ModelService } from '../model.service';\r\nimport { ModelEntity } from '../model.model';\r\nimport { ConfirmationService, Message } from 'primeng/api';\r\nimport { MessageService } from 'primeng/api';\r\nimport { ApiService } from 'src/app/shared/ApiService.service';\r\n\r\n@Component({\r\n  selector: 'app-add-model',\r\n  templateUrl: './add-model.component.html',\r\n  styleUrls: ['./add-model.component.css'],\r\n  providers: [ModelService, MessageService, ConfirmationService]\r\n})\r\nexport class AddModelComponent implements OnInit {\r\n\r\n\r\n  modelForm = new FormGroup({\r\n    modelServSpec: new FormControl(''),\r\n    searchTerm: new FormControl(''),\r\n    description: new FormControl('', [Validators.required]),\r\n    blockingIndicator: new FormControl(false),\r\n    serviceSelection: new FormControl(false),\r\n    currencyCode: new FormControl(0)\r\n  });\r\n\r\n  recordsCurrency!: any[];\r\n\r\n  constructor(private modelService: ModelService, private apiService: ApiService, private messageService: MessageService, private confirmationService: ConfirmationService, private router: Router,) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.apiService.get<any[]>('currencies').subscribe(response => {\r\n      this.recordsCurrency = response;\r\n    });\r\n  }\r\n\r\n  onSubmit(form: FormGroup) {\r\n    const value = form.value;\r\n    const newRecord = new ModelEntity(value.currencyCode,value.modelServSpec,\r\n      value.blockingIndicator, value.serviceSelection,  value.description, value.searchTerm\r\n      );\r\n\r\n    // Remove properties with empty or default values\r\n    const filteredRecord = Object.fromEntries(\r\n      Object.entries(newRecord).filter(([_, value]) => {\r\n        return value !== '' && value !== 0 && value !== undefined && value !== null;\r\n      })\r\n    );\r\n    console.log(filteredRecord);\r\n    this.apiService.post<ModelEntity>('modelspecs', filteredRecord).subscribe({\r\n      next: (res: ModelEntity) => {\r\n        console.log('Model created:', res);\r\n\r\n      }, error: (err) => {\r\n        console.log(err);\r\n\r\n      }, complete: () => {\r\n        this.confirmationService.confirm({\r\n          message: `Model  Added successfully. Click Yes to go to the Main Page.`,\r\n          header: 'Added Successfully',\r\n          icon: 'pi pi-check',\r\n          accept: () => {\r\n            this.router.navigate(['/model']);\r\n          },\r\n          reject: () => {\r\n          }\r\n        });\r\n      }\r\n    })\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { ModelSpecDetails } from './model-details.model';\r\nimport { ApiService } from '../shared/ApiService.service';\r\n\r\n@Injectable()\r\nexport class ModelSpecDetailService {\r\n  recordsChanged = new Subject<ModelSpecDetails[]>();\r\n  startedEditing = new Subject<number>();\r\n  constructor(private apiService: ApiService) { }\r\n  private recordsApi!: ModelSpecDetails[]\r\n\r\n  getRecords() {\r\n    this.apiService.get<ModelSpecDetails[]>('modelspecdetails').subscribe(response => {\r\n      console.log(response);\r\n      this.recordsApi = response;\r\n      this.recordsChanged.next(this.recordsApi);\r\n    });\r\n  }\r\n\r\n  getRecord(index: number): Observable<ModelSpecDetails> {\r\n    return this.apiService.getID<ModelSpecDetails>('modelspecdetails', index);\r\n  }\r\n \r\n  addRecord(record: ModelSpecDetails) {\r\n    this.apiService.post<ModelSpecDetails>('modelspecdetails', record).subscribe((response: ModelSpecDetails) => {\r\n      console.log('modelspecDetail created:', response);\r\n      this.getRecords();\r\n      return response\r\n    });\r\n  }\r\n\r\n  updateRecord(index: number, newRecord: ModelSpecDetails) {\r\n    this.apiService.put<ModelSpecDetails>('modelspecdetails', index, newRecord).subscribe(response => {\r\n      console.log('modelspecDetail updated:',response);\r\n      this.getRecords()\r\n    });\r\n  }\r\n\r\n  deleteRecord(index: any) {\r\n    this.apiService.delete<ModelSpecDetails>('modelspecdetails', index).subscribe(response => {\r\n      console.log('model spec deleted:',response);\r\n      this.getRecords()\r\n    });\r\n  }\r\n}","<p-card class=\"m-2\">\r\n    <div class=\"row\">\r\n        <div class=\"form-group col-6\">\r\n            <label for=\"shortText\" class=\"fw-bold mr-2\">Sh.Text:</label>\r\n            <ng-container *ngIf=\"modelSpecRecord\">\r\n                <div class=\"inline-element border border-1 border-black rounded-input\">\r\n                    {{ modelSpecRecord.description }}\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n        <div class=\"form-group col-6\">\r\n            <label for=\"totalValue\" class=\"fw-bold mr-2\">TotalValue:</label>\r\n            <div class=\"inline-element border border-1 border-black rounded-input \">\r\n                {{totalValue}}\r\n            </div>\r\n            <ng-container *ngIf=\"modelSpecRecord\">\r\n                <div class=\"inline-element border border-1 border-black rounded-input\">\r\n                    {{ modelSpecRecord.currencyCode}}\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n</p-card>\r\n\r\n<p-toolbar styleClass=\"mb-4 gap-2\">\r\n    <ng-template pTemplate=\"right\">\r\n        <button pButton label=\"Detail\" (click)=\"showDialog()\" size=\"small\" class=\"m-2 edit-button\"></button>\r\n        <button pButton pRipple icon=\"pi pi-trash\" (click)=\"deleteRecord()\" class=\"p-button-rounded m-2 \"></button>\r\n        <button pButton label=\"Condition\" size=\"small\" class=\"m-2\"></button>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"left\">\r\n        <!-- <div class=\"field\">\r\n            <input pInputText type=\"number\" placeholder=\"Search for Line...\"\r\n                class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary \"\r\n                [(ngModel)]=\"searchValue\" (input)=\"onSearchInputChange()\" />\r\n        </div> -->\r\n        <div class=\"field\">\r\n            <input pInputText type=\"number\" placeholder=\"Search for Line...\"\r\n                class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary \"\r\n                [(ngModel)]=\"searchTerm\" />\r\n        </div>\r\n    </ng-template>\r\n</p-toolbar>\r\n\r\n<p-toast></p-toast>\r\n\r\n<p-table [value]=\"records\" [scrollable]=\"true\" styleClass=\"p-datatable-gridlines\" responsiveLayout=\"stack\"\r\n    [breakpoint]=\"'960px'\" dataKey=\"modelSpecDetailsCode\" editMode=\"row\" [tableStyle]=\"{'min-width': '50rem'}\"\r\n    [responsive]=\"true\">\r\n    <ng-template pTemplate=\"header\">\r\n        <tr>\r\n            <th>\r\n                <p-checkbox (onChange)=\"onSelectAllRecords($event)\" [value]=\"records\"></p-checkbox>\r\n            </th>\r\n            <th fd-table-cell>Line</th>\r\n            <!-- <th fd-table-cell>Del.Ind</th> -->\r\n            <th fd-table-cell pResizableColumn>Service.No</th>\r\n            <th fd-table-cell pResizableColumn>ShortText</th>\r\n            <th fd-table-cell pResizableColumn>Quantity</th>\r\n            <th fd-table-cell>Formula</th>\r\n            <th fd-table-cell>Formula Parameters</th>\r\n            <th fd-table-cell>GrossPrice</th>\r\n            <th fd-table-cell>Net Value</th>\r\n            <th fd-table-cell pResizableColumn>UnitOfMeasure<span style=\"color: red;margin: 5px;\">*</span></th>\r\n            <th fd-table-cell>Crcy</th>\r\n            <th fd-table-cell>OverF.Percentage</th>\r\n            <th fd-table-cell>PriceChangeAllowed</th>\r\n            <th fd-table-cell pResizableColumn>UnlimitedOverF</th>\r\n            <th fd-table-cell pResizableColumn>PricePerUnitOfMeasurement</th>\r\n            <th fd-table-cell pResizableColumn>Mat Group</th>\r\n            <th fd-table-cell>Service Type</th>\r\n            <th fd-table-cell pResizableColumn>External.Service.No</th>\r\n            <th fd-table-cell pResizableColumn>Service Text</th>\r\n            <th fd-table-cell pResizableColumn>Line Text</th>\r\n            <th fd-table-cell>PersonnelNumber</th>\r\n            <th fd-table-cell>Line Type</th>\r\n            <th fd-table-cell>Line Number</th>\r\n            <th fd-table-cell pResizableColumn>Alt</th>\r\n            <th fd-table-cell>Bidder's Line</th>\r\n            <th fd-table-cell>Supp.Line</th>\r\n            <th fd-table-cell>Cstg Ls</th>\r\n            <th fd-table-cell>Actions</th>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" class=\"m-3\" let-record let-editing=\"editing\" let-ri=\"rowIndex\">\r\n        <tr [pEditableRow]=\"record\" *ngIf=\"isMatch(record, ri)\">\r\n            <td>\r\n                <p-checkbox [(ngModel)]=\"selectedAllRecords\" (onChange)=\"onRecordSelectionChange($event, record)\"\r\n                    [value]=\"record\"></p-checkbox>\r\n            </td>\r\n            <td>\r\n                {{ rowIndex + ri + 1 }}\r\n            </td>\r\n            <!-- <td pEditableColumn>\r\n                <p-cellEditor>\r\n                    <ng-template pTemplate=\"input\">\r\n                        <input pInputText type=\"checkbox\" [(ngModel)]=\"record.deletionIndicator\">\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"output\">\r\n                        {{record.deletionIndicator}}\r\n                    </ng-template>\r\n                </p-cellEditor>\r\n            </td> -->\r\n            <td pEditableColumn>\r\n                <p-cellEditor>\r\n                    <ng-template pTemplate=\"input\">\r\n                        <p-dropdown [options]=\"recordsServiceNumber\" [(ngModel)]=\"record.serviceNumberCode\"\r\n                            [ngModelOptions]=\"{standalone: true}\" optionValue=\"serviceNumberCode\"\r\n                            optionLabel=\"description\" [filter]=\"true\" [filterFields]=\"['searchTerm','description']\"\r\n                            [showClear]=\"true\" placeholder=\"Select SeviceNumber\" [appendTo]=\"'body'\"\r\n                            (onChange)=\"onServiceNumberUpdateChange($event)\"\r\n                             [virtualScroll]=\"true\" [virtualScrollItemSize]=\"40\">\r\n                            <ng-template let-record pTemplate=\"item\">\r\n                                <div class=\"flex align-items-center gap-2\">\r\n                                    <div>{{ record.searchTerm }}::{{ record.description }}</div>\r\n                                </div>\r\n                            </ng-template>\r\n                        </p-dropdown>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"output\">\r\n                        {{record.serviceNumberCode}}\r\n                    </ng-template>\r\n                </p-cellEditor>\r\n            </td>\r\n            <td>\r\n                <p-cellEditor>\r\n                    <ng-template pTemplate=\"input\">\r\n                        <ng-container *ngIf=\"!updateSelectedServiceNumberRecord\">\r\n                            <input pInputText class=\"rounded-input\" type=\"text\" [(ngModel)]=\"record.shortText\">\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"updateShortTextChangeAllowed && updateSelectedServiceNumberRecord\">\r\n                            <input pInputText class=\"rounded-input\" type=\"text\" [ngModel]=\"updateSelectedServiceNumberRecord.description\"\r\n                                (ngModelChange)=\"updateShortText = $event\">\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"!updateShortTextChangeAllowed && updateSelectedServiceNumberRecord\">\r\n                            {{ updateSelectedServiceNumberRecord.description }}\r\n                        </ng-container>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"output\">\r\n                        {{ record.shortText }}\r\n                    </ng-template>\r\n                </p-cellEditor>\r\n            </td>\r\n            <td>\r\n                <p-cellEditor>\r\n                    <ng-template pTemplate=\"input\">\r\n                        <ng-container *ngIf=\"!updatedFormulaRecord\">\r\n                            <input pInputNumber class=\"rounded-input\" [min]=\"0\" type=\"number\" [(ngModel)]=\"record.quantity\">\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"updatedFormulaRecord && resultAfterTestUpdate\">\r\n                            {{ resultAfterTestUpdate}}\r\n                        </ng-container>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"output\">\r\n                        {{record.quantity }}\r\n                    </ng-template>\r\n                </p-cellEditor>\r\n            </td>\r\n            <td pEditableColumn>\r\n                <p-cellEditor>\r\n                    <ng-template pTemplate=\"input\">\r\n                        <p-dropdown [options]=\"recordsFormula\" [(ngModel)]=\"record.formulaCode\"\r\n                            [ngModelOptions]=\"{standalone: true}\" optionValue=\"formula\" optionLabel=\"formula\"\r\n                            [filter]=\"true\" [filterFields]=\"['formula','description']\" [showClear]=\"true\"\r\n                            [appendTo]=\"'body'\" placeholder=`{{record.formulaCode}}`\r\n                             (onChange)=\"onFormulaUpdateSelect($event)\"\r\n                             [virtualScroll]=\"true\" [virtualScrollItemSize]=\"40\">\r\n                            <ng-template let-record pTemplate=\"item\">\r\n                                <div class=\"flex align-items-center gap-2\">\r\n                                    <div>{{ record.formula }}::{{ record.description }}</div>\r\n                                </div>\r\n                            </ng-template>\r\n                        </p-dropdown>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"output\">\r\n                        {{record.formulaCode }}\r\n                    </ng-template>\r\n                </p-cellEditor>\r\n            </td>\r\n            <td>\r\n                <button class=\"mb-2\" (click)=\"openPopupUpdate()\">Enter Parameters</button>\r\n                <!-- <ng-container *ngIf=\"showPopupUpdate && updatedFormulaRecord \">\r\n                    <div class=\"popup\">\r\n                        <h3>Enter Parameters</h3>\r\n                        <div *ngFor=\"let parameterId of updatedFormulaRecord.parameterIds\">\r\n                            <label class=\"form-label\">{{ parameterId }}:</label>\r\n                            <input pInputNumber class=\"form-input\" type=\"number\" [min]=\"0\"\r\n                                [(ngModel)]=\"parameterValuesUpdate[parameterId]\">\r\n                        </div>\r\n                        <button class=\"form-button\" (click)=\"saveParameters()\">Save</button>\r\n                    </div>\r\n                </ng-container> -->\r\n                <!-- <ng-container *ngIf=\"!updatedFormulaRecord \">\r\n                    Formula Parameters\r\n                </ng-container> -->\r\n            </td>\r\n            <td>\r\n                <p-cellEditor>\r\n                    <ng-template pTemplate=\"input\">\r\n                        <input pInputNumber class=\"rounded-input\" [min]=\"0\" type=\"number\" [(ngModel)]=\"record.grossPrice\">\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"output\">\r\n                        {{record.grossPrice }}\r\n                    </ng-template>\r\n                </p-cellEditor>\r\n            </td>\r\n            <td>\r\n                <p-cellEditor>\r\n                    <ng-template pTemplate=\"input\">\r\n                        <ng-container *ngIf=\"updatedFormulaRecord && resultAfterTestUpdate\">\r\n                            {{resultAfterTestUpdate * record.grossPrice}}\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"!updatedFormulaRecord\">\r\n                            {{ record.quantity * record.grossPrice }}\r\n                        </ng-container>\r\n                        <!-- <input pInputText type=\"number\" [(ngModel)]=\"record.netValue\"> -->\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"output\">\r\n                        {{record.netValue }}\r\n                    </ng-template>\r\n                </p-cellEditor>\r\n            </td>\r\n            <td pEditableColumn>\r\n                <p-cellEditor>\r\n                    <ng-template pTemplate=\"input\">\r\n                        <ng-container *ngIf=\"updateSelectedServiceNumberRecord\">\r\n                            {{ updateSelectedServiceNumberRecord.baseUnitOfMeasurement }}\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"!updateSelectedServiceNumberRecord\">\r\n                            <p-dropdown [options]=\"recordsUnitOfMeasure\" [(ngModel)]=\"record.unitOfMeasurementCode\"\r\n                                [ngModelOptions]=\"{standalone: true}\" optionValue=\"code\"\r\n                                optionLabel=\"code\" [filter]=\"true\" [filterFields]=\"['code','description']\"\r\n                                [showClear]=\"true\" placeholder=`{{record.unitOfMeasurementCode}}` [required]=\"true\"\r\n                                [appendTo]=\"'body'\" [virtualScroll]=\"true\" [virtualScrollItemSize]=\"40\">\r\n                                <ng-template let-record pTemplate=\"item\">\r\n                                    <div class=\"flex align-items-center gap-2\">\r\n                                        <!-- <div>{{ record.UnitOfMeasureLongName }}::{{ record.UnitOfMeasureName }}</div> -->\r\n                                        <div>{{ record.code }}::{{ record.description }}</div>\r\n                                    </div>\r\n                                </ng-template>\r\n                            </p-dropdown>\r\n                            </ng-container>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"output\">\r\n                        {{record.unitOfMeasurementCode }}\r\n                    </ng-template>\r\n                </p-cellEditor>\r\n            </td>\r\n\r\n            <td>\r\n                <ng-container *ngIf=\"modelSpecRecord\">\r\n                    {{ modelSpecRecord.currencyCode }}\r\n                </ng-container>\r\n            </td>\r\n            <td>\r\n                <p-cellEditor>\r\n                    <ng-template pTemplate=\"input\">\r\n                        <input pInputNumber class=\"rounded-input\" [min]=\"0\" type=\"number\" [(ngModel)]=\"record.overFulfilmentPercentage\">\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"output\">\r\n                        {{record.overFulfilmentPercentage }}\r\n                    </ng-template>\r\n                </p-cellEditor>\r\n            </td>\r\n\r\n            <td>\r\n                <p-cellEditor>\r\n                    <ng-template pTemplate=\"input\">\r\n                        <input pInputText type=\"checkbox\" [(ngModel)]=\"record.priceChangedAllowed\">\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"output\">\r\n                        {{record.priceChangedAllowed }}\r\n                    </ng-template>\r\n                </p-cellEditor>\r\n            </td>\r\n            <td>\r\n                <p-cellEditor>\r\n                    <ng-template pTemplate=\"input\">\r\n                        <input pInputText type=\"checkbox\" [(ngModel)]=\"record.unlimitedOverFulfillment\">\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"output\">\r\n                        {{record.unlimitedOverFulfillment}}\r\n                    </ng-template>\r\n                </p-cellEditor>\r\n            </td>\r\n            <td>\r\n                <p-cellEditor>\r\n                    <ng-template pTemplate=\"input\">\r\n                        <input pInputNumber class=\"rounded-input\" [min]=\"0\" type=\"number\" [(ngModel)]=\"record.pricePerUnitOfMeasurement\">\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"output\">\r\n                        {{record.pricePerUnitOfMeasurement }}\r\n                    </ng-template>\r\n                </p-cellEditor>\r\n            </td>\r\n            <td pEditableColumn>\r\n                <p-cellEditor>\r\n                    <ng-template pTemplate=\"input\">\r\n                        <ng-container *ngIf=\"updateSelectedServiceNumberRecord\">\r\n                            {{ updateSelectedServiceNumberRecord.materialGroupCode }}\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"!updateSelectedServiceNumberRecord\">\r\n                            <p-dropdown [options]=\"recordsMatGrp\" [(ngModel)]=\"record.materialGroupCode\"\r\n                                [ngModelOptions]=\"{standalone: true}\" optionValue=\"code\" optionLabel=\"code\"\r\n                                [filter]=\"true\" [filterFields]=\"['code','description']\" [showClear]=\"true\"\r\n                                [virtualScroll]=\"true\" [virtualScrollItemSize]=\"40\" placeholder=`{{record.materialGroupCode}}` [appendTo]=\"'body'\">\r\n                                <ng-template let-record pTemplate=\"item\">\r\n                                    <div class=\"flex align-items-center gap-2\">\r\n                                        <div>{{ record.code }}::{{ record.description }}</div>\r\n                                    </div>\r\n                                </ng-template>\r\n                            </p-dropdown>\r\n                        </ng-container>\r\n                    </ng-template>\r\n\r\n                    <ng-template pTemplate=\"output\">\r\n                        {{record.materialGroupCode }}\r\n                    </ng-template>\r\n                </p-cellEditor>\r\n            </td>\r\n            <td pEditableColumn>\r\n                <p-cellEditor>\r\n                    <ng-template pTemplate=\"input\">\r\n                        <ng-container *ngIf=\"updateSelectedServiceNumberRecord\">\r\n                            {{ updateSelectedServiceNumberRecord.serviceTypeCode}}\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"!updateSelectedServiceNumberRecord\">\r\n                            <p-dropdown [options]=\"recordsServiceType\" [(ngModel)]=\"record.serviceTypeCode\"\r\n                                [ngModelOptions]=\"{standalone: true}\" optionValue=\"serviceId\"\r\n                                optionLabel=\"serviceId\" [filter]=\"true\" [filterFields]=\"['serviceId','description']\"\r\n                                [showClear]=\"true\" [virtualScroll]=\"true\" [virtualScrollItemSize]=\"40\"\r\n                                placeholder=`{{record.serviceTypeCode}}` [appendTo]=\"'body'\">\r\n                                <ng-template let-record pTemplate=\"item\">\r\n                                    <div class=\"flex align-items-center gap-2\">\r\n                                        <div>{{ record.serviceId }}::{{ record.description }}</div>\r\n                                    </div>\r\n                                </ng-template>\r\n                            </p-dropdown>\r\n                        </ng-container>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"output\">\r\n                        {{record.serviceTypeCode }}\r\n                    </ng-template>\r\n                </p-cellEditor>\r\n            </td>\r\n            <td>\r\n                <p-cellEditor>\r\n                    <ng-template pTemplate=\"input\">\r\n                        <input pInputText class=\"rounded-input\" type=\"text\" [(ngModel)]=\"record.externalServiceNumber\">\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"output\">\r\n                        {{record.externalServiceNumber }}\r\n                    </ng-template>\r\n                </p-cellEditor>\r\n            </td>\r\n\r\n            <td>\r\n                <p-cellEditor>\r\n                    <ng-template pTemplate=\"input\">\r\n                        <ng-container *ngIf=\"updateSelectedServiceNumberRecord\">\r\n                            {{ updateSelectedServiceNumberRecord.serviceText }}\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"!updateSelectedServiceNumberRecord\">\r\n                            <input pInputText class=\"rounded-input\" type=\"text\" [(ngModel)]=\"record.serviceText\">\r\n                        </ng-container>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"output\">\r\n                        {{record.serviceText }}\r\n                    </ng-template>\r\n                </p-cellEditor>\r\n            </td>\r\n            <td>\r\n                <p-cellEditor>\r\n                    <ng-template pTemplate=\"input\">\r\n                        <input pInputText class=\"rounded-input\" type=\"text\" [(ngModel)]=\"record.lineText\">\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"output\">\r\n                        {{record.lineText }}\r\n                    </ng-template>\r\n                </p-cellEditor>\r\n            </td>\r\n            <td pEditableColumn>\r\n                <p-cellEditor>\r\n                    <ng-template pTemplate=\"input\">\r\n                        <p-dropdown [options]=\"recordsPersonnelNumber\" [(ngModel)]=\"record.personnelNumberCode\"\r\n                            [ngModelOptions]=\"{standalone: true}\" optionValue=\"code\" optionLabel=\"code\"\r\n                            [filter]=\"true\" [filterFields]=\"['code','description']\" [showClear]=\"true\"\r\n                            placeholder=`{{record.personnelNumberCode}}` [appendTo]=\"'body'\"\r\n                            [virtualScroll]=\"true\" [virtualScrollItemSize]=\"40\">\r\n                            <ng-template let-record pTemplate=\"item\">\r\n                                <div class=\"flex align-items-center gap-2\">\r\n                                    <div>{{ record.code }}::{{ record.description }}</div>\r\n                                </div>\r\n                            </ng-template>\r\n                        </p-dropdown>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"output\">\r\n                        {{record.personnelNumberCode }}\r\n                    </ng-template>\r\n                </p-cellEditor>\r\n            </td>\r\n            <td pEditableColumn>\r\n                <p-cellEditor>\r\n                    <ng-template pTemplate=\"input\">\r\n                        <p-dropdown [options]=\"recordsLineType\" [(ngModel)]=\"record.lineTypeCode\"\r\n                            [ngModelOptions]=\"{standalone: true}\" optionValue=\"code\" optionLabel=\"code\"\r\n                            [filter]=\"true\" [filterFields]=\"['code','description']\" [showClear]=\"true\"\r\n                            placeholder=`{{record.lineTypeCode}}` [appendTo]=\"'body'\"\r\n                            [virtualScroll]=\"true\" [virtualScrollItemSize]=\"40\">\r\n                            <ng-template let-record pTemplate=\"item\">\r\n                                <div class=\"flex align-items-center gap-2\">\r\n                                    <div>{{ record.code }}::{{ record.description }}</div>\r\n                                </div>\r\n                            </ng-template>\r\n                        </p-dropdown>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"output\">\r\n                        {{record.lineTypeCode }}\r\n                    </ng-template>\r\n                </p-cellEditor>\r\n            </td>\r\n\r\n\r\n            <td>\r\n                <p-cellEditor>\r\n                    <ng-template pTemplate=\"input\">\r\n                        <input pInputText class=\"rounded-input\" type=\"text\" [(ngModel)]=\"record.lineNumber\">\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"output\">\r\n                        {{record.lineNumber }}\r\n                    </ng-template>\r\n                </p-cellEditor>\r\n            </td>\r\n            <td>\r\n                <p-cellEditor>\r\n                    <ng-template pTemplate=\"input\">\r\n                        <input pInputText class=\"rounded-input\" type=\"text\" [(ngModel)]=\"record.alternatives\">\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"output\">\r\n                        {{record.alternatives }}\r\n                    </ng-template>\r\n                </p-cellEditor>\r\n            </td>\r\n            <td>\r\n                <p-cellEditor>\r\n                    <ng-template pTemplate=\"input\">\r\n                        <input pInputText type=\"checkbox\" [(ngModel)]=\"record.biddersLine\">\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"output\">\r\n                        {{record.biddersLine }}\r\n                    </ng-template>\r\n                </p-cellEditor>\r\n            </td>\r\n            <td>\r\n                <p-cellEditor>\r\n                    <ng-template pTemplate=\"input\">\r\n                        <input pInputText type=\"checkbox\" [(ngModel)]=\"record.supplementaryLine\">\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"output\">\r\n                        {{record.supplementaryLine }}\r\n                    </ng-template>\r\n                </p-cellEditor>\r\n            </td>\r\n            <td>\r\n                <p-cellEditor>\r\n                    <ng-template pTemplate=\"input\">\r\n                        <input pInputText type=\"checkbox\" [(ngModel)]=\"record.lotSizeForCostingIsOne\">\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"output\">\r\n                        {{record.lotSizeForCostingIsOne }}\r\n                    </ng-template>\r\n                </p-cellEditor>\r\n            </td>\r\n            <td>\r\n                <div class=\"flex align-items-center justify-content-center gap-2\">\r\n                    <button *ngIf=\"!editing\" pButton pRipple type=\"button\" pInitEditableRow icon=\"pi pi-pencil\"\r\n                        (click)=\"onRowEditInit(record)\" class=\"p-button-rounded p-button-text\"></button>\r\n                    <button *ngIf=\"editing\" pButton pRipple type=\"button\" pSaveEditableRow icon=\"pi pi-check\"\r\n                        (click)=\"onRowEditSave(record.modelSpecDetailsCode,record)\"\r\n                        class=\"p-button-rounded p-button-text p-button-success mr-2\"></button>\r\n                    <button *ngIf=\"editing\" pButton pRipple type=\"button\" pCancelEditableRow icon=\"pi pi-times\"\r\n                        (click)=\"onRowEditCancel(record, ri)\"\r\n                        class=\"p-button-rounded p-button-text p-button-danger\"></button>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    </ng-template>\r\n\r\n    <ng-template pTemplate=\"footer\" class=\"m-3\">\r\n        <tr>\r\n            <td>\r\n                <p-checkbox [value]=\"newService\"></p-checkbox>\r\n            </td>\r\n\r\n            <td>\r\n            </td>\r\n\r\n            <!-- <td>\r\n                <input name=\"deletionIndicator\" type=\"checkbox\" [(ngModel)]=\"newService.deletionIndicator\">\r\n            </td> -->\r\n\r\n            <td>\r\n                <p-dropdown [options]=\"recordsServiceNumber\" [(ngModel)]=\"selectedServiceNumber\"\r\n                    [ngModelOptions]=\"{standalone: true}\" optionValue=\"serviceNumberCode\" optionLabel=\"description\"\r\n                    [filter]=\"true\" [filterFields]=\"['searchTerm','description']\" [showClear]=\"true\"\r\n                    placeholder=\"Select SeviceNumber\" (onChange)=\"onServiceNumberChange($event)\"\r\n                     [appendTo]=\"'body'\"  [virtualScroll]=\"true\" [virtualScrollItemSize]=\"40\">\r\n                    <ng-template let-record pTemplate=\"item\">\r\n                        <div class=\"flex align-items-center gap-2\">\r\n                            <div>{{ record.searchTerm }}::{{ record.description }}</div>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-dropdown>\r\n            </td>\r\n\r\n            <td>\r\n                <ng-container *ngIf=\"!selectedServiceNumberRecord\">\r\n                    <input pInputText class=\"rounded-input\" type=\"text\" [(ngModel)]=\"newService.shortText\">\r\n                </ng-container>\r\n                <ng-container *ngIf=\"shortTextChangeAllowed && selectedServiceNumberRecord\">\r\n                    <input pInputText class=\"rounded-input\" type=\"text\" [(ngModel)]=\"selectedServiceNumberRecord.description\"\r\n                        (ngModelChange)=\"shortText = $event\">\r\n                </ng-container>\r\n                <ng-container *ngIf=\"!shortTextChangeAllowed && selectedServiceNumberRecord\">\r\n                    {{ selectedServiceNumberRecord.description }}\r\n                </ng-container>\r\n                <!-- <input pInputText type=\"text\" [(ngModel)]=\"newService.shortText\"> -->\r\n            </td>\r\n\r\n            <td>\r\n                <ng-container *ngIf=\" selectedFormula && selectedFormulaRecord && resultAfterTest\">\r\n                    {{resultAfterTest}}\r\n                </ng-container>\r\n                <ng-container *ngIf=\"!selectedFormulaRecord\">\r\n                    <input pInputNumber class=\"rounded-input\" name=\"quantity\" type=\"number\" [min]=\"0\" [(ngModel)]=\"newService.quantity\">\r\n                </ng-container>\r\n            </td>\r\n\r\n            <td>\r\n                <p-dropdown [options]=\"recordsFormula\" [(ngModel)]=\"selectedFormula\"\r\n                    [ngModelOptions]=\"{standalone: true}\" optionValue=\"formula\" optionLabel=\"formula\"\r\n                    [filter]=\"true\" [filterFields]=\"['formula','description']\" [showClear]=\"true\"\r\n                    placeholder=\"Select Formula\" [required]=\"true\" (onChange)=\"onFormulaSelect($event)\"\r\n                    [appendTo]=\"'body'\"  [virtualScroll]=\"true\" [virtualScrollItemSize]=\"40\">\r\n                    <ng-template let-record pTemplate=\"item\">\r\n                        <div class=\"flex align-items-center gap-2\">\r\n                            <div>{{ record.formula }}::{{ record.description }}</div>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-dropdown>\r\n            </td>\r\n\r\n            <td>\r\n                <button class=\"mb-2\" (click)=\"openPopup()\">Enter Parameters</button>\r\n                <!-- <ng-container *ngIf=\"showPopup && selectedFormulaRecord \">\r\n                    <div class=\"popup\">\r\n                        <h3>Enter Parameters</h3>\r\n                        <div *ngFor=\"let parameterId of selectedFormulaRecord.parameterIds\">\r\n\r\n                            <label class=\"form-label\">{{ parameterId }}:</label>\r\n                            <input class=\"form-input\" pInputNumber type=\"number\" [min]=\"0\"\r\n                                [(ngModel)]=\"parameterValues[parameterId]\">\r\n                        </div>\r\n                        <button class=\"form-button\" (click)=\"saveParameters()\">Save</button>\r\n                    </div>\r\n                </ng-container> -->\r\n               \r\n            </td>\r\n\r\n            <td>\r\n                <input name=\"grossPrice\" class=\"rounded-input\" pInputNumber type=\"number\" [min]=\"0\" [(ngModel)]=\"newService.grossPrice\">\r\n            </td>\r\n            <td>\r\n                <ng-container *ngIf=\"selectedFormulaRecord && resultAfterTest\">\r\n                    {{resultAfterTest * newService.grossPrice}}\r\n                </ng-container>\r\n                <ng-container *ngIf=\"!selectedFormulaRecord\">\r\n                    {{ newService.quantity * newService.grossPrice }}\r\n                </ng-container>\r\n                <!-- <input name=\"netValue\" type=\"number\" [(ngModel)]=\"newService.netValue\"> -->\r\n            </td>\r\n\r\n            <td>\r\n                <ng-container *ngIf=\"selectedServiceNumberRecord\">\r\n                    {{selectedServiceNumberRecord.baseUnitOfMeasurement}}\r\n                </ng-container>\r\n\r\n                <ng-container *ngIf=\"!selectedServiceNumberRecord\">\r\n                    <p-dropdown [options]=\"recordsUnitOfMeasure\" [(ngModel)]=\"selectedUnitOfMeasure\"\r\n                        [ngModelOptions]=\"{standalone: true}\" optionValue=\"code\" optionLabel=\"code\" [filter]=\"true\"\r\n                        [filterFields]=\"['code','description']\" [showClear]=\"true\" placeholder=\"Select UnitOfMeasure\"\r\n                        [required]=\"true\" [appendTo]=\"'body'\"\r\n                        [virtualScroll]=\"true\" [virtualScrollItemSize]=\"40\">\r\n                        <ng-template let-record pTemplate=\"item\">\r\n                            <div class=\"flex align-items-center gap-2\">\r\n                                <!-- <div>{{ record.UnitOfMeasureLongName }}::{{ record.UnitOfMeasureName }}</div> -->\r\n                                <div>{{ record.code }}::{{ record.description }}</div>\r\n                            </div>\r\n                        </ng-template>\r\n                    </p-dropdown>\r\n                </ng-container>\r\n            </td>\r\n\r\n            <td>\r\n                <ng-container *ngIf=\"modelSpecRecord\">\r\n                    {{ modelSpecRecord.currencyCode }}\r\n                </ng-container>\r\n            </td>\r\n\r\n            <td>\r\n                <input pInputNumber class=\"rounded-input\" name=\"overFulfilmentPercentage\" type=\"number\" [min]=\"0\"\r\n                    [(ngModel)]=\"newService.overFulfilmentPercentage\">\r\n            </td>\r\n\r\n            <td>\r\n                <input name=\"priceChangedAllowed\"  type=\"checkbox\" [(ngModel)]=\"newService.priceChangedAllowed\">\r\n            </td>\r\n\r\n            <td>\r\n                <input name=\"unlimitedOverFulfillment\" type=\"checkbox\"\r\n                    [(ngModel)]=\"newService.unlimitedOverFulfillment\">\r\n            </td>\r\n\r\n            <td>\r\n                <input pInputNumber class=\"rounded-input\" name=\"pricePerUnitOfMeasurement\" type=\"number\" [min]=\"0\"\r\n                    [(ngModel)]=\"newService.pricePerUnitOfMeasurement\">\r\n            </td>\r\n\r\n            <td>\r\n                <!-- <p-dropdown  optionLabel=\"code\"\r\n                    [filter]=\"true\" filterBy=\"code\" [showClear]=\"true\" placeholder=\"Select Mat.Grp\">\r\n                    <ng-template let-country pTemplate=\"item\">\r\n                        <div class=\"flex align-items-center gap-2\">\r\n                            <div>{{ country.code }}::{{ country.description }}</div>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-dropdown> -->\r\n                <ng-container *ngIf=\"selectedServiceNumberRecord\">\r\n                    <!-- {{ selectedServiceNumberRecord.materialGroupCode }} -->\r\n                    {{ selectedServiceNumberRecord.materialGroupCode }}\r\n                </ng-container>\r\n                <ng-container *ngIf=\"!selectedServiceNumberRecord\">\r\n                    <p-dropdown [options]=\"recordsMatGrp\" [(ngModel)]=\"selectedMatGrp\"\r\n                        [ngModelOptions]=\"{standalone: true}\" optionValue=\"code\" optionLabel=\"code\"\r\n                        [filter]=\"true\" [filterFields]=\"['code','description']\" [showClear]=\"true\"\r\n                        placeholder=\"Select MatGrp\" [required]=\"true\" [appendTo]=\"'body'\"\r\n                        [virtualScroll]=\"true\" [virtualScrollItemSize]=\"40\">\r\n                        <ng-template let-record pTemplate=\"item\">\r\n                            <div class=\"flex align-items-center gap-2\">\r\n                                <div>{{ record.code }}::{{ record.description }}</div>\r\n                            </div>\r\n                        </ng-template>\r\n                    </p-dropdown>\r\n                </ng-container>\r\n            </td>\r\n\r\n            <td>\r\n                <ng-container *ngIf=\"selectedServiceNumberRecord\">\r\n                    {{ selectedServiceNumberRecord.serviceTypeCode }}\r\n                </ng-container>\r\n                <ng-container *ngIf=\"!selectedServiceNumberRecord\">\r\n\r\n                    <p-dropdown [options]=\"recordsServiceType\" [(ngModel)]=\"selectedServiceType\"\r\n                        [ngModelOptions]=\"{standalone: true}\" optionValue=\"serviceId\" optionLabel=\"serviceId\"\r\n                        [filter]=\"true\" [filterFields]=\"['serviceId','description']\" [showClear]=\"true\"\r\n                        placeholder=\"Select ServiceType\" [appendTo]=\"'body'\"\r\n                        [virtualScroll]=\"true\" [virtualScrollItemSize]=\"40\">\r\n                        <ng-template let-record pTemplate=\"item\">\r\n                            <div class=\"flex align-items-center gap-2\">\r\n                                <div>{{ record.serviceId }}::{{ record.description }}</div>\r\n                            </div>\r\n                        </ng-template>\r\n                    </p-dropdown>\r\n                </ng-container>\r\n            </td>\r\n\r\n            <td>\r\n                <input pInputText class=\"rounded-input\" name=\"externalServiceNumber\" type=\"text\"\r\n                    [(ngModel)]=\"newService.externalServiceNumber\">\r\n            </td>\r\n\r\n            <td>\r\n                <ng-container *ngIf=\"selectedServiceNumberRecord\">\r\n                    {{ selectedServiceNumberRecord.serviceText }}\r\n                </ng-container>\r\n                <ng-container *ngIf=\"!selectedServiceNumberRecord\">\r\n                    <input pInputText class=\"rounded-input\" type=\"text\" [(ngModel)]=\"newService.serviceText\">\r\n                </ng-container>\r\n            </td>\r\n\r\n            <td>\r\n                <input pInputText class=\"rounded-input\" name=\"lineText\" type=\"text\" [(ngModel)]=\"newService.lineText\">\r\n            </td>\r\n\r\n            <td>\r\n                <p-dropdown [options]=\"recordsPersonnelNumber\" [(ngModel)]=\"selectedPersonnelNumber\"\r\n                    [ngModelOptions]=\"{standalone: true}\" optionValue=\"code\" optionLabel=\"code\"\r\n                    [filter]=\"true\" [filterFields]=\"['code','description']\" [showClear]=\"true\"\r\n                    placeholder=\"Select PersonnelNumber\" [appendTo]=\"'body'\"\r\n                    [virtualScroll]=\"true\" [virtualScrollItemSize]=\"40\">\r\n                    <ng-template let-record pTemplate=\"item\">\r\n                        <div class=\"flex align-items-center gap-2\">\r\n                            <div>{{ record.code }}::{{ record.description }}</div>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-dropdown>\r\n            </td>\r\n\r\n            <td>\r\n                <p-dropdown [options]=\"recordsLineType\" [(ngModel)]=\"selectedLineType\"\r\n                    [ngModelOptions]=\"{standalone: true}\" optionValue=\"code\" optionLabel=\"code\" [filter]=\"true\"\r\n                    [filterFields]=\"['code','description']\" [showClear]=\"true\" placeholder=\"Select LineType\"\r\n                    [appendTo]=\"'body'\" [virtualScroll]=\"true\" [virtualScrollItemSize]=\"40\">\r\n                    <ng-template let-record pTemplate=\"item\">\r\n                        <div class=\"flex align-items-center gap-2\">\r\n                            <div>{{ record.code }}::{{ record.description }}</div>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-dropdown>\r\n            </td>\r\n\r\n            <td>\r\n                <input pInputText class=\"rounded-input\" name=\"lineNumber\" type=\"text\" [(ngModel)]=\"newService.lineNumber\">\r\n            </td>\r\n\r\n            <td>\r\n                <input pInputText class=\"rounded-input\" name=\"alternatives\" type=\"text\" [(ngModel)]=\"newService.alternatives\">\r\n            </td>\r\n\r\n            <td>\r\n                <input name=\"biddersLine\" type=\"checkbox\" [(ngModel)]=\"newService.biddersLine\">\r\n            </td>\r\n\r\n            <td>\r\n                <input name=\"supplementaryLine\" type=\"checkbox\" [(ngModel)]=\"newService.supplementaryLine\">\r\n            </td>\r\n\r\n            <td>\r\n                <input name=\"lotSizeForCostingIsOne\" type=\"checkbox\" [(ngModel)]=\"newService.lotSizeForCostingIsOne\">\r\n\r\n            </td>\r\n\r\n            <td>\r\n                <button pButton type=\"button\" icon=\"pi pi-plus\" class=\"ui-button-info rounded-input\" label=\"Save Line\"\r\n                    [disabled]=\"!selectedServiceNumberRecord && !selectedUnitOfMeasure\" (click)=\"addRow()\">\r\n                </button>\r\n            </td>\r\n        </tr>\r\n    </ng-template>\r\n</p-table>\r\n\r\n<div class=\"popup-container\" *ngIf=\"showPopup && selectedFormulaRecord\">\r\n    <div class=\"popup\">\r\n        <button class=\"close-button\" (click)=\"closePopup()\">×</button>\r\n        <h3>Enter Parameters</h3>\r\n        <div *ngFor=\"let parameterId of selectedFormulaRecord.parameterIds\">\r\n\r\n            <label class=\"form-label\">{{ parameterId }}:</label>\r\n            <input class=\"form-input rounded-input p-2 m-2\" pInputNumber type=\"number\" [min]=\"0\"\r\n                [(ngModel)]=\"parameterValues[parameterId]\">\r\n        </div>\r\n        <button class=\"form-button save-params-button\" (click)=\"saveParameters()\">Save</button>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"popup-container\" *ngIf=\"showPopupUpdate && updatedFormulaRecord \">\r\n    <div class=\"popup\">\r\n        <button class=\"close-button\" (click)=\"closePopup()\">×</button>\r\n        <h3>Enter Parameters</h3>\r\n        <div *ngFor=\"let parameterId of updatedFormulaRecord.parameterIds\">\r\n            <label class=\"form-label\">{{ parameterId }}:</label>\r\n            <input pInputNumber class=\"form-input rounded-input p-2 m-2\" type=\"number\" [min]=\"0\"\r\n                [(ngModel)]=\"parameterValuesUpdate[parameterId]\">\r\n        </div>\r\n        <button class=\"form-button save-params-button\" (click)=\"saveParameters()\">Save</button>\r\n    </div>\r\n</div>\r\n\r\n<p-confirmDialog [style]=\"{ width: '450px' }\"></p-confirmDialog>\r\n\r\n\r\n<div class=\"card flex justify-content-center\">\r\n    <p-dialog header=\"Model Details\" [(visible)]=\"visible\" [modal]=\"true\" [style]=\"{ width: '50vw' }\"\r\n        [draggable]=\"false\" [resizable]=\"true\" [maximizable]=\"true\">\r\n        <ng-template pTemplate=\"header\">\r\n            <div class=\"inline-flex align-items-center justify-content-center gap-2\">\r\n                <span class=\"font-bold white-space-nowrap\">Model Details</span>\r\n            </div>\r\n        </ng-template>\r\n        <div class=\"m-0\">\r\n            <div class=\"fs-6 mb-1\"><span class=\"text-danger\">ModelSpecDetailsCode:</span>\r\n                {{selectedDetailsForDisplay?.modelSpecDetailsCode}}</div>\r\n            <div class=\"fs-6 mb-1\"> <span class=\"text-danger\">Deletion Indicator:</span>\r\n                {{selectedDetailsForDisplay?.deletionIndicator}}</div>\r\n            <div class=\"fs-6 mb-1\"> <span class=\"text-danger\">Service Number:</span>\r\n                {{selectedDetailsForDisplay?.serviceNumberCode}}</div>\r\n            <div class=\"fs-6 mb-1\"><span class=\"text-danger\">shortText: </span> {{selectedDetailsForDisplay?.shortText}}\r\n            </div>\r\n            <div class=\"fs-6 mb-1\"> <span class=\"text-danger\">Quantity:</span> {{selectedDetailsForDisplay?.quantity}}\r\n            </div>\r\n            <div class=\"fs-6 mb-1\"><span class=\"text-danger\">Formula:</span> {{selectedDetailsForDisplay?.formulaCode}}\r\n            </div>\r\n            <div class=\"fs-6 mb-1\"><span class=\"text-danger\">Gross Price:</span>\r\n                {{selectedDetailsForDisplay?.grossPrice}}</div>\r\n            <div class=\"fs-6 mb-1\"><span class=\"text-danger\">Net Value:</span> {{selectedDetailsForDisplay?.netValue}}\r\n            </div>\r\n            <div class=\"fs-6 mb-1\"><span class=\"text-danger\">UnitOfMeasurement:</span>\r\n                {{selectedDetailsForDisplay?.unitOfMeasurementCode}}</div>\r\n\r\n            <div class=\"fs-6 mb-1\"><span class=\"text-danger\">Currency:</span> {{currency?.code}}</div>\r\n            <div class=\"fs-6 mb-1\"><span class=\"text-danger\">OverFulfilmentPercentage:</span>\r\n                {{selectedDetailsForDisplay?.overFulfilmentPercentage}}</div>\r\n            <div class=\"fs-6 mb-1\"><span class=\"text-danger\">PriceChangedAllowed:</span>\r\n                {{selectedDetailsForDisplay?.priceChangedAllowed}}</div>\r\n            <div class=\"fs-6 mb-1\"><span class=\"text-danger\">UnlimitedOverFulfillment: </span>\r\n                {{selectedDetailsForDisplay?.unlimitedOverFulfillment}} </div>\r\n            <div class=\"fs-6 mb-1\"><span class=\"text-danger\">PricePerUnitOfMeasurement:</span>\r\n                {{selectedDetailsForDisplay?.pricePerUnitOfMeasurement}}</div>\r\n            <div class=\"fs-6 mb-1\"><span class=\"text-danger\">MaterialGroupCode:\r\n                </span>{{selectedDetailsForDisplay?.materialGroupCode}}</div>\r\n            <div class=\"fs-6 mb-1\"><span class=\"text-danger\">ServiceTypeCode:</span>\r\n                {{selectedDetailsForDisplay?.serviceTypeCode}}</div>\r\n            <div class=\"fs-6 mb-1\"><span class=\"text-danger\">External ServiceNumber:</span>\r\n                {{selectedDetailsForDisplay?.externalServiceNumber}}</div>\r\n            <div class=\"fs-6 mb-1\"><span class=\"text-danger\">Service Text:</span>\r\n                {{selectedDetailsForDisplay?.serviceText}}</div>\r\n            <div class=\"fs-6 mb-1\"><span class=\"text-danger\">Line Text:</span> {{selectedDetailsForDisplay?.lineText}}\r\n            </div>\r\n            <div class=\"fs-6 mb-1\"><span class=\"text-danger\">Personnel Number:</span>\r\n                {{selectedDetailsForDisplay?.personnelNumberCode}}</div>\r\n            <div class=\"fs-6 mb-1\"><span class=\"text-danger\">Line Type:</span>\r\n                {{selectedDetailsForDisplay?.lineTypeCode}}</div>\r\n            <div class=\"fs-6 mb-1\"><span class=\"text-danger\">Line Number:</span>\r\n                {{selectedDetailsForDisplay?.lineNumber}} </div>\r\n            <div class=\"fs-6 mb-1\"><span class=\"text-danger\">Alternatives:</span>\r\n                {{selectedDetailsForDisplay?.alternatives}}</div>\r\n            <div class=\"fs-6 mb-1\"><span class=\"text-danger\">Bidder's Line:</span>\r\n                {{selectedDetailsForDisplay?.biddersLine}}</div>\r\n            <div class=\"fs-6 mb-1\"><span class=\"text-danger\">Supplementary Line:</span>\r\n                {{selectedDetailsForDisplay?.supplementaryLine}}</div>\r\n            <div class=\"fs-6 mb-1\"><span class=\"text-danger\">LotSizeForCostingIsOne:</span>\r\n                {{selectedDetailsForDisplay?.lotSizeForCostingIsOne}}</div>\r\n        </div>\r\n        <ng-template pTemplate=\"footer\">\r\n            <p-button icon=\"pi pi-check\" (click)=\"visible = false\" label=\"Ok\" pAutoFocus [autofocus]=\"true\"></p-button>\r\n        </ng-template>\r\n    </p-dialog>\r\n</div>","import { Component, ViewChild } from '@angular/core';\r\nimport { ConfirmationService, MessageService } from 'primeng/api';\r\nimport { ModelSpecDetailService } from './model-details.service';\r\nimport { ModelSpecDetails } from './model-details.model';\r\nimport { ModelEntity } from '../model/model.model';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from '../shared/ApiService.service';\r\nimport { Subscription, forkJoin } from 'rxjs';\r\nimport { ServiceType } from '../service-type/service-type.model';\r\nimport { UnitOfMeasure } from '../models/unitOfMeasure.model';\r\nimport { PersonnelNumber } from '../models/personnelNumber.model';\r\nimport { Formula } from '../formulas/formulas.model';\r\nimport { ServiceMaster } from '../new-service-master/new-service-master.model';\r\n\r\n@Component({\r\n  selector: 'app-model-details',\r\n  templateUrl: './model-details.component.html',\r\n  styleUrls: ['./model-details.component.css'],\r\n  providers: [ModelSpecDetailService, MessageService, ConfirmationService]\r\n})\r\nexport class ModelDetailsComponent {\r\n\r\n  subscription!: Subscription;\r\n  records: ModelSpecDetails[] = [];\r\n  public rowIndex = 0;\r\n  searchTerm!: number;\r\n  dontSelectServiceNumber: boolean = true\r\n  modelSpecRecord?: ModelEntity // hold ModelSpecRecord from previous screen\r\n  currency: any\r\n  totalValue: number = 0.0\r\n  //fields for dropdown lists\r\n  recordsServiceNumber!: ServiceMaster[];\r\n  selectedServiceNumberRecord?: ServiceMaster\r\n  selectedServiceNumber!: number;\r\n  updateSelectedServiceNumber!: number\r\n  updateSelectedServiceNumberRecord?: ServiceMaster\r\n  shortText: string = '';\r\n  updateShortText: string = '';\r\n  shortTextChangeAllowed: boolean = false;\r\n  updateShortTextChangeAllowed: boolean = false;\r\n  recordsUnitOfMeasure!: UnitOfMeasure[];\r\n  selectedUnitOfMeasure!: string;\r\n  recordsServiceType!: ServiceType[];\r\n  selectedServiceType!: string;\r\n  recordsPersonnelNumber!: PersonnelNumber[];\r\n  selectedPersonnelNumber!: string;\r\n  recordsFormula!: any[];\r\n  selectedFormula!: string;\r\n  recordsMatGrp!: any[];\r\n  selectedMatGrp!: string;\r\n  recordsLineType!: any[];\r\n  selectedLineType!: string;\r\n  modelSpecDetailsCodes: number[] = []\r\n\r\n  constructor(private apiService: ApiService, private router: Router, private modelSpecDetailsService: ModelSpecDetailService, private messageService: MessageService, private confirmationService: ConfirmationService,) {\r\n    this.modelSpecRecord = this.router.getCurrentNavigation()?.extras.state?.['Record'];\r\n    if (this.modelSpecRecord) {\r\n      this.modelSpecDetailsCodes = this.modelSpecRecord.modelSpecDetailsCode\r\n    }\r\n    else {\r\n      this.modelSpecRecord = undefined\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.modelSpecRecord) {\r\n      console.log(this.modelSpecRecord);\r\n\r\n      const detailObservables = this.modelSpecRecord.modelSpecDetailsCode.map(code =>\r\n        this.apiService.getID<ModelSpecDetails>('modelspecdetails', code)\r\n      );\r\n      forkJoin(detailObservables).subscribe(records => {\r\n        this.records = records.sort((a, b) => b.modelSpecDetailsCode - a.modelSpecDetailsCode);\r\n        // const filteredRecords = records.filter(record => record.deletionIndicator != true);\r\n        this.totalValue = records.reduce((sum, record) => sum + record.netValue, 0);\r\n        console.log('Total Value:', this.totalValue);\r\n      });\r\n    }\r\n    this.apiService.get<ServiceMaster[]>('servicenumbers').subscribe(response => {\r\n      this.recordsServiceNumber = response.filter(record => record.deletionIndicator === false);\r\n    });\r\n    this.apiService.get<UnitOfMeasure[]>('measurements').subscribe(response => {\r\n      this.recordsUnitOfMeasure = response;\r\n    });\r\n    this.apiService.get<ServiceType[]>('servicetypes').subscribe(response => {\r\n      this.recordsServiceType = response;\r\n    });\r\n    this.apiService.get<PersonnelNumber[]>('personnelnumbers').subscribe(response => {\r\n      this.recordsPersonnelNumber = response;\r\n    });\r\n    this.apiService.get<any[]>('linetypes').subscribe(response => {\r\n      this.recordsLineType = response;\r\n    });\r\n    this.apiService.get<any[]>('formulas').subscribe(response => {\r\n      this.recordsFormula = response;\r\n    });\r\n    this.apiService.get<any[]>('materialgroups').subscribe(response => {\r\n      this.recordsMatGrp = response;\r\n    });\r\n  }\r\n\r\n  public isMatch(record: any, ri: number): boolean {\r\n    if (!this.searchTerm) {\r\n      return true; // Display all records when search term is empty\r\n    }\r\n    const searchString = this.rowIndex + ri + 1;\r\n    return searchString === this.searchTerm;\r\n  }\r\n\r\n  //Display Line Details:\r\n  selectedDetailsForDisplay?: ModelSpecDetails\r\n  visible: boolean = false;\r\n  showDialog() {\r\n    this.visible = true;\r\n  }\r\n  // to handle selection checkbox\r\n  selectedRecords: ModelSpecDetails[] = [];\r\n  onRecordSelectionChange(event: any, record: ModelSpecDetails) {\r\n    this.selectedDetailsForDisplay = record\r\n    this.selectedRecords = event.checked\r\n  }\r\n  // to handle All Records Selection / Deselection \r\n  selectedAllRecords: ModelSpecDetails[] = [];\r\n  onSelectAllRecords(event: any): void {\r\n    if (Array.isArray(event.checked) && event.checked.length > 0) {\r\n      this.selectedAllRecords = [...this.records];\r\n    } else {\r\n      this.selectedAllRecords = [];\r\n    }\r\n  }\r\n\r\n  selectedFormulaRecord: any\r\n  updatedFormula!: number;\r\n  updatedFormulaRecord: any\r\n\r\n  onFormulaSelect(event: any) {\r\n    const selectedRecord = this.recordsFormula.find(record => record.formula === this.selectedFormula);\r\n    if (selectedRecord) {\r\n      this.selectedFormulaRecord = selectedRecord\r\n    }\r\n    else {\r\n      console.log(\"no Formula\");\r\n      this.selectedFormulaRecord = undefined;\r\n    }\r\n  }\r\n\r\n  onFormulaUpdateSelect(event: any) {\r\n    const selectedRecord = this.recordsFormula.find(record => record.formula === event.value);\r\n    if (selectedRecord) {\r\n      this.updatedFormulaRecord = selectedRecord\r\n    }\r\n    else {\r\n      this.updatedFormulaRecord = undefined;\r\n      console.log(this.updatedFormulaRecord);\r\n    }\r\n  }\r\n  //In Creation to handle shortTextChangeAlowlled Flag \r\n  onServiceNumberChange(event: any) {\r\n    const selectedRecord = this.recordsServiceNumber.find(record => record.serviceNumberCode === this.selectedServiceNumber);\r\n    if (selectedRecord) {\r\n      this.selectedServiceNumberRecord = selectedRecord\r\n      this.shortTextChangeAllowed = this.selectedServiceNumberRecord?.shortTextChangeAllowed || false;\r\n      this.shortText = \"\"\r\n    }\r\n    else {\r\n      console.log(\"no service number\");\r\n      this.dontSelectServiceNumber = false\r\n      this.selectedServiceNumberRecord = undefined;\r\n    }\r\n  }\r\n  //In Update to handle shortTextChangeAlowlled Flag \r\n  onServiceNumberUpdateChange(event: any) {\r\n    const updateSelectedRecord = this.recordsServiceNumber.find(record => record.serviceNumberCode === event.value);\r\n    if (updateSelectedRecord) {\r\n      this.updateSelectedServiceNumberRecord = updateSelectedRecord\r\n      this.updateShortTextChangeAllowed = this.updateSelectedServiceNumberRecord?.shortTextChangeAllowed || false;\r\n      this.updateShortText = \"\"\r\n    }\r\n    else {\r\n      this.updateSelectedServiceNumberRecord = undefined;\r\n    }\r\n  }\r\n  // handle Deletion Record/ Records\r\n  deleteRecord() {\r\n    if (this.selectedRecords.length) {\r\n      this.confirmationService.confirm({\r\n        message: 'Are you sure you want to delete the selected record?',\r\n        header: 'Confirm',\r\n        icon: 'pi pi-exclamation-triangle',\r\n        accept: () => {\r\n          for (const record of this.selectedRecords) {\r\n            console.log(this.modelSpecRecord);\r\n            const updatedRecord: ModelSpecDetails = {\r\n              ...record, // Copy all properties from the original record\r\n              deletionIndicator: true\r\n            }\r\n            console.log(updatedRecord);\r\n\r\n            if (this.modelSpecRecord) {\r\n              const indexToRemove = this.modelSpecRecord.modelSpecDetailsCode.indexOf(updatedRecord.modelSpecDetailsCode);\r\n              console.log(indexToRemove);\r\n              \r\n              if (indexToRemove !== -1) {\r\n                this.modelSpecRecord.modelSpecDetailsCode.splice(indexToRemove, 1);\r\n              }\r\n              console.log(this.modelSpecRecord);\r\n              this.apiService.put<ModelEntity>('modelspecs', this.modelSpecRecord.modelSpecCode, this.modelSpecRecord).subscribe({\r\n                next: (res) => {\r\n                  console.log('Model updated and delete from it modelspec details:', res);\r\n                  this.totalValue = 0;\r\n                  this.ngOnInit();\r\n                }\r\n                , error: (err) => {\r\n                  console.log(err);\r\n                },\r\n                complete: () => {\r\n                }\r\n\r\n              });\r\n            }\r\n            // this.apiService.put<ModelSpecDetails>('modelspecdetails', record.modelSpecDetailsCode, updatedRecord).subscribe(response => {\r\n            //   console.log('model spec marked deleted and updated in DB:', response);\r\n            //   this.totalValue = 0;\r\n            //   this.ngOnInit();\r\n            // });\r\n           \r\n          }\r\n          this.messageService.add({ severity: 'success', summary: 'Successfully', detail: 'Deleted', life: 3000 });\r\n          this.selectedRecords = []; // Clear the selectedRecords array after deleting all records\r\n        }\r\n      });\r\n    }\r\n    if (this.selectedAllRecords.length > 0) {\r\n      this.confirmationService.confirm({\r\n        message: 'Are you sure you want to delete the selected record?',\r\n        header: 'Confirm',\r\n        icon: 'pi pi-exclamation-triangle',\r\n        accept: () => {\r\n          for (const record of this.selectedAllRecords) {\r\n            const updatedRecord: ModelSpecDetails = {\r\n              ...record, // Copy all properties from the original record\r\n              deletionIndicator: true\r\n            }\r\n            console.log(updatedRecord);\r\n\r\n            if (this.modelSpecRecord) {\r\n              const indexToRemove = this.modelSpecRecord.modelSpecDetailsCode.indexOf(updatedRecord.modelSpecDetailsCode);\r\n              console.log(indexToRemove);\r\n              \r\n              if (indexToRemove !== -1) {\r\n                this.modelSpecRecord.modelSpecDetailsCode.splice(indexToRemove, 1);\r\n              }\r\n              console.log(this.modelSpecRecord);\r\n              this.apiService.put<ModelEntity>('modelspecs', this.modelSpecRecord.modelSpecCode, this.modelSpecRecord).subscribe({\r\n                next: (res) => {\r\n                  console.log('Model updated and delete from it modelspec details:', res);\r\n                  this.totalValue = 0;\r\n                  this.ngOnInit();\r\n                }\r\n                , error: (err) => {\r\n                  console.log(err);\r\n                },\r\n                complete: () => {\r\n                }\r\n\r\n              });\r\n            }\r\n\r\n            // this.apiService.put<ModelSpecDetails>('modelspecdetails', record.modelSpecDetailsCode, updatedRecord).subscribe(response => {\r\n            //   console.log('model spec marked deleted and updated in DB:', response);\r\n            //   this.totalValue = 0;\r\n            //   this.ngOnInit()\r\n            // });\r\n          }\r\n          this.messageService.add({ severity: 'success', summary: 'Successfully', detail: 'Deleted', life: 3000 });\r\n          this.selectedAllRecords = [];\r\n        }\r\n      });\r\n    }\r\n  }\r\n  // For Edit \r\n  clonedModelSpecDetails: { [s: number]: ModelSpecDetails } = {};\r\n  onRowEditInit(record: ModelSpecDetails) {\r\n    this.clonedModelSpecDetails[record.modelSpecDetailsCode] = { ...record };\r\n  }\r\n  onRowEditSave(index: number, record: ModelSpecDetails) {\r\n    console.log(this.updateSelectedServiceNumber);\r\n    if (this.updateSelectedServiceNumberRecord) {\r\n      const newRecord: ModelSpecDetails = {\r\n        ...record, // Copy all properties from the original record\r\n        // Modify specific attributes\r\n        unitOfMeasurementCode: this.updateSelectedServiceNumberRecord.baseUnitOfMeasurement,\r\n        materialGroupCode: this.updateSelectedServiceNumberRecord.materialGroupCode,\r\n        serviceTypeCode: this.updateSelectedServiceNumberRecord.serviceTypeCode,\r\n        shortText: this.updateSelectedServiceNumberRecord.description,\r\n        serviceText: this.updateSelectedServiceNumberRecord.serviceText,\r\n      };\r\n      console.log(newRecord);\r\n      this.apiService.put<ModelSpecDetails>('modelspecdetails', index, newRecord).subscribe(response => {\r\n        console.log('modelspecDetail updated:', response);\r\n        if (response) {\r\n          this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Record is updated' });\r\n        }\r\n        else {\r\n          this.messageService.add({ severity: 'error', summary: 'Error', detail: 'Invalid Data' });\r\n        }\r\n        console.log(this.totalValue)\r\n        this.totalValue = 0;\r\n        this.ngOnInit()\r\n      });\r\n    }\r\n    if (this.updateSelectedServiceNumberRecord && this.updatedFormulaRecord && this.resultAfterTestUpdate) {\r\n      console.log(record);\r\n      console.log(this.updateSelectedServiceNumberRecord);\r\n      const newRecord: ModelSpecDetails = {\r\n        ...record,\r\n        unitOfMeasurementCode: this.updateSelectedServiceNumberRecord.baseUnitOfMeasurement,\r\n        materialGroupCode: this.updateSelectedServiceNumberRecord.materialGroupCode,\r\n        serviceTypeCode: this.updateSelectedServiceNumberRecord.serviceTypeCode,\r\n        shortText: this.updateSelectedServiceNumberRecord.description,\r\n        serviceText: this.updateSelectedServiceNumberRecord.serviceText,\r\n        quantity: this.resultAfterTestUpdate,\r\n      };\r\n      console.log(newRecord);\r\n      this.apiService.put<ModelSpecDetails>('modelspecdetails', index, newRecord).subscribe(response => {\r\n        console.log('modelspecDetail updated:', response);\r\n        if (response) {\r\n          this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Record is updated' });\r\n        }\r\n        else {\r\n          this.messageService.add({ severity: 'error', summary: 'Error', detail: 'Invalid Data' });\r\n        }\r\n        console.log(this.totalValue)\r\n        this.totalValue = 0;\r\n        this.ngOnInit()\r\n        console.log(this.totalValue)\r\n      });\r\n    }\r\n    if (this.updatedFormulaRecord && this.resultAfterTestUpdate) {\r\n      const newRecord: ModelSpecDetails = {\r\n        ...record,\r\n        quantity: this.resultAfterTestUpdate,\r\n      };\r\n      console.log(newRecord);\r\n      this.apiService.put<ModelSpecDetails>('modelspecdetails', index, newRecord).subscribe(response => {\r\n        console.log('modelspecDetail updated:', response);\r\n        if (response) {\r\n          this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Record is updated' });\r\n        }\r\n        else {\r\n          this.messageService.add({ severity: 'error', summary: 'Error', detail: 'Invalid Data' });\r\n        }\r\n        console.log(this.totalValue)\r\n        this.totalValue = 0;\r\n        this.ngOnInit()\r\n        console.log(this.totalValue)\r\n      });\r\n    }\r\n    if (!this.updateSelectedServiceNumberRecord && !this.updatedFormulaRecord && !this.resultAfterTestUpdate) {\r\n      this.apiService.put<ModelSpecDetails>('modelspecdetails', index, record).subscribe(response => {\r\n        console.log('modelspecDetail updated:', response);\r\n        if (response) {\r\n          this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Record is updated' });\r\n        }\r\n        else {\r\n          this.messageService.add({ severity: 'error', summary: 'Error', detail: 'Invalid Data' });\r\n        }\r\n        this.totalValue = 0;\r\n        //this.modelSpecDetailsService.getRecords();\r\n        this.ngOnInit()\r\n      });\r\n    }\r\n  }\r\n  onRowEditCancel(row: ModelSpecDetails, index: number) {\r\n    this.records[index] = this.clonedModelSpecDetails[row.modelSpecDetailsCode]\r\n    delete this.clonedModelSpecDetails[row.modelSpecDetailsCode]\r\n  }\r\n  // For Add new Record\r\n  newService: ModelSpecDetails = {\r\n    serviceNumberCode: 0,\r\n    lineTypeCode: '',\r\n    unitOfMeasurementCode: '',\r\n    currencyCode: '',\r\n    personnelNumberCode: '',\r\n    serviceTypeCode: '',\r\n    materialGroupCode: '',\r\n    formulaCode: '',\r\n    selectionCheckbox: false,\r\n    lineIndex: 0,\r\n    deletionIndicator: false,\r\n    shortText: '',\r\n    quantity: 0,\r\n    grossPrice: 0,\r\n    overFulfilmentPercentage: 0,\r\n    priceChangedAllowed: false,\r\n    unlimitedOverFulfillment: false,\r\n    pricePerUnitOfMeasurement: 0,\r\n    externalServiceNumber: '',\r\n    netValue: 0,\r\n    serviceText: '',\r\n    lineText: '',\r\n    lineNumber: '',\r\n    alternatives: '',\r\n    biddersLine: false,\r\n    supplementaryLine: false,\r\n    lotSizeForCostingIsOne: false,\r\n    modelSpecDetailsCode: 0\r\n  };\r\n  addRow() {\r\n    if (!this.selectedServiceNumberRecord && !this.selectedFormulaRecord) { // if user didn't select serviceNumber && didn't select formula\r\n      const newRecord = {\r\n        //serviceNumberCode: this.selectedServiceNumber,\r\n        lineTypeCode: this.selectedLineType,\r\n        unitOfMeasurementCode: this.selectedUnitOfMeasure,\r\n        currencyCode: this.modelSpecRecord?.currencyCode,\r\n        personnelNumberCode: this.selectedPersonnelNumber,\r\n        serviceTypeCode: this.selectedServiceType,\r\n        materialGroupCode: this.selectedMatGrp,\r\n        formulaCode: this.selectedFormula,\r\n        deletionIndicator: this.newService.deletionIndicator,\r\n        shortText: this.newService.shortText,\r\n        quantity: this.newService.quantity,\r\n        grossPrice: this.newService.grossPrice,\r\n        overFulfilmentPercentage: this.newService.overFulfilmentPercentage,\r\n        priceChangedAllowed: this.newService.priceChangedAllowed,\r\n        unlimitedOverFulfillment: this.newService.unlimitedOverFulfillment,\r\n        pricePerUnitOfMeasurement: this.newService.pricePerUnitOfMeasurement,\r\n        externalServiceNumber: this.newService.externalServiceNumber,\r\n        netValue: this.newService.netValue,\r\n        serviceText: this.newService.serviceText,\r\n        lineText: this.newService.lineText,\r\n        lineNumber: this.newService.lineNumber,\r\n        alternatives: this.newService.alternatives,\r\n        biddersLine: this.newService.biddersLine,\r\n        supplementaryLine: this.newService.supplementaryLine,\r\n        lotSizeForCostingIsOne: this.newService.lotSizeForCostingIsOne,\r\n      }\r\n      if (this.newService.quantity === 0 || this.newService.grossPrice === 0) {\r\n        this.messageService.add({\r\n          severity: 'error',\r\n          summary: 'Error',\r\n          detail: 'Quantity and GrossPrice are required',\r\n          life: 3000\r\n        });\r\n      }\r\n      console.log(newRecord);\r\n      // Remove properties with empty or default values\r\n      const filteredRecord = Object.fromEntries(\r\n        Object.entries(newRecord).filter(([_, value]) => {\r\n          return value !== '' && value !== 0 && value !== undefined && value !== null;\r\n        })\r\n      );\r\n      console.log(filteredRecord);\r\n      this.apiService.post<ModelSpecDetails>('modelspecdetails', filteredRecord).subscribe((response: ModelSpecDetails) => {\r\n        console.log('modelspecdetails created:', response);\r\n        if (response) {\r\n          this.resetNewService();\r\n          console.log(this.newService);\r\n\r\n          const newDetail = response;\r\n          if (this.modelSpecRecord) {\r\n            this.modelSpecRecord.modelSpecDetailsCode.push(newDetail.modelSpecDetailsCode);\r\n            this.apiService.put<ModelEntity>('modelspecs', this.modelSpecRecord.modelSpecCode, this.modelSpecRecord).subscribe(updatedModel => {\r\n              console.log('Model updated:', updatedModel);\r\n            });\r\n          }\r\n        }\r\n        console.log(response);\r\n        this.totalValue = 0;\r\n        // this.modelSpecDetailsService.getRecords();\r\n        this.ngOnInit()\r\n      });\r\n    }\r\n    else if (!this.selectedServiceNumberRecord && this.selectedFormulaRecord && this.resultAfterTest) { // if user didn't select serviceNumber && select formula\r\n      const newRecord = {\r\n        //serviceNumberCode: this.selectedServiceNumber,\r\n        lineTypeCode: this.selectedLineType,\r\n        unitOfMeasurementCode: this.selectedUnitOfMeasure,\r\n        currencyCode: this.modelSpecRecord?.currencyCode,\r\n        personnelNumberCode: this.selectedPersonnelNumber,\r\n        serviceTypeCode: this.selectedServiceType,\r\n        materialGroupCode: this.selectedMatGrp,\r\n        formulaCode: this.selectedFormula,\r\n        deletionIndicator: this.newService.deletionIndicator,\r\n        shortText: this.newService.shortText,\r\n        // quantity: this.selectedFormulaRecord.result,\r\n        quantity: this.resultAfterTest,\r\n        grossPrice: this.newService.grossPrice,\r\n        overFulfilmentPercentage: this.newService.overFulfilmentPercentage,\r\n        priceChangedAllowed: this.newService.priceChangedAllowed,\r\n        unlimitedOverFulfillment: this.newService.unlimitedOverFulfillment,\r\n        pricePerUnitOfMeasurement: this.newService.pricePerUnitOfMeasurement,\r\n        externalServiceNumber: this.newService.externalServiceNumber,\r\n        netValue: this.newService.netValue,\r\n        serviceText: this.newService.serviceText,\r\n        lineText: this.newService.lineText,\r\n        lineNumber: this.newService.lineNumber,\r\n        alternatives: this.newService.alternatives,\r\n        biddersLine: this.newService.biddersLine,\r\n        supplementaryLine: this.newService.supplementaryLine,\r\n        lotSizeForCostingIsOne: this.newService.lotSizeForCostingIsOne,\r\n      }\r\n      if (this.resultAfterTest === 0 || this.newService.grossPrice === 0) {\r\n        this.messageService.add({\r\n          severity: 'error',\r\n          summary: 'Error',\r\n          detail: 'Quantity and GrossPrice are required',\r\n          life: 3000\r\n        });\r\n      }\r\n      console.log(newRecord);\r\n      // Remove properties with empty or default values\r\n      const filteredRecord = Object.fromEntries(\r\n        Object.entries(newRecord).filter(([_, value]) => {\r\n          return value !== '' && value !== 0 && value !== undefined && value !== null;\r\n        })\r\n      );\r\n      console.log(filteredRecord);\r\n      this.apiService.post<ModelSpecDetails>('modelspecdetails', filteredRecord).subscribe((response: ModelSpecDetails) => {\r\n        console.log('modelspecdetails created:', response);\r\n        if (response) {\r\n          this.resetNewService();\r\n          this.selectedFormulaRecord = undefined\r\n          console.log(this.newService);\r\n\r\n          const newDetail = response;\r\n          if (this.modelSpecRecord) {\r\n            this.modelSpecRecord.modelSpecDetailsCode.push(newDetail.modelSpecDetailsCode);\r\n            this.apiService.put<ModelEntity>('modelspecs', this.modelSpecRecord.modelSpecCode, this.modelSpecRecord).subscribe(updatedModel => {\r\n              console.log('Model updated:', updatedModel);\r\n            });\r\n          }\r\n        }\r\n        console.log(response);\r\n        this.totalValue = 0;\r\n        //this.modelSpecDetailsService.getRecords();\r\n        this.ngOnInit()\r\n      });\r\n    }\r\n    else if (this.selectedServiceNumberRecord && !this.selectedFormulaRecord && !this.resultAfterTest) { // if user select serviceNumber && didn't select formula\r\n      const newRecord = {\r\n        serviceNumberCode: this.selectedServiceNumber,\r\n        lineTypeCode: this.selectedLineType,\r\n        unitOfMeasurementCode: this.selectedServiceNumberRecord.baseUnitOfMeasurement,\r\n        currencyCode: this.modelSpecRecord?.currencyCode,\r\n        personnelNumberCode: this.selectedPersonnelNumber,\r\n        serviceTypeCode: this.selectedServiceNumberRecord.serviceTypeCode,\r\n        materialGroupCode: this.selectedServiceNumberRecord.materialGroupCode,\r\n        formulaCode: this.selectedFormula,\r\n        deletionIndicator: this.newService.deletionIndicator,\r\n        shortText: this.selectedServiceNumberRecord.description,\r\n        // quantity: this.selectedFormulaRecord.result,\r\n        quantity: this.newService.quantity,\r\n        grossPrice: this.newService.grossPrice,\r\n        overFulfilmentPercentage: this.newService.overFulfilmentPercentage,\r\n        priceChangedAllowed: this.newService.priceChangedAllowed,\r\n        unlimitedOverFulfillment: this.newService.unlimitedOverFulfillment,\r\n        pricePerUnitOfMeasurement: this.newService.pricePerUnitOfMeasurement,\r\n        externalServiceNumber: this.newService.externalServiceNumber,\r\n        netValue: this.newService.netValue,\r\n        // netValue: this.resultAfterTest * this.newService.grossPrice,\r\n        serviceText: this.selectedServiceNumberRecord.serviceText,\r\n        lineText: this.newService.lineText,\r\n        lineNumber: this.newService.lineNumber,\r\n        alternatives: this.newService.alternatives,\r\n        biddersLine: this.newService.biddersLine,\r\n        supplementaryLine: this.newService.supplementaryLine,\r\n        lotSizeForCostingIsOne: this.newService.lotSizeForCostingIsOne,\r\n      }\r\n      if (this.newService.quantity === 0 || this.newService.grossPrice === 0) {\r\n        this.messageService.add({\r\n          severity: 'error',\r\n          summary: 'Error',\r\n          detail: 'Quantity and GrossPrice are required',\r\n          life: 3000\r\n        });\r\n      }\r\n      console.log(newRecord);\r\n      // Remove properties with empty or default values\r\n      const filteredRecord = Object.fromEntries(\r\n        Object.entries(newRecord).filter(([_, value]) => {\r\n          return value !== '' && value !== 0 && value !== undefined && value !== null;\r\n        })\r\n      );\r\n      console.log(filteredRecord);\r\n      this.apiService.post<ModelSpecDetails>('modelspecdetails', filteredRecord).subscribe((response: ModelSpecDetails) => {\r\n        console.log('modelspecdetails created:', response);\r\n        if (response) {\r\n          this.resetNewService();\r\n          this.selectedFormulaRecord = undefined\r\n          this.selectedServiceNumberRecord = undefined\r\n          console.log(this.newService);\r\n\r\n          const newDetail = response;\r\n          if (this.modelSpecRecord) {\r\n            this.modelSpecRecord.modelSpecDetailsCode.push(newDetail.modelSpecDetailsCode);\r\n            this.apiService.put<ModelEntity>('modelspecs', this.modelSpecRecord.modelSpecCode, this.modelSpecRecord).subscribe(updatedModel => {\r\n              console.log('Model updated:', updatedModel);\r\n            });\r\n          }\r\n        }\r\n        console.log(response);\r\n        this.totalValue = 0;\r\n        //this.modelSpecDetailsService.getRecords();\r\n        this.ngOnInit()\r\n      });\r\n    }\r\n    else if (this.selectedServiceNumberRecord && this.selectedFormulaRecord && this.resultAfterTest) { // if user select serviceNumber && select formula\r\n      const newRecord = {\r\n        serviceNumberCode: this.selectedServiceNumber,\r\n        lineTypeCode: this.selectedLineType,\r\n        unitOfMeasurementCode: this.selectedServiceNumberRecord.baseUnitOfMeasurement,\r\n        currencyCode: this.modelSpecRecord?.currencyCode,\r\n        personnelNumberCode: this.selectedPersonnelNumber,\r\n        serviceTypeCode: this.selectedServiceNumberRecord.serviceTypeCode,\r\n        materialGroupCode: this.selectedServiceNumberRecord.materialGroupCode,\r\n        formulaCode: this.selectedFormula,\r\n        deletionIndicator: this.newService.deletionIndicator,\r\n        shortText: this.selectedServiceNumberRecord.description,\r\n        // quantity: this.selectedFormulaRecord.result,\r\n        quantity: this.resultAfterTest,\r\n        grossPrice: this.newService.grossPrice,\r\n        overFulfilmentPercentage: this.newService.overFulfilmentPercentage,\r\n        priceChangedAllowed: this.newService.priceChangedAllowed,\r\n        unlimitedOverFulfillment: this.newService.unlimitedOverFulfillment,\r\n        pricePerUnitOfMeasurement: this.newService.pricePerUnitOfMeasurement,\r\n        externalServiceNumber: this.newService.externalServiceNumber,\r\n        netValue: this.newService.netValue,\r\n        // netValue: this.resultAfterTest * this.newService.grossPrice,\r\n        serviceText: this.selectedServiceNumberRecord.serviceText,\r\n        lineText: this.newService.lineText,\r\n        lineNumber: this.newService.lineNumber,\r\n        alternatives: this.newService.alternatives,\r\n        biddersLine: this.newService.biddersLine,\r\n        supplementaryLine: this.newService.supplementaryLine,\r\n        lotSizeForCostingIsOne: this.newService.lotSizeForCostingIsOne,\r\n      }\r\n      if (this.resultAfterTest === 0 || this.newService.grossPrice === 0) {\r\n        this.messageService.add({\r\n          severity: 'error',\r\n          summary: 'Error',\r\n          detail: 'Quantity and GrossPrice are required',\r\n          life: 3000\r\n        });\r\n      }\r\n      console.log(newRecord);\r\n      // Remove properties with empty or default values\r\n      const filteredRecord = Object.fromEntries(\r\n        Object.entries(newRecord).filter(([_, value]) => {\r\n          return value !== '' && value !== 0 && value !== undefined && value !== null;\r\n        })\r\n      );\r\n      console.log(filteredRecord);\r\n      this.apiService.post<ModelSpecDetails>('modelspecdetails', filteredRecord).subscribe((response: ModelSpecDetails) => {\r\n        console.log('modelspecdetails created:', response);\r\n        if (response) {\r\n          this.resetNewService();\r\n          this.selectedFormulaRecord = undefined\r\n          this.selectedServiceNumberRecord = undefined\r\n          console.log(this.newService);\r\n\r\n          const newDetail = response;\r\n          if (this.modelSpecRecord) {\r\n            this.modelSpecRecord.modelSpecDetailsCode.push(newDetail.modelSpecDetailsCode);\r\n            this.apiService.put<ModelEntity>('modelspecs', this.modelSpecRecord.modelSpecCode, this.modelSpecRecord).subscribe(updatedModel => {\r\n              console.log('Model updated:', updatedModel);\r\n            });\r\n          }\r\n        }\r\n        console.log(response);\r\n        this.totalValue = 0;\r\n        //this.modelSpecDetailsService.getRecords();\r\n        this.ngOnInit()\r\n      });\r\n    }\r\n  }\r\n\r\n  resetNewService() {\r\n    this.newService = {\r\n      serviceNumberCode: 0,\r\n      lineTypeCode: '',\r\n      unitOfMeasurementCode: '',\r\n      currencyCode: '',\r\n      personnelNumberCode: '',\r\n      serviceTypeCode: '',\r\n      materialGroupCode: '',\r\n      formulaCode: '',\r\n      selectionCheckbox: false,\r\n      lineIndex: 0,\r\n      deletionIndicator: false,\r\n      shortText: '',\r\n      quantity: 0,\r\n      grossPrice: 0,\r\n      overFulfilmentPercentage: 0,\r\n      priceChangedAllowed: false,\r\n      unlimitedOverFulfillment: false,\r\n      pricePerUnitOfMeasurement: 0,\r\n      externalServiceNumber: '',\r\n      netValue: 0,\r\n      serviceText: '',\r\n      lineText: '',\r\n      lineNumber: '',\r\n      alternatives: '',\r\n      biddersLine: false,\r\n      supplementaryLine: false,\r\n      lotSizeForCostingIsOne: false,\r\n      modelSpecDetailsCode: 0\r\n    };\r\n    this.selectedUnitOfMeasure = '';\r\n    this.selectedPersonnelNumber = '';\r\n    this.selectedLineType = '';\r\n    this.selectedServiceType = '';\r\n    this.selectedMatGrp = '';\r\n    this.selectedFormula = '';\r\n  }\r\n\r\n  // handle Formula Parameters \r\n  showPopup: boolean = false;\r\n  parameterValues: { [key: string]: number } = {};\r\n  showPopupUpdate: boolean = false;\r\n  parameterValuesUpdate: { [key: string]: number } = {};\r\n  openPopup() {\r\n    if (this.selectedFormulaRecord) {\r\n      this.showPopup = true;\r\n      for (const parameterId of this.selectedFormulaRecord.parameterIds) {\r\n        this.parameterValues[parameterId] = 0;\r\n        console.log(this.parameterValues);\r\n      }\r\n    }\r\n    else {\r\n      this.showPopup = false;\r\n    }\r\n  }\r\n  openPopupUpdate() {\r\n    if (this.updatedFormulaRecord) {\r\n      this.showPopupUpdate = true;\r\n      console.log(this.showPopupUpdate);\r\n\r\n      for (const parameterId of this.updatedFormulaRecord.parameterIds) {\r\n        this.parameterValuesUpdate[parameterId] = 0;\r\n        console.log(this.parameterValuesUpdate);\r\n      }\r\n    }\r\n    else {\r\n      this.showPopupUpdate = false;\r\n    }\r\n  }\r\n  resultAfterTest!: number\r\n  resultAfterTestUpdate!: number\r\n  saveParameters() {\r\n    if (this.selectedFormulaRecord) {\r\n      console.log(this.parameterValues);\r\n      const valuesOnly = Object.values(this.parameterValues)\r\n        .filter(value => typeof value === 'number') as number[];\r\n      console.log(valuesOnly);\r\n      console.log(this.resultAfterTest);\r\n\r\n      const formulaObject: any = {\r\n        formula: this.selectedFormulaRecord.formula,\r\n        description: this.selectedFormulaRecord.description,\r\n        numberOfParameters: this.selectedFormulaRecord.numberOfParameters,\r\n        parameterIds: this.selectedFormulaRecord.parameterIds,\r\n        parameterDescriptions: this.selectedFormulaRecord.parameterDescriptions,\r\n        formulaLogic: this.selectedFormulaRecord.formulaLogic,\r\n        testParameters: valuesOnly\r\n      };\r\n      console.log(formulaObject);\r\n      this.apiService.put<any>('formulas', this.selectedFormulaRecord.formulaCode, formulaObject).subscribe((response: Formula) => {\r\n        console.log('formula updated:', response);\r\n        this.resultAfterTest = response.result;\r\n        console.log(this.resultAfterTest);\r\n      });\r\n      this.showPopup = false;\r\n    }\r\n    if (this.updatedFormulaRecord) {\r\n      console.log(this.parameterValuesUpdate);\r\n      const valuesOnly = Object.values(this.parameterValuesUpdate)\r\n        .filter(value => typeof value === 'number') as number[];\r\n      console.log(valuesOnly);\r\n      console.log(this.resultAfterTestUpdate);\r\n      const formulaObject: any = {\r\n        formula: this.updatedFormulaRecord.formula,\r\n        description: this.updatedFormulaRecord.description,\r\n        numberOfParameters: this.updatedFormulaRecord.numberOfParameters,\r\n        parameterIds: this.updatedFormulaRecord.parameterIds,\r\n        parameterDescriptions: this.updatedFormulaRecord.parameterDescriptions,\r\n        formulaLogic: this.updatedFormulaRecord.formulaLogic,\r\n        testParameters: valuesOnly\r\n      };\r\n      console.log(formulaObject);\r\n      this.apiService.put<any>('formulas', this.updatedFormulaRecord.formulaCode, formulaObject).subscribe((response: Formula) => {\r\n        console.log('formula updated:', response);\r\n        this.resultAfterTestUpdate = response.result;\r\n        console.log(this.resultAfterTestUpdate);\r\n\r\n      });\r\n      this.showPopupUpdate = false;\r\n    }\r\n\r\n  }\r\n\r\n  closePopup() {\r\n    this.showPopupUpdate = false;\r\n    this.showPopup = false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Subject } from 'rxjs';\r\nimport { ServiceType } from './service-type.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ApiService } from '../shared/ApiService.service';\r\n\r\n@Injectable()\r\nexport class ServiceTypeService {\r\n  recordsChanged = new Subject<ServiceType[]>();\r\n  startedEditing = new Subject<number>();\r\n  model!:'servicetypes';\r\n  constructor(private apiService:ApiService ,private http: HttpClient) { }\r\n  private recordsApi!: ServiceType[]\r\n\r\n  getApiRecords(){\r\n    this.apiService.get<ServiceType[]>('servicetypes').subscribe(response => {\r\n      console.log(response);\r\n      this.recordsApi = response;\r\n      this.recordsChanged.next(this.recordsApi); \r\n    });\r\n  }\r\n  addApiRecord(record: ServiceType) {\r\n    this.apiService.post<ServiceType>('servicetypes', record).subscribe((response: ServiceType) => {\r\n      console.log('ServiceType created:', response);\r\n      this.getApiRecords();\r\n    });\r\n    return this.apiService.post<ServiceType>('servicetypes', record);\r\n  }\r\n  updateApiRecord(id:number,record: any) {\r\n    console.log(this.apiService.put<ServiceType>('servicetypes',id, record));\r\n   this.apiService.put<ServiceType>('servicetypes',id,record).subscribe(response => {\r\n    console.log(response);\r\n   this.getApiRecords()\r\n  });\r\n  }\r\n  getApiRecord(index:number) {\r\n   return this.apiService.getID<ServiceType>('servicetypes',index)\r\n  }\r\n  deleteApiRecord(id:number) {\r\n    console.log(this.apiService.delete<ServiceType>('servicetypes',id));\r\n    this.apiService.delete<ServiceType>('servicetypes',id).subscribe(response =>{\r\n      console.log(response);\r\n      this.getApiRecords();\r\n    })\r\n    \r\n  }\r\n  updateRecord(index: number, newRecord: ServiceType) {\r\n    this.apiService.put<ServiceType>('servicetypes', index, newRecord).subscribe(response => {\r\n      console.log('modelspecs updated:',response);\r\n      this.getApiRecords()\r\n    });\r\n  }\r\n}","\r\n    <p-toast></p-toast>\r\n    <div class=\"card mt-5\">\r\n    <p-table [value]=\"records\"  dataKey=\"serviceTypeCode\" styleClass=\"p-datatable-gridlines\" editMode=\"row\" [tableStyle]=\"{'min-width': '50rem'}\"\r\n    [scrollable]=\"true\" scrollHeight=\"400px\">\r\n        <ng-template pTemplate=\"caption\">\r\n            <div class=\"flex align-items-center justify-content-between\">\r\n                Service Types:\r\n            </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\">\r\n            <tr>\r\n                <th fd-table-cell>Code</th>\r\n                <th fd-table-cell>Description</th>\r\n                <th fd-table-cell>Created On</th> \r\n                <!-- *appHasRole=\"['Admin']\" -->\r\n                <th fd-table-cell>Actions</th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-record let-editing=\"editing\" let-ri=\"rowIndex\">\r\n            <tr [pEditableRow]=\"record\">\r\n                <td>\r\n                            {{record.serviceId}}\r\n                </td>\r\n                <td>\r\n                    <p-cellEditor>\r\n                        <ng-template pTemplate=\"input\">\r\n                            <input pInputText class=\"rounded-input\" type=\"text\" [(ngModel)]=\"record.description\">\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"output\">\r\n                            {{record.description}}\r\n                        </ng-template>\r\n                    </p-cellEditor>\r\n                </td>\r\n                <td>\r\n                            {{record.lastChangeDate}}  \r\n                </td>\r\n                <td>\r\n                    <div class=\"flex align-items-center justify-content-center gap-2\">\r\n                        <button *ngIf=\"!editing\" pButton pRipple type=\"button\" pInitEditableRow icon=\"pi pi-pencil\" (click)=\"onRowEditInit(record)\" class=\"p-button-rounded p-button-text\"></button>\r\n                        <button *ngIf=\"editing\" pButton pRipple type=\"button\" pSaveEditableRow icon=\"pi pi-check\" (click)=\"onRowEditSave(record.serviceTypeCode,record)\" class=\"p-button-rounded p-button-text p-button-success mr-2\"></button>\r\n                        <button *ngIf=\"editing\" pButton pRipple type=\"button\" pCancelEditableRow icon=\"pi pi-times\" (click)=\"onRowEditCancel(record, ri)\" class=\"p-button-rounded p-button-text p-button-danger\"></button>\r\n                        \r\n                    <button pButton pRipple type=\"button\" class=\"p-button-rounded p-button-text p-button-danger\" icon=\"pi pi-trash\" severity=\"danger\" (click)=\"deleteRecord(record)\"></button>\r\n                    </div>\r\n\r\n                    <!-- <p-button icon=\"pi pi-trash\" severity=\"danger\" (click)=\"deleteRecord(record)\"></p-button> -->\r\n<!--                     \r\n                    <button pButton pRipple type=\"button\" class=\"p-button-rounded p-button-text p-button-danger\" icon=\"pi pi-trash\" severity=\"danger\" (click)=\"deleteRecord(record)\"></button> -->\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"footer\" class=\"m-3\">\r\n            <tr>\r\n            <td>\r\n                <input name=\"serviceId\" class=\"rounded-input\" type=\"text\" [(ngModel)]=\"newServiceType.serviceId\">\r\n            </td>\r\n            <td>\r\n                <input name=\"description\" class=\"rounded-input\" type=\"text\" [(ngModel)]=\"newServiceType.description\">\r\n            </td>\r\n            <td>\r\n            </td>\r\n            <td>\r\n                <button pButton type=\"button\" icon=\"pi pi-plus\" class=\"ui-button-info rounded-input\" label=\"Add\"\r\n                    [disabled]=\"\" (click)=\"addRow()\">\r\n                </button>\r\n            </td>\r\n            </tr>\r\n            </ng-template>\r\n    </p-table>\r\n\r\n</div>\r\n\r\n    \r\n<p-confirmDialog [style]=\"{ width: '450px' }\"></p-confirmDialog>\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { ServiceTypeService } from './service-type.service';\r\nimport { ServiceType } from './service-type.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { ConfirmationService, MessageService } from 'primeng/api';\r\nimport { ApiService } from '../shared/ApiService.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-service-type',\r\n  templateUrl: './service-type.component.html',\r\n  styleUrls: ['./service-type.component.css'],\r\n  providers: [ServiceTypeService, MessageService, ConfirmationService]\r\n})\r\nexport class ServiceTypeComponent {\r\n\r\n  records!: ServiceType[];\r\n  private subscription!: Subscription;\r\n  editMode = false;\r\n\r\n  constructor(private apiService: ApiService, private _ServiceTypeService: ServiceTypeService, private messageService: MessageService, private confirmationService: ConfirmationService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this._ServiceTypeService.getApiRecords();\r\n    this.subscription = this._ServiceTypeService.recordsChanged.subscribe((records: ServiceType[]) => {\r\n      // Sort the records \r\n      this.records = records.sort((a, b) => b.serviceTypeCode - a.serviceTypeCode);\r\n    });\r\n  }\r\n\r\n  onEditItem(index: number) {\r\n    this._ServiceTypeService.startedEditing.next(index);\r\n  }\r\n  \r\n  clonedRecords: { [s: number]: ServiceType; } = {};\r\n\r\n  onRowEditInit(record: ServiceType) {\r\n    this.clonedRecords[record.serviceTypeCode] = { ...record };\r\n  }\r\n\r\n  onRowEditSave(index: number, record: ServiceType) {\r\n    this._ServiceTypeService.updateRecord(index, record);\r\n    this.ngOnInit(); //reload the table\r\n    this.editMode = false;\r\n    delete this.clonedRecords[record.serviceTypeCode];\r\n    this.messageService.add({ severity: 'success', summary: 'Success', detail: `ServiceType Updated Successfully` });\r\n  }\r\n\r\n  onRowEditCancel(record: ServiceType, index: number) {\r\n    this.records[index] = this.clonedRecords[record.serviceTypeCode];\r\n    delete this.clonedRecords[record.serviceTypeCode];\r\n  }\r\n\r\n  deleteRecord(record: ServiceType) {\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure you want to delete the selected record?',\r\n      header: 'Confirm',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.apiService.delete<ServiceType>('servicetypes', record.serviceTypeCode).subscribe(response => {\r\n          console.log('service type deleted:', response);\r\n          this._ServiceTypeService.getApiRecords();\r\n        });\r\n        this.messageService.add({ severity: 'success', summary: 'Successfully', detail: 'Deleted', life: 3000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  newServiceType: ServiceType = {\r\n    serviceTypeCode: 0,\r\n    serviceId: '',\r\n    description: '',\r\n    lastChangeDate: new Date(),\r\n  }\r\n  addRow() {\r\n\r\n    const newRecord = {\r\n      serviceId: this.newServiceType.serviceId,\r\n      description: this.newServiceType.description\r\n    }\r\n    const filteredRecord = Object.fromEntries(\r\n      Object.entries(newRecord).filter(([_, value]) => {\r\n        return value !== '' && value !== undefined;\r\n      })\r\n    );\r\n    this.apiService.post<ServiceType>('servicetypes', filteredRecord).subscribe(\r\n      (response: ServiceType) => {\r\n        console.log('ServiceType created:', response);\r\n        if (response) {\r\n          this.resetNewService();\r\n          this.messageService.add({ severity: 'success', summary: 'Success', detail: `ServiceType Added Successfully` });\r\n        }\r\n        this.ngOnInit();\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        if (error.status === 409) {\r\n          // Handle conflict error\r\n          console.log('Conflict error:', error);\r\n          this.messageService.add({ severity: 'error', summary: 'Code Conflict', detail: 'This Code already exists', life: 10000 });\r\n          this.ngOnInit();\r\n        } else {\r\n          console.error('An error occurred:', error);\r\n        }\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  resetNewService() {\r\n    this.newServiceType = {\r\n      serviceTypeCode: 0,\r\n      serviceId: '',\r\n      description: '',\r\n      lastChangeDate: new Date(),\r\n    };\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { Subscription } from 'rxjs';\r\nimport { ApiService } from '../shared/ApiService.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-formula',\r\n  templateUrl: './formula.component.html',\r\n  styleUrls: ['./formula.component.css'],\r\n  providers: [MessageService]\r\n})\r\nexport class FormulaComponent implements OnInit {\r\n\r\n  isFormValid = false;\r\n  items!: MenuItem[];\r\n  subscription!: Subscription;\r\n\r\n  constructor(public messageService: MessageService,private apiService: ApiService) {}\r\n\r\n  ngOnInit() {\r\n      this.items = [\r\n          {\r\n              label: 'Create',\r\n              routerLink: 'create'\r\n          },\r\n          {\r\n              label: 'Set Parameters',\r\n              routerLink: 'parameter'\r\n          },\r\n          {\r\n              label: 'Relation',\r\n              routerLink: 'relation'\r\n          },\r\n          {\r\n              label: 'Test',\r\n              routerLink: 'test'\r\n          }\r\n      ];\r\n  }\r\n\r\n  ngOnDestroy() {\r\n      if (this.subscription) {\r\n          this.subscription.unsubscribe();\r\n      }\r\n  }\r\n  \r\n  getApiRecords() {\r\n    this.apiService.get<any>('formulas').subscribe(response => {\r\n      console.log(response);\r\n    });\r\n  }\r\n}\r\n","\r\n<div class=\"card\">\r\n    <p-toast></p-toast>\r\n    <p-steps [model]=\"items\" [readonly]=\"true\"></p-steps>\r\n</div>\r\n\r\n<router-outlet></router-outlet>","<div class=\"stepsdemo-content\">\r\n  <p-card>\r\n    <ng-template pTemplate=\"content\">\r\n      <div class=\"field \">\r\n        <label for=\"formula\">Formula: <span class=\"required-indicator\" style=\"color:red\">*</span></label>\r\n        <input #formula=\"ngModel\" id=\"formula\" type=\"text\" maxlength=\"4\" required pInputText\r\n          [(ngModel)]=\"createInformation.formula\"\r\n          class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary \"\r\n          [ngClass]=\"{ 'ng-dirty': (formula.invalid && submitted) || (formula.dirty && formula.invalid) }\" />\r\n        <small *ngIf=\"(formula.invalid && submitted) || (formula.dirty && formula.invalid)\" class=\"p-error\">Formula is\r\n          required.</small>\r\n\r\n      </div>\r\n      <div class=\"field \">\r\n        <label for=\"description\">Description: <span class=\"required-indicator\" style=\"color:red\">*</span></label>\r\n        <input #description=\"ngModel\" id=\"description\" type=\"text\" required pInputText\r\n          [(ngModel)]=\"createInformation.description\"\r\n          class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary\"\r\n          [ngClass]=\"{ 'ng-dirty': (description.invalid && submitted) || (description.dirty && description.invalid) }\" />\r\n        <small *ngIf=\"(description.invalid && submitted) || (description.dirty && description.invalid)\"\r\n          class=\"p-error\">Description is required.</small>\r\n      </div>\r\n      <div class=\"row formgrid grid\">\r\n        <div class=\"field grid col\">\r\n          <label for=\"numberOfParameters\">NumberOfParams:<span class=\"required-indicator\"\r\n              style=\"color:red\">*</span></label>\r\n          <input #numberOfParameters=\"ngModel\" id=\"numberOfParameters\" type=\"number\" required pInputNumber\r\n            [(ngModel)]=\"createInformation.numberOfParameters\"\r\n            class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary \"\r\n            [ngClass]=\"{ 'ng-dirty': (numberOfParameters.invalid && submitted) || (numberOfParameters.dirty && numberOfParameters.invalid) }\"\r\n            (keyup)=\"validateNumberOfParameters()\" [min]=\"1\" />\r\n\r\n          <small\r\n            *ngIf=\"(numberOfParameters.invalid && submitted) || (numberOfParameters.dirty && numberOfParameters.invalid)\"\r\n            class=\"p-error\">\r\n            <ng-container *ngIf=\"createInformation.numberOfParameters <= 0 && createInformation.numberOfParameters === undefined\">\r\n              NumberOfParameters is required.\r\n            </ng-container>\r\n          </small>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"footer\">\r\n      <div class=\"flex justify-content-end flex-wrap\">\r\n        <p-button label=\"Next Step\" [disabled]=\"!isNumberOfParametersValid\" (onClick)=\"nextPage()\"\r\n          icon=\"pi pi-angle-right\" [rounded]=\"true\"  iconPos=\"right\"></p-button>\r\n      </div>\r\n    </ng-template>\r\n  </p-card>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, NavigationExtras, Router } from '@angular/router';\r\nimport { FormulaService } from '../formula.service';\r\nimport { ApiService } from 'src/app/shared/ApiService.service';\r\n\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.css'],\r\n  providers: [FormulaService]\r\n})\r\nexport class CreateComponent implements OnInit {\r\n\r\n  createInformation = { \r\n    formula: '',\r\n    description: '',\r\n    numberOfParameters: 0,\r\n  }\r\n  submitted: boolean = false;\r\n  isNumberOfParametersValid = true;\r\n\r\n  validateNumberOfParameters() {\r\n    this.isNumberOfParametersValid = this.createInformation.numberOfParameters > 0;\r\n  }\r\n\r\n  constructor(private route: ActivatedRoute, private apiService: ApiService, private router: Router, public formulaService: FormulaService,) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.createInformation = this.formulaService.getFormulaInformation().createInformation;\r\n    console.log(this.createInformation);\r\n    // To handle data retrieved from Back Button \r\n    if (localStorage.getItem('formula') !== null) {\r\n      this.createInformation.formula = localStorage.getItem('formula') ? localStorage.getItem('formula')! : '';\r\n    }\r\n    if (localStorage.getItem('description') !== null) {\r\n      this.createInformation.description = localStorage.getItem('description') ? localStorage.getItem('description')! : '';\r\n    }\r\n    if (localStorage.getItem('numberOfParameters') !== null) {\r\n      this.createInformation.numberOfParameters = Number(localStorage.getItem('numberOfParameters'))\r\n    }\r\n  }\r\n\r\n  nextPage() {\r\n    if (this.createInformation.formula && this.createInformation.description && this.createInformation.numberOfParameters\r\n    ) {\r\n      this.formulaService.formulaInformation.createInformation = this.createInformation;\r\n      // Save createInformation in local storage for Back Button \r\n      localStorage.setItem('formula', this.createInformation.formula);\r\n      localStorage.setItem('description', this.createInformation.description);\r\n      localStorage.setItem('numberOfParameters', String(this.createInformation.numberOfParameters));\r\n\r\n      const navigationExtras: NavigationExtras = {\r\n        state: {\r\n          passedCreateInfo: this.createInformation,\r\n          numberOfParameters: this.createInformation.numberOfParameters,\r\n          formula: this.createInformation.formula,\r\n          description: this.createInformation.description\r\n        }\r\n      };\r\n      console.log(navigationExtras);\r\n      this.router.navigate(['/formula/parameter'], navigationExtras);\r\n    }\r\n    this.submitted = true;\r\n  }\r\n}\r\n","<p-card>\r\n    <ng-template pTemplate=\"content\">\r\n      <div class=\"formgrid grid\" *ngFor=\"let param of parameterInformationIterator; let index = index\">\r\n        <div class=\"field col\">\r\n          <label for=\"paramID{{ index }}\">ParamID{{ index + 1 }}:<span class=\"required-indicator\" style=\"color:red\">*</span></label>\r\n          <input\r\n            [id]=\"'paramID' + index\"\r\n            #paramID=\"ngModel\"\r\n            type=\"text\"\r\n            required\r\n            pInputText\r\n            [(ngModel)]=\"param.paramID\"\r\n            class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary w-full\"\r\n            [ngClass]=\"{ 'ng-dirty': (param.paramID.invalid && submitted) || (param.paramID.dirty && param.paramID.invalid) }\"\r\n          />\r\n          <small *ngIf=\"(paramID.invalid && submitted) || (paramID.dirty && paramID.invalid)\" class=\"p-error\">ParamID{{ index + 1 }} is required.</small>\r\n        </div>\r\n        <div class=\"field col\">\r\n          <label for=\"paramDescription{{ index }}\">Param Description{{ index + 1 }}:<span class=\"required-indicator\" style=\"color:red\">*</span></label>\r\n          <input\r\n            [id]=\"'paramDescription' + index\"\r\n            #paramDescription=\"ngModel\"\r\n            type=\"text\"\r\n            required\r\n            pInputText\r\n            [(ngModel)]=\"param.paramDescription\"\r\n            class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary w-full\"\r\n            [ngClass]=\"{ 'ng-dirty': (param.paramDescription.invalid && submitted) || (param.paramDescription.dirty && param.paramDescription.invalid) }\"\r\n          />\r\n          <small *ngIf=\"(paramDescription.invalid && submitted) || (paramDescription.dirty && paramDescription.invalid)\" class=\"p-error\">ParamDescription{{ index + 1 }} is required.</small>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"footer\">\r\n      <div class=\"flex justify-content-between flex-wrap\">\r\n        <p-button label=\"Back\" (onClick)=\"prevPage()\" [rounded]=\"true\"  icon=\"pi pi-angle-left\"></p-button>\r\n        <p-button label=\"Next Step\" (onClick)=\"nextPage()\" [rounded]=\"true\"  icon=\"pi pi-angle-right\" iconPos=\"right\"></p-button>\r\n      </div>\r\n    </ng-template>\r\n  </p-card>\r\n\r\n \r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormulaService } from '../formula.service';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\n\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { UnitOfMeasure } from 'src/app/models/unitOfMeasure.model';\r\nimport { ApiService } from 'src/app/shared/ApiService.service';\r\n@Component({\r\n  selector: 'app-parameter',\r\n  templateUrl: './parameter.component.html',\r\n  styleUrls: ['./parameter.component.css'],\r\n  providers: [FormulaService]\r\n})\r\nexport class ParameterComponent implements OnInit {\r\n\r\n  numberOfParameters!: number;\r\n  formula!: string;\r\n  description!: string;\r\n  passedCreateInfo: any;\r\n  passedParamInfo: any;\r\n  parameterInformation: any;\r\n  parameterInformationIterator: any[] = [];\r\n  submitted: boolean = false;\r\n\r\n  constructor(private router: Router,public formulaService: FormulaService,) {\r\n    this.numberOfParameters = this.router.getCurrentNavigation()?.extras.state?.['numberOfParameters'];\r\n    this.formula = this.router.getCurrentNavigation()?.extras.state?.['formula'];\r\n    this.description = this.router.getCurrentNavigation()?.extras.state?.['description'];\r\n    this.passedCreateInfo = this.router.getCurrentNavigation()?.extras.state?.['passedCreateInfo'];\r\n    console.log(this.passedCreateInfo);\r\n    console.log(this.numberOfParameters);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // if user press Back Button \r\n    if (JSON.parse(String(localStorage.getItem('passedParamInfo'))) !== null) {\r\n      this.parameterInformation = JSON.parse(String(localStorage.getItem('passedParamInfo'))) ? JSON.parse(String(localStorage.getItem('passedParamInfo')))! : [];\r\n      for (let i = 0; i < Number(localStorage.getItem('numberOfParameters')); i++) {\r\n        this.parameterInformationIterator.push({\r\n          paramID: this.parameterInformation[i]?.paramID || '',\r\n          paramDescription: this.parameterInformation[i]?.paramDescription || ''\r\n        });\r\n      }\r\n    }\r\n    else {\r\n      this.parameterInformation = this.formulaService.getFormulaInformation().parameterInformation;\r\n      for (let i = 0; i < this.numberOfParameters; i++) {\r\n        this.parameterInformationIterator.push({ paramID: '', paramDescription: '' });\r\n      }\r\n    }\r\n  }\r\n\r\n  nextPage() {\r\n    if (this.parameterInformationIterator.every(param => param.paramID && param.paramDescription)) {\r\n      this.formulaService.formulaInformation.parameterInformation.parameters = this.parameterInformationIterator;\r\n      // save parameters info in local storage \r\n      localStorage.setItem('passedParamInfo', JSON.stringify(this.parameterInformationIterator));\r\n      const navigationExtras: NavigationExtras = {\r\n        state: {\r\n          passedCreateInfo: this.passedCreateInfo,\r\n          passedParamInfo: this.parameterInformationIterator\r\n        }\r\n      };\r\n      console.log(navigationExtras);\r\n      this.router.navigate(['/formula/relation'], navigationExtras);\r\n      return;\r\n    }\r\n    this.submitted = true;\r\n  }\r\n  prevPage() {\r\n    // const navigationExtras: NavigationExtras = {\r\n    //   state: {\r\n    //     numberOfParameters: this.numberOfParameters,\r\n    //     passedCreateInfo: this.passedCreateInfo,\r\n    //     formula: this.formula,\r\n    //     description: this.description\r\n    //   }\r\n    // };\r\n    // console.log(navigationExtras);\r\n    this.router.navigate(['/formula/create']);\r\n    // return;\r\n  }\r\n}\r\n","<p-card>\r\n    <ng-template pTemplate=\"content\">\r\n        <label for=\"address\">Formula Logic:</label>\r\n        <textarea #formulaLogic=\"ngModel\" id=\"formulaLogic\" type=\"text\" [(ngModel)]=\"relationInformation.formulaLogic\"\r\n            id=\"float-input\" rows=\"5\" pInputTextarea\r\n            class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary w-full\"></textarea>\r\n           \r\n            <div class=\"row\">\r\n                <div class=\"list-container\">\r\n                  <p>Parameters You Entered:</p>\r\n                  <ul class=\"list-group list-group-horizontal\">\r\n                    <a class=\"list-group-item m-1\" style=\"cursor: pointer\" *ngFor=\"let record of passedParamInfo\"\r\n                    (click)=\"paramClick(record.paramID)\"\r\n                    >\r\n                      {{ record.paramID}}\r\n                    </a>\r\n                  </ul>\r\n                </div>\r\n                <div class=\"list-container\">\r\n                  <p>Operations:</p>\r\n                  <ul class=\"list-group list-group-horizontal\">\r\n                    <a class=\"list-group-item m-1\" style=\"cursor: pointer\" *ngFor=\"let record of operations\"\r\n                    (click)=\"operationClick(record)\">\r\n                      {{ record}}\r\n                    </a>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"footer\">\r\n        <div class=\"flex justify-content-between flex-wrap\">\r\n          <p-button label=\"Back\" (onClick)=\"prevPage()\" [rounded]=\"true\"  icon=\"pi pi-angle-left\"></p-button>\r\n            <p-button label=\"Next Step\" (onClick)=\"nextPage()\" [rounded]=\"true\"  icon=\"pi pi-angle-right\" iconPos=\"right\"></p-button>\r\n        </div>\r\n    </ng-template>\r\n</p-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {NavigationExtras, Router } from '@angular/router';\r\nimport { FormulaService } from '../formula.service';\r\n\r\n@Component({\r\n  selector: 'app-relation',\r\n  templateUrl: './relation.component.html',\r\n  styleUrls: ['./relation.component.css'],\r\n  providers: [FormulaService]\r\n})\r\nexport class RelationComponent implements OnInit {\r\n\r\n  passedCreateInfo: any;\r\n  passedParamInfo: any;\r\n  relationInformation: any;\r\n  submitted: boolean = false;\r\n  parameterIds: string[] = [];\r\n  parameterDescriptions: string[] = []\r\n  operations: string[] = ['+', '-', '*', '/', '%', 'π', '^']\r\n\r\n  constructor(private router: Router, public formulaService: FormulaService,) {\r\n  }\r\n\r\n  paramClick(param: string) {\r\n    this.relationInformation.formulaLogic += param;\r\n  }\r\n\r\n  operationClick(operation: string) {\r\n    this.relationInformation.formulaLogic += operation;\r\n  }\r\n\r\n  ngOnInit() {\r\n    // hold data from previous page:\r\n    this.passedCreateInfo = history.state.passedCreateInfo;\r\n    this.passedParamInfo = history.state.passedParamInfo;\r\n    this.parameterIds = this.passedParamInfo.map((item: { paramID: any; }) => item.paramID);\r\n    this.parameterDescriptions = this.passedParamInfo.map((item: { paramDescription: any; }) => item.paramDescription);\r\n    // if user press Back Button \r\n    if (localStorage.getItem('formulaLogic') !== null) {\r\n      this.relationInformation = this.formulaService.getFormulaInformation().relationInformation;\r\n      this.relationInformation.formulaLogic = localStorage.getItem('formulaLogic');\r\n    }\r\n    else {\r\n      this.relationInformation = this.formulaService.getFormulaInformation().relationInformation;\r\n    }\r\n  }\r\n\r\n  nextPage() {\r\n    if (this.relationInformation.formulaLogic) {\r\n      // Replace 'π' with '22/7'\r\n      this.relationInformation.formulaLogic = this.relationInformation.formulaLogic.replace(/π/g, '22/7');\r\n      // Replace '^' with '**'\r\n      this.relationInformation.formulaLogic = this.relationInformation.formulaLogic.replace(/\\^/g, '**');\r\n      this.formulaService.formulaInformation.relationInformation = this.relationInformation;\r\n      // save relation info in local storage \r\n      localStorage.setItem('formulaLogic', String(this.relationInformation.formulaLogic));\r\n\r\n      const navigationExtras: NavigationExtras = {\r\n        state: {\r\n          formulaLogic: this.relationInformation.formulaLogic,\r\n          passedCreateInfo: this.passedCreateInfo,\r\n          passedParamInfo: this.passedParamInfo\r\n        }\r\n      };\r\n      this.router.navigate(['/formula/test'], navigationExtras);\r\n      return;\r\n    }\r\n    this.submitted = true;\r\n  }\r\n\r\n  prevPage() {\r\n    // const navigationExtras: NavigationExtras = {\r\n    //   state: {\r\n    //     passedParamInfo: this.passedParamInfo\r\n    //   }\r\n    // };\r\n    // console.log(navigationExtras);\r\n    this.router.navigate(['/formula/parameter']);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { Formula } from './formulas.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ApiService } from '../shared/ApiService.service';\r\n\r\n@Injectable()\r\nexport class FormulasService {\r\n  recordsChanged = new Subject<Formula[]>();\r\n  startedEditing = new Subject<number>();\r\n  model!:'formulas';\r\n  constructor(private apiService:ApiService ,private http: HttpClient) { }\r\n  private recordsApi!: Formula[]\r\n\r\n  getApiRecords(){\r\n    this.apiService.get<Formula[]>('formulas').subscribe(response => {\r\n      console.log(response);\r\n      this.recordsApi = response;\r\n      this.recordsChanged.next(this.recordsApi); \r\n    });\r\n  }\r\n}","<p-toast></p-toast>\r\n<p-table [value]=\"records\" dataKey=\"formulaCode\" styleClass=\"p-datatable-gridlines\" editMode=\"row\"\r\n    [tableStyle]=\"{'min-width': '50rem'}\">\r\n    <ng-template pTemplate=\"caption\">\r\n        <div class=\"flex align-items-center justify-content-between\">\r\n            Formulas:\r\n            <button pButton (click)=\"navigateAddFormula()\" icon=\"pi pi-plus\" class=\"rounded-input\" size=\"small\" label=\"Add Formula\"></button>\r\n        </div>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"header\">\r\n        <tr>\r\n            <th fd-table-cell>Formula Code</th>\r\n            <th fd-table-cell>Description</th>\r\n            <th fd-table-cell>Actions</th>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-record let-editing=\"editing\" let-ri=\"rowIndex\">\r\n        <tr [pEditableRow]=\"record\">\r\n            <td>\r\n                <p-cellEditor>\r\n                    <ng-template pTemplate=\"input\">\r\n                        <input pInputText type=\"text\" [(ngModel)]=\"record.formula\">\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"output\">\r\n                        {{record.formula}}\r\n                    </ng-template>\r\n                </p-cellEditor>\r\n            </td>\r\n            <td>\r\n                <p-cellEditor>\r\n                    <ng-template pTemplate=\"input\">\r\n                        <input pInputText type=\"text\" [(ngModel)]=\"record.description\">\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"output\">\r\n                        {{record.description}}\r\n                    </ng-template>\r\n                </p-cellEditor>\r\n            </td>\r\n            <td>\r\n                <button pButton pRipple type=\"button\" class=\"p-button-rounded p-button-text p-button-danger\"\r\n                    icon=\"pi pi-trash\" severity=\"danger\" (click)=\"deleteRecord(record)\"></button>\r\n                <button pButton pRipple type=\"button\" class=\"p-button-rounded p-button-text p-button-info\"\r\n                    icon=\"pi pi-info-circle\" severity=\"info\" (click)=\"showDialog(record)\"></button>\r\n            </td>\r\n        </tr>\r\n    </ng-template>\r\n</p-table>\r\n\r\n<p-confirmDialog [style]=\"{ width: '450px' }\"></p-confirmDialog>\r\n\r\n\r\n<div class=\"card flex justify-content-center\">\r\n    <p-dialog header=\"Formula Details\" [(visible)]=\"visible\" [modal]=\"true\" [style]=\"{ width: '50vw' }\"\r\n        [draggable]=\"false\" [resizable]=\"true\" [maximizable]=\"true\">\r\n        <ng-template pTemplate=\"header\">\r\n            <div class=\"inline-flex align-items-center justify-content-center gap-2\">\r\n                <span class=\"font-bold white-space-nowrap\">Formula Details</span>\r\n\r\n            </div>\r\n        </ng-template>\r\n        <div class=\"m-0\">\r\n            <div class=\"fs-6 mb-1\"><span class=\"text-danger\">Formula Code:</span>\r\n                {{selectedDetailsForDisplay?.formula}}\r\n            </div>\r\n            <div class=\"fs-6 mb-1\"> <span class=\"text-danger\">Description:</span>\r\n                {{selectedDetailsForDisplay?.description}}\r\n            </div>\r\n            <div class=\"fs-6 mb-1\"> <span class=\"text-danger\">NumberOfParameters:</span>\r\n                {{selectedDetailsForDisplay?.numberOfParameters}}\r\n            </div>\r\n            <div class=\"fs-6 mb-1\"><span class=\"text-danger\">Relation: </span>\r\n                {{selectedDetailsForDisplay?.formulaLogic}}\r\n\r\n            </div>\r\n        </div>\r\n        <ng-template pTemplate=\"footer\">\r\n            <p-button icon=\"pi pi-check\" (click)=\"visible = false\" label=\"Ok\" class=\"rounded-input\" pAutoFocus [autofocus]=\"true\"></p-button>\r\n        </ng-template>\r\n    </p-dialog>\r\n</div>","import { Component } from '@angular/core';\r\nimport { FormulasService } from './formulas.service';\r\nimport { Formula } from './formulas.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { ApiService } from '../shared/ApiService.service';\r\nimport { ConfirmationService, MessageService } from 'primeng/api';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-formulas',\r\n  templateUrl: './formulas.component.html',\r\n  styleUrls: ['./formulas.component.css'],\r\n  \r\n  providers: [FormulasService,MessageService,ConfirmationService]\r\n})\r\nexport class FormulasComponent {\r\n\r\n  records!: Formula[];\r\n  subscription!: Subscription;\r\n  constructor(private apiService: ApiService, private formulasService: FormulasService,\r\n     private messageService: MessageService, private confirmationService: ConfirmationService,private router: Router) { }\r\n  ngOnInit() {\r\n    console.log(this.formulasService.getApiRecords());\r\n    this.formulasService.getApiRecords();\r\n    this.subscription = this.formulasService.recordsChanged.subscribe((records: Formula[]) => {\r\n      this.records =  records.sort((a, b) => b.formulaCode - a.formulaCode);\r\n      console.log(this.records);\r\n    });\r\n  }\r\n\r\n  deleteRecord(record: Formula) {\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure you want to delete the selected record?',\r\n      header: 'Confirm',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.apiService.delete<Formula>('formulas', record.formulaCode).subscribe(response => {\r\n          console.log('formula deleted:', response);\r\n          this.formulasService.getApiRecords();\r\n        });\r\n        this.messageService.add({ severity: 'success', summary: 'Successfully', detail: 'Deleted', life: 3000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  navigateAddFormula(){\r\n    this.router.navigate(['/formula']);\r\n  }\r\n  selectedDetailsForDisplay?: Formula\r\n  visible: boolean = false;\r\n  showDialog(record: Formula) {\r\n    this.visible = true;\r\n    this.selectedDetailsForDisplay = record\r\n    console.log(this.selectedDetailsForDisplay);\r\n  }\r\n}\r\n","\r\nexport class ServiceMaster {\r\n    public serviceNumberCode!: number;\r\n    public searchTerm: string;\r\n    public description: string;\r\n    public serviceText: string;\r\n    public shortTextChangeAllowed: boolean;\r\n    public deletionIndicator: boolean;\r\n    public mainItem: boolean;\r\n    public numberToBeConverted: number;\r\n    public convertedNumber: number;\r\n    public serviceTypeCode: string;\r\n    public materialGroupCode: string;\r\n    public baseUnitOfMeasurement: string;\r\n\r\n    public toBeConvertedUnitOfMeasurement: string\r\n    public defaultUnitOfMeasurement: string;\r\n\r\n    unitOfMeasurementCode?:string;\r\n  \r\n    constructor(searchTerm: string, description: string, serviceText: string, shortTextChangeAllowed: boolean, deletionIndicator: boolean, mainItem: boolean,\r\n      numberToBeConverted: number,\r\n      convertedNumber: number,\r\n      serviceTypeCode: string, materialGroupCode: string,\r\n      baseUnitOfMeasurement: string, toBeConvertedUnitOfMeasurement: string,\r\n      defaultUnitOfMeasurement: string\r\n    ) {\r\n      this.searchTerm = searchTerm;\r\n      this.description = description;\r\n      this.serviceText = serviceText;\r\n      this.shortTextChangeAllowed = shortTextChangeAllowed;\r\n      this.deletionIndicator = deletionIndicator;\r\n      this.mainItem = mainItem;\r\n      this.numberToBeConverted = numberToBeConverted;\r\n      this.convertedNumber = convertedNumber;\r\n      this.serviceTypeCode = serviceTypeCode;\r\n      this.materialGroupCode = materialGroupCode;\r\n      this.baseUnitOfMeasurement = baseUnitOfMeasurement;\r\n      this.toBeConvertedUnitOfMeasurement = toBeConvertedUnitOfMeasurement;\r\n      this.defaultUnitOfMeasurement = defaultUnitOfMeasurement;\r\n    }\r\n  }","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { ServiceMaster } from './new-service-master.model';\r\nimport { ApiService } from '../shared/ApiService.service';\r\n\r\n@Injectable()\r\nexport class ServiceMasterService {\r\n  recordsChanged = new Subject<ServiceMaster[]>();\r\n  startedEditing = new Subject<number>();\r\n  constructor(private apiService: ApiService) { }\r\n  private recordsApi!: ServiceMaster[]\r\n\r\n  getRecords() {\r\n    this.apiService.get<ServiceMaster[]>('servicenumbers').subscribe(response => {\r\n      console.log(response);\r\n      this.recordsApi = response;\r\n      this.recordsChanged.next(this.recordsApi);\r\n    });\r\n  }\r\n\r\n  getRecord(id: number): Observable<ServiceMaster> {\r\n      return this.apiService.getID<ServiceMaster>('servicenumbers', id);\r\n  }\r\n\r\n\r\n  addRecord(record: ServiceMaster) {\r\n    this.apiService.post<ServiceMaster>('servicenumbers', record).subscribe((response: ServiceMaster) => {\r\n      console.log('service master created:', response);\r\n      this.getRecords();\r\n      return response\r\n    });\r\n  }\r\n\r\n  updateRecord(index: number, newRecord: ServiceMaster) {\r\n    this.apiService.put<ServiceMaster>('servicenumbers', index, newRecord).subscribe(response => {\r\n      console.log('service master updated:',response);\r\n      this.getRecords()\r\n    });\r\n  }\r\n}","<p-toast></p-toast>\r\n<div class=\"card mt-5\">\r\n<form [formGroup]=\"serviceMasterForm\" (ngSubmit)=\"onSubmit(serviceMasterForm)\">\r\n    <div class=\"row m-2\">\r\n        <div class=\"field col-12 md:col-3\">\r\n            <label for=\"id\">Service Number(ID):</label>\r\n            <input id=\"serviceNumberCode\" [disabled]=\"true\"  name=\"serviceNumberCode\" type=\"number\" formControlName=\"serviceNumberCode\"\r\n                class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary w-full\"\r\n                 >\r\n\r\n        </div>\r\n        <div class=\"field col-12 md:col-3\">\r\n            <label for=\"code\">SearchTerm:<span style=\"color: red;\">*</span></label>\r\n            <input id=\"searchTerm\" name=\"searchTerm\" type=\"text\" formControlName=\"searchTerm\"\r\n                class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary w-full\">\r\n\r\n            <div class=\"text-danger m-1\"\r\n                *ngIf=\"serviceMasterForm.get('searchTerm')?.errors?.['required'] && serviceMasterForm.get('searchTerm')?.touched\">\r\n                Search Term is required\r\n            </div>\r\n        </div>\r\n        <div class=\"field col-12 md:col-3\">\r\n            <label for=\"description\">Description:<span style=\"color: red;\">*</span></label>\r\n            <input id=\"description\" name=\"description\" formControlName=\"description\"\r\n                class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary w-full\">\r\n\r\n            <div class=\"text-danger m-1\"\r\n                *ngIf=\"serviceMasterForm.get('description')?.errors?.['required'] && serviceMasterForm.get('description')?.touched\">\r\n                Description is required\r\n            </div>\r\n        </div>\r\n        <div class=\"field col-12 md:col-3\">\r\n            <label for=\"serviceText\">Service Text:</label>\r\n            <input id=\"serviceText\" name=\"serviceText\" type=\"text\" formControlName=\"serviceText\"\r\n                class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary w-full\">\r\n        </div>\r\n    </div>\r\n    <div class=\"row m-2\">\r\n        <div class=\"field col-12 md:col-6\">\r\n            <label for=\"shortTextChangeAllowed\" class=\"mr-1\">Short Text Change Allowed:</label>\r\n            <input id=\"shortTextChangeAllowed\" name=\"shortTextChangeAllowed\" type=\"checkbox\"\r\n                formControlName=\"shortTextChangeAllowed\">\r\n        </div>\r\n        <div class=\"field col-12 md:col-6\">\r\n            <label for=\"deletionIndicator\" class=\"mr-1\">Deletion Indicator:</label>\r\n            <input id=\"deletionIndicator\" name=\"deletionIndicator\" type=\"checkbox\" formControlName=\"deletionIndicator\">\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row m-2\">\r\n        <div class=\"field col-12 md:col-6\">\r\n            <!-- <ng-container> -->\r\n\r\n                <p-dropdown [options]=\"recordsServiceType\" formControlName=\"serviceTypeCode\" optionValue=\"serviceId\"\r\n                    optionLabel=\"serviceId\" [filter]=\"true\" [filterFields]=\"['serviceId','description']\"\r\n                    [showClear]=\"true\" placeholder=\"Select Service Type\" [virtualScroll]=\"true\"\r\n                    [virtualScrollItemSize]=\"40\">\r\n                    <ng-template let-record pTemplate=\"item\">\r\n                        <div class=\"flex align-items-center gap-2\">\r\n                            <div>{{ record.serviceId }}::{{ record.description }}</div>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-dropdown>\r\n\r\n                <span style=\"color: red;margin: 5px;\">*</span>\r\n            <!-- </ng-container> -->\r\n            <div class=\"text-danger m-1 w-20\" style=\"width:15rem\"\r\n                *ngIf=\"serviceMasterForm.get('serviceTypeCode')?.errors?.['required'] && serviceMasterForm.get('serviceTypeCode')?.touched\">\r\n                ServiceType is required\r\n            </div>\r\n        </div>\r\n        <div class=\"field col-12 md:col-6\">\r\n\r\n            <p-dropdown [options]=\"recordsMeasure\" formControlName=\"baseUnitOfMeasurement\"\r\n                optionValue=\"code\" optionLabel=\"code\" [filter]=\"true\"\r\n                [filterFields]=\"['code','description']\" [showClear]=\"true\"\r\n                placeholder=\"Select Base UnitOfMeasure\" [virtualScroll]=\"true\" [virtualScrollItemSize]=\"40\">\r\n                <ng-template let-record pTemplate=\"item\">\r\n                    <div class=\"flex align-items-center gap-2\">\r\n                        <!-- <div>{{ record.UnitOfMeasureLongName }}::{{ record.UnitOfMeasureName }}</div> -->\r\n                        <div>{{ record.code }}::{{ record.description }}</div>\r\n                    </div>\r\n                </ng-template>\r\n            </p-dropdown>\r\n\r\n            <span style=\"color: red;margin: 5px;\">*</span>\r\n\r\n            <div class=\"text-danger m-1 w-20\" style=\"width:19rem\"\r\n                *ngIf=\"serviceMasterForm.get('baseUnitOfMeasurement')?.errors?.['required'] && serviceMasterForm.get('baseUnitOfMeasurement')?.touched\">\r\n                BaseUnitOfMeasurement is required\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <h3>Control Data:</h3>\r\n    <hr>\r\n    <label for=\"conversion\">Conversion:</label>\r\n    <div class=\"form-control m-2\">\r\n        <label for=\"conversion\">ToBe Converted Number:</label>\r\n        <div class=\"formgrid grid\">\r\n            <div class=\"field col-12 md:col-6\">\r\n                <input id=\"numberToBeConverted\" pInputNumber [min]=\"0\" name=\"numberToBeConverted\" type=\"number\"\r\n                    formControlName=\"numberToBeConverted\"\r\n                    class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary\">\r\n            </div>\r\n            <div class=\"field col-12 md:col-6\">\r\n                <p-dropdown [options]=\"recordsMeasure\" formControlName=\"toBeConvertedUnitOfMeasurement\"\r\n                    optionValue=\"code\" optionLabel=\"code\" [filter]=\"true\"\r\n                    [filterFields]=\"['code','description']\" [showClear]=\"true\"\r\n                    placeholder=\"Select ToBeConverted UnitOfMeasure\" [virtualScroll]=\"true\"\r\n                    [virtualScrollItemSize]=\"40\">\r\n                    <ng-template let-record pTemplate=\"item\">\r\n                        <div class=\"flex align-items-center gap-2\">\r\n                            <div>{{ record.code }}::{{ record.description }}</div>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-dropdown>\r\n            </div>\r\n        </div>\r\n        <label for=\"conversion\">Converted Number:</label>\r\n        <div class=\"formgrid grid\">\r\n            <div class=\"field col-12 md:col-6\">\r\n                <input id=\"convertedNumber\" pInputNumber [min]=\"0\" name=\"convertedNumber\" type=\"number\"\r\n                    formControlName=\"convertedNumber\"\r\n                    class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary\">\r\n            </div>\r\n            <div class=\"field col-12 md:col-6\">\r\n                <p-dropdown [options]=\"recordsMeasure\" formControlName=\"defaultUnitOfMeasurement\"\r\n                    optionValue=\"code\" optionLabel=\"code\" [filter]=\"true\"\r\n                    [filterFields]=\"['code','description']\" [showClear]=\"true\"\r\n                    placeholder=\"Select Converted UnitOfMeasure\" [virtualScroll]=\"true\" [virtualScrollItemSize]=\"40\">\r\n                    <ng-template let-record pTemplate=\"item\">\r\n                        <div class=\"flex align-items-center gap-2\">\r\n                            <div>{{ record.code }}::{{ record.description }}</div>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-dropdown>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row m-2\">\r\n        <div class=\"field col-12 md:col-6\">\r\n            <label for=\"mainItem\" class=\"mr-1\">Main Item:</label>\r\n            <input id=\"mainItem\" name=\"mainItem\" type=\"checkbox\" formControlName=\"mainItem\">\r\n        </div>\r\n        <div class=\"field col-12 md:col-6\">\r\n            <ng-container>\r\n                <p-dropdown [options]=\"recordsMaterialGrp\" formControlName=\"materialGroupCode\" optionValue=\"code\"\r\n                    optionLabel=\"code\" [filter]=\"true\" [filterFields]=\"['code','description']\" [showClear]=\"true\"\r\n                    placeholder=\"Select Material Group\" [virtualScroll]=\"true\" [virtualScrollItemSize]=\"40\">\r\n                    <ng-template let-record pTemplate=\"item\">\r\n                        <div class=\"flex align-items-center gap-2\">\r\n                            <div>{{ record.code }}::{{ record.description }}</div>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-dropdown>\r\n            </ng-container>\r\n\r\n        </div>\r\n    </div>\r\n    <div class=\" text-center m-3\">\r\n        <button pButton [disabled]=\"serviceMasterForm.invalid\" class=\"rounded-input\">{{ editMode ?\r\n            'Update' : 'Add' }}\r\n        </button>\r\n    </div>\r\n</form>\r\n</div>\r\n\r\n<p-confirmDialog [style]=\"{ width: '450px' }\"></p-confirmDialog>","\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ConfirmationService, Message, MessageService } from 'primeng/api';\r\nimport { FormControl, FormGroup, NgForm, Validators } from '@angular/forms';\r\nimport { ApiService } from 'src/app/shared/ApiService.service';\r\nimport { ServiceMaster } from '../../new-service-master/new-service-master.model';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ServiceMasterService } from '../new-service-master.service';\r\n\r\n@Component({\r\n  selector: 'app-add-edit-service-master',\r\n  templateUrl: './add-edit-service-master.component.html',\r\n  styleUrls: ['./add-edit-service-master.component.css'],\r\n  providers: [ApiService, ServiceMasterService, MessageService, ConfirmationService]\r\n})\r\nexport class AddEditServiceMasterComponent implements OnInit {\r\n\r\n  serviceMasterForm = new FormGroup({\r\n    serviceNumberCode: new FormControl(0),\r\n    searchTerm: new FormControl('', [Validators.required]),\r\n    description: new FormControl('', [Validators.required]),\r\n    serviceText: new FormControl(''),\r\n    shortTextChangeAllowed: new FormControl(false),\r\n    deletionIndicator: new FormControl(false),\r\n    numberToBeConverted: new FormControl(0),\r\n    convertedNumber: new FormControl(0),\r\n    mainItem: new FormControl(false),\r\n    serviceTypeCode: new FormControl('', [Validators.required]),\r\n    materialGroupCode: new FormControl(''),\r\n    baseUnitOfMeasurement: new FormControl(''),\r\n    toBeConvertedUnitOfMeasurement: new FormControl(''),\r\n    defaultUnitOfMeasurement: new FormControl(''),\r\n  });\r\n\r\n  editMode = false;\r\n  copyMode = false\r\n  pageId: number = 0;\r\n\r\n  serviceMasterInfo: ServiceMaster = {\r\n    serviceNumberCode: 0, searchTerm: '', description: '', serviceText: '', shortTextChangeAllowed: false, deletionIndicator: false,\r\n    numberToBeConverted: 0, convertedNumber: 0, mainItem: false,\r\n    serviceTypeCode: '', materialGroupCode: '',\r\n    baseUnitOfMeasurement: '', toBeConvertedUnitOfMeasurement: '', defaultUnitOfMeasurement: ''\r\n  };\r\n\r\n  // Fields of Dropdowns:\r\n  recordsServiceType!: any[];\r\n  selectedServiceType!: number;\r\n  recordsMeasure!: any[];\r\n  selectedBaseMeasure!: number;\r\n  baseUnitOfMeasurement!: string;\r\n  selectedToBeConvertedMeasure!: string;\r\n  selectedConvertedMeasure!: string;\r\n  recordsMaterialGrp!: any[];\r\n  selectedMaterialGrp!: number;\r\n\r\n  constructor(private apiService: ApiService, private serviceMasterService: ServiceMasterService\r\n    , private messageService: MessageService, private router: Router, private confirmationService: ConfirmationService, private route: ActivatedRoute) {\r\n\r\n    if (this.router.getCurrentNavigation()?.extras.state) {\r\n      const state = this.router.getCurrentNavigation()?.extras.state?.['Record'];\r\n      const copyFlag = this.router.getCurrentNavigation()?.extras.state?.['Copy'];\r\n      if (copyFlag) {\r\n        this.serviceMasterInfo = state;\r\n        this.copyMode = copyFlag;\r\n        this.pageId = state?.serviceNumberCode;\r\n        console.log(this.serviceMasterInfo);\r\n\r\n      } else {\r\n        this.serviceMasterInfo = state;\r\n        this.editMode = true;\r\n        this.pageId = state?.serviceNumberCode;\r\n        console.log(this.serviceMasterInfo);\r\n        \r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.apiService.get<any[]>('servicetypes').subscribe(response => {\r\n      this.recordsServiceType = response;\r\n    });\r\n    this.apiService.get<any[]>('measurements').subscribe(response => {\r\n      this.recordsMeasure = response;\r\n    });\r\n    this.apiService.get<any[]>('materialgroups').subscribe(response => {\r\n      this.recordsMaterialGrp = response;\r\n    });\r\n\r\n    if (this.editMode || this.copyMode) {\r\n      this.getServiceMasterById(this.pageId)\r\n    }\r\n  }\r\n\r\n  getServiceMasterById(id: number) {\r\n      // this.apiService.getID<ServiceMaster>('servicenumbers',id).subscribe({\r\n      // next: (res: ServiceMaster) => {\r\n      //   console.log(res);\r\n      //   this.serviceMasterInfo = res;\r\n      // }, error: (err: any) => {\r\n      //   console.log(err);\r\n\r\n      // }, complete: () => {\r\n      if(this.serviceMasterInfo){\r\n        this.serviceMasterForm.patchValue({\r\n          serviceNumberCode:this.serviceMasterInfo?.serviceNumberCode,\r\n          searchTerm:this.serviceMasterInfo?.searchTerm,\r\n          description:this.serviceMasterInfo?.description,\r\n          serviceText:this.serviceMasterInfo?.serviceText,\r\n          shortTextChangeAllowed:this.serviceMasterInfo?.shortTextChangeAllowed,\r\n          deletionIndicator:this.serviceMasterInfo?.deletionIndicator,\r\n          serviceTypeCode:this.serviceMasterInfo?.serviceTypeCode,\r\n          baseUnitOfMeasurement:this.serviceMasterInfo?.baseUnitOfMeasurement  ,\r\n          numberToBeConverted:this.serviceMasterInfo?.numberToBeConverted,\r\n          toBeConvertedUnitOfMeasurement:this.serviceMasterInfo?.toBeConvertedUnitOfMeasurement,\r\n          convertedNumber:this.serviceMasterInfo?.convertedNumber,\r\n          defaultUnitOfMeasurement:this.serviceMasterInfo?.defaultUnitOfMeasurement,\r\n          mainItem:this.serviceMasterInfo?.mainItem,\r\n          materialGroupCode:this.serviceMasterInfo?.materialGroupCode\r\n\r\n        })\r\n      }// end if\r\n     // }\r\n    //})\r\n  }\r\n\r\n  onSubmit(form: FormGroup) {\r\n    const value = form.value;\r\n    console.log(value);\r\n    if (this.editMode) {\r\n        this.serviceMasterService.updateRecord(this.pageId, form.value);\r\n        this.serviceMasterService.getRecords();\r\n        this.confirmationService.confirm({\r\n          message: `ServiceMaster ${this.pageId} Updated successfully. Click Yes to go to the Main Page.`,\r\n          header: 'Updated Successfully',\r\n          icon: 'pi pi-check',\r\n          accept: () => {\r\n            this.router.navigate(['/servicemaster']);\r\n          },\r\n          reject: undefined\r\n        });\r\n      \r\n    } else {\r\n      const newRecord = new ServiceMaster(value.searchTerm, value.description,\r\n        value.serviceText, value.shortTextChangeAllowed,\r\n        value.deletionIndicator, value.mainItem, value.numberToBeConverted,\r\n        value.convertedNumber,\r\n        value.serviceTypeCode, value.materialGroupCode,\r\n        value.baseUnitOfMeasurement, value.toBeConvertedUnitOfMeasurement, value.defaultUnitOfMeasurement);\r\n\r\n        // Remove properties with empty or default values\r\n        const filteredRecord = Object.fromEntries(\r\n          Object.entries(newRecord).filter(([_, value]) => {\r\n            return value !== '' && value !== 0 && value !== undefined && value !== null;\r\n          })\r\n        );\r\n        console.log(filteredRecord);\r\n        this.apiService.post<ServiceMaster>('servicenumbers', filteredRecord).subscribe({\r\n    next:(res:ServiceMaster)=>{\r\n      console.log('service master created:', res);\r\n     \r\n    },error:(err)=>{\r\n      console.log(err);\r\n      \r\n    },complete:()=>{\r\n      this.confirmationService.confirm({\r\n        message: `ServiceMaster  Added successfully. Click Yes to go to the Main Page.`,\r\n        header: 'Added Successfully',\r\n        icon: 'pi pi-check',\r\n        accept: () => {\r\n          this.router.navigate(['/servicemaster']);\r\n        },\r\n        reject: () => {\r\n        }\r\n      });\r\n    }\r\n        })\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","<!-- Service Master Data -->\r\n<div class=\"card mt-5\">\r\n    <p-toast></p-toast>\r\n    <p-toolbar styleClass=\"mb-4 gap-2\">\r\n        <ng-template pTemplate=\"left\">\r\n            <div class=\"field\">\r\n                <input pInputText type=\"text\" placeholder=\"Search....\"\r\n                    class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary \"\r\n                    [(ngModel)]=\"searchValue\" (input)=\"onSearchInputChange()\" />\r\n            </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"right\">\r\n            <button pButton label=\"Create\" size=\"small\" icon=\"pi pi-plus\" (click)=\"navigateAddServices()\"\r\n                class=\"m-2\"></button>\r\n                <button pButton label=\"Details\" size=\"small\" (click)=\"navigateDetailServices()\"\r\n                class=\"m-2\"></button>\r\n            <!-- <button pButton label=\"Edit\" class=\"p-button-rounded m-2 \" (click)=\"navigateAddServices()\" [disabled]=\"!isEditButtonDisabled\" class=\"m-2 edit-button\"></button>  -->\r\n            <button pButton label=\"Edit\" size=\"small\" (click)=\"navigateEditService()\" class=\"m-2 edit-button\"></button>\r\n            <button pButton pRipple icon=\"pi pi-copy\" \r\n            \r\n                (click)=\"navigateCopyService()\"></button>\r\n            <button pButton label=\"Export\" size=\"small\" (click)=\"exportExcel()\" icon=\"pi pi-upload\"\r\n                class=\"m-2\"></button>\r\n\r\n        </ng-template>\r\n    </p-toolbar>\r\n\r\n    <div class=\"table-container\">\r\n        <p-table #dt [columns]=\"selectedColumns\" [value]=\"filteredRecords\" [scrollable]=\"true\" scrollHeight=\"400px\"\r\n            [reorderableColumns]=\"true\" [rows]=\"10\" [filterDelay]=\"0\"\r\n            [globalFilterFields]=\"['code', 'description','lastChangeDate','serviceTypeCode']\"\r\n            [tableStyle]=\"{ 'min-width': '50rem' }\" [rowHover]=\"true\" dataKey=\"serviceNumberCode\" [showCurrentPageReport]=\"true\">\r\n\r\n            <ng-template pTemplate=\"caption\">\r\n                <p-multiSelect [options]=\"cols\" [(ngModel)]=\"selectedColumns\" optionLabel=\"header\"\r\n                    selectedItemsLabel=\"{0} columns selected\" [style]=\"{'min-width': '200px'}\"\r\n                    placeholder=\"Choose Columns\"></p-multiSelect>\r\n            </ng-template>\r\n\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 4rem\">\r\n                    </th>\r\n                    <th pReorderableColumn *ngFor=\"let col of columns\" pSortableColumn={{col.field}}>\r\n                        {{col.header}}\r\n                        <p-sortIcon field={{col.field}}></p-sortIcon>\r\n                        <p-columnFilter type=\"text\" field={{col.field}} display=\"menu\" class=\"ml-auto\"></p-columnFilter>\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-record let-columns=\"columns\">\r\n                <tr>\r\n                    <td>\r\n                        <p-checkbox [value]=\"record\" (onChange)=\"onRecordSelectionChange($event, record)\"></p-checkbox>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.field === 'serviceNumberCode'\">\r\n                            {{ 'S' + record[col.field]  }}\r\n                          </ng-container>\r\n                          <ng-container *ngIf=\"col.field !== 'serviceNumberCode'\">\r\n                            {{ record[col.field] }}\r\n                          </ng-container>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n<p-confirmDialog [style]=\"{ width: '450px' }\"></p-confirmDialog>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ModelComponent } from './model/model.component';\r\nimport { AddModelComponent } from './model/add-model/add-model.component';\r\nimport { ModelDetailsComponent } from './model-details/model-details.component';\r\nimport { ServiceTypeComponent } from './service-type/service-type.component';\r\nimport { FormulaComponent } from './formula/formula.component';\r\nimport { CreateComponent } from './formula/create/create.component';\r\nimport { ParameterComponent } from './formula/parameter/parameter.component';\r\nimport { RelationComponent } from './formula/relation/relation.component';\r\nimport { TestComponent } from './formula/test/test.component';\r\nimport { FormulasComponent } from './formulas/formulas.component';\r\nimport { AuthComponent } from './auth/auth.component';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AddEditServiceMasterComponent } from './new-service-master/add-edit-service-master/add-edit-service-master.component';\r\nimport { NewServiceMasterComponent } from './new-service-master/new-service-master.component';\r\nimport { ServiceMasterDetailComponent } from './new-service-master/service-master-detail/service-master-detail.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  // { path: '', component: HomeComponent },\r\n  // { path: 'home', component: HomeComponent },\r\n  // { path: 'login', component: AuthComponent },\r\n  \r\n  // { path: 'servicetype',canActivate:[AuthGuard], component: ServiceTypeComponent }, //data: { role: ['Admin', 'Manager'] }\r\n  // {\r\n  //   path: 'model',canActivate:[AuthGuard], component: ModelComponent\r\n  // },\r\n  // { path: 'add-model',canActivate:[AuthGuard], component: AddModelComponent },\r\n  // { path: 'servicemaster',canActivate:[AuthGuard], component: NewServiceMasterComponent },\r\n  // { path: 'add-edit-servicemaster',canActivate:[AuthGuard], component: AddEditServiceMasterComponent },\r\n  // { path: 'detail-servicemaster',canActivate:[AuthGuard], component: ServiceMasterDetailComponent },\r\n  // { path: 'modelSpecDetails',canActivate:[AuthGuard], component: ModelDetailsComponent },\r\n  // { path: 'formulas',canActivate:[AuthGuard], component: FormulasComponent },\r\n\r\n  // {\r\n  //   path: 'formula', canActivate:[AuthGuard],component: FormulaComponent,\r\n  //   children: [\r\n  //     { path: '',canActivate:[AuthGuard], component: CreateComponent },\r\n  //     { path: 'create',canActivate:[AuthGuard], component: CreateComponent },\r\n  //     { path: 'parameter',canActivate:[AuthGuard], component: ParameterComponent },\r\n  //     { path: 'relation',canActivate:[AuthGuard], component: RelationComponent },\r\n  //     { path: 'test',canActivate:[AuthGuard], component: TestComponent },\r\n  //   ]\r\n  // },\r\n\r\n\r\n  /// Without security:\r\n  { path: '', component: ServiceTypeComponent },\r\n  \r\n  { path: 'servicetype', component: ServiceTypeComponent }, //data: { role: ['Admin', 'Manager'] }\r\n  {\r\n    path: 'model', component: ModelComponent\r\n  },\r\n  { path: 'add-model', component: AddModelComponent },\r\n  { path: 'servicemaster', component: NewServiceMasterComponent },\r\n  { path: 'add-edit-servicemaster', component: AddEditServiceMasterComponent },\r\n  { path: 'detail-servicemaster', component: ServiceMasterDetailComponent },\r\n  { path: 'modelSpecDetails', component: ModelDetailsComponent },\r\n  { path: 'formulas', component: FormulasComponent },\r\n\r\n  {\r\n    path: 'formula', component: FormulaComponent,\r\n    children: [\r\n      { path: '', component: CreateComponent },\r\n      { path: 'create', component: CreateComponent },\r\n      { path: 'parameter', component: ParameterComponent },\r\n      { path: 'relation', component: RelationComponent },\r\n      { path: 'test', component: TestComponent },\r\n    ]\r\n  },\r\n\r\n\r\n  /////\r\n  // { path: '', component: AppComponent},\r\n  // { path: 'home', component: HomeComponent},\r\n  // { path: 'home', component: HomePageComponent },\r\n  \r\n  //..........\r\n\r\n\r\n  // { path: 'login', component: AuthComponent },\r\n  // { path: 'servicetype',canActivate:[AuthGuard], component: ServiceTypeComponent },\r\n  // {\r\n  //   path: 'home', component: HomeComponent, children: [\r\n  //     {\r\n  //       path: 'model',canActivate:[AuthGuard], component: ModelComponent\r\n  //     },\r\n  //     { path: 'add-model',canActivate:[AuthGuard], component: AddModelComponent },\r\n  //     { path: 'servicemaster',canActivate:[AuthGuard], component: NewServiceMasterComponent },\r\n  //     { path: 'add-edit-servicemaster',canActivate:[AuthGuard], component: AddEditServiceMasterComponent },\r\n  //     { path: 'detail-servicemaster',canActivate:[AuthGuard], component: ServiceMasterDetailComponent },\r\n  //     { path: 'modelSpecDetails',canActivate:[AuthGuard], component: ModelDetailsComponent },\r\n  //     { path: 'formulas',canActivate:[AuthGuard], component: FormulasComponent },\r\n  //     {\r\n  //       path: 'formula', canActivate:[AuthGuard],component: FormulaComponent,\r\n  //       children: [\r\n  //         { path: '',canActivate:[AuthGuard], component: CreateComponent },\r\n  //         { path: 'create',canActivate:[AuthGuard], component: CreateComponent },\r\n  //         { path: 'parameter',canActivate:[AuthGuard], component: ParameterComponent },\r\n  //         { path: 'relation',canActivate:[AuthGuard], component: RelationComponent },\r\n  //         { path: 'test',canActivate:[AuthGuard], component: TestComponent },\r\n  //       ]\r\n  //     },\r\n  //   ]\r\n  // },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { ConfirmationService, MessageService } from 'primeng/api';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\nimport * as FileSaver from 'file-saver';\r\nimport { ServiceMaster } from './new-service-master.model';\r\nimport { ServiceMasterService } from './new-service-master.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { ApiService } from '../shared/ApiService.service';\r\n\r\ninterface Column {\r\n  field: string;\r\n  header: string;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-new-service-master',\r\n  templateUrl: './new-service-master.component.html',\r\n  styleUrls: ['./new-service-master.component.css'],\r\n  \r\n  providers: [MessageService, ConfirmationService, ServiceMasterService]\r\n})\r\nexport class NewServiceMasterComponent {\r\n\r\n  \r\n      subscription!: Subscription;\r\n      serviceMasterRecords!: ServiceMaster[];\r\n      filteredRecords: ServiceMaster[] = this.serviceMasterRecords;\r\n      // to change Columns View \r\n      cols!: Column[];\r\n      selectedColumns!: Column[];\r\n      // to handel checkbox selection:\r\n      selectedRecord: ServiceMaster | null = null;\r\n      selectedRecords: any[] = [];\r\n      editMode = false;\r\n  \r\n      constructor(private apiService: ApiService, private serviceMasterService: ServiceMasterService,\r\n          private router: Router, private cd: ChangeDetectorRef) { }\r\n  \r\n      ngOnInit() {\r\n          this.serviceMasterService.getRecords();\r\n          this.subscription = this.serviceMasterService.recordsChanged.subscribe((records: ServiceMaster[]) => {\r\n              this.serviceMasterRecords = records;\r\n              this.filteredRecords = records.sort((a, b) => b.serviceNumberCode - a.serviceNumberCode);\r\n          });\r\n          this.cd.markForCheck();\r\n          this.cols = [\r\n              { field: 'serviceNumberCode', header: 'Service Master Code' },\r\n              { field: 'searchTerm', header: 'Search Term' },\r\n              { field: 'description', header: 'Description' },\r\n              { field: 'lastChangeDate', header: 'Last Change Date' },\r\n              { field: 'serviceTypeCode', header: 'Service Type' }\r\n          ];\r\n          this.selectedColumns = this.cols;\r\n      }\r\n  \r\n      onRecordSelectionChange(event: any, record: any) {\r\n          if (event.checked) {\r\n              this.selectedRecord = record\r\n              // Add the record to the selectedRecords array if it's not already present\r\n              if (!this.selectedRecords.includes(record)) {\r\n                  this.selectedRecords.push(record);\r\n              }\r\n          } else {\r\n              // Remove the record from the selectedRecords array\r\n              const index = this.selectedRecords.indexOf(record);\r\n              if (index !== -1) {\r\n                  this.selectedRecords.splice(index, 1);\r\n              }\r\n          }\r\n      }\r\n      // To handle Search Input \r\n      searchValue: string = '';\r\n      onSearchInputChange(): void {\r\n          const keyword = this.searchValue\r\n          if (keyword !== '') {\r\n              this.apiService.get<ServiceMaster[]>('servicenumbers/search', keyword).subscribe(response => {\r\n                  console.log(response);\r\n                  this.filteredRecords = response\r\n              });\r\n          }\r\n          else {\r\n              this.filteredRecords = this.serviceMasterRecords;\r\n          }\r\n      }\r\n  \r\n      onColumnSelectionChange() {\r\n          this.selectedColumns = this.cols.filter(col => this.selectedColumns.includes(col));\r\n      }\r\n  \r\n      navigateEditService() {\r\n          const navigationExtras: NavigationExtras = {\r\n              state: {\r\n                  Record: this.selectedRecord,\r\n              }\r\n          };\r\n          if (this.selectedRecords.length > 0) {\r\n              this.router.navigate(['/add-edit-servicemaster'], navigationExtras);\r\n          }\r\n      }\r\n      navigateCopyService() {\r\n          const navigationExtras: NavigationExtras = {\r\n              state: {\r\n                  Record: this.selectedRecord,\r\n                  Copy: true\r\n              }\r\n          };\r\n          if (this.selectedRecords.length > 0) {\r\n              this.router.navigate(['/add-edit-servicemaster'], navigationExtras);\r\n          }\r\n      }\r\n      navigateAddServices() {\r\n          this.router.navigate(['/add-edit-servicemaster']);\r\n      }\r\n\r\n      navigateDetailServices() {\r\n          const navigationExtras: NavigationExtras = {\r\n              state: {\r\n                  RecordDetails: this.selectedRecord,\r\n              }\r\n          };\r\n          if (this.selectedRecords.length > 0) {\r\n              this.router.navigate(['/detail-servicemaster'], navigationExtras);\r\n          }\r\n      }\r\n      // Export Service Master Data to Excel Sheet\r\n      exportExcel() {\r\n          import('xlsx').then((xlsx) => {\r\n              const selectedRows = this.selectedRecords.length > 0 ? this.selectedRecords : this.serviceMasterRecords;\r\n              const worksheet = xlsx.utils.json_to_sheet(selectedRows);\r\n              const workbook = { Sheets: { data: worksheet }, SheetNames: ['data'] };\r\n              const excelBuffer: any = xlsx.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n              this.saveAsExcelFile(excelBuffer, 'services');\r\n          });\r\n      }\r\n      saveAsExcelFile(buffer: any, fileName: string): void {\r\n          let EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n          let EXCEL_EXTENSION = '.xlsx';\r\n          const data: Blob = new Blob([buffer], {\r\n              type: EXCEL_TYPE\r\n          });\r\n          FileSaver.saveAs(data, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);\r\n      }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ApiService } from 'src/app/shared/ApiService.service';\r\nimport { Router } from '@angular/router';\r\nimport { ConfirmationService, MessageService } from 'primeng/api';\r\nimport { ServiceMasterService } from '../new-service-master.service';\r\nimport { ServiceMaster } from '../new-service-master.model';\r\n\r\n@Component({\r\n  selector: 'app-service-master-detail',\r\n  templateUrl: './service-master-detail.component.html',\r\n  styleUrls: ['./service-master-detail.component.css'],\r\n  providers: [ApiService, ServiceMasterService, MessageService, ConfirmationService]\r\n})\r\nexport class ServiceMasterDetailComponent {\r\n\r\n  selectedRecord: ServiceMaster = {\r\n    serviceNumberCode: 0, searchTerm: '', description: '', serviceText: '', shortTextChangeAllowed: false, deletionIndicator: false,\r\n    numberToBeConverted: 0, convertedNumber: 0, mainItem: false,\r\n    serviceTypeCode: '', materialGroupCode: '',\r\n     baseUnitOfMeasurement: '', toBeConvertedUnitOfMeasurement: '', defaultUnitOfMeasurement: ''\r\n  };\r\n\r\n  constructor( private router: Router,) {\r\n    if (this.router.getCurrentNavigation()?.extras.state) {\r\n      const state = this.router.getCurrentNavigation()?.extras.state?.['RecordDetails'];\r\n      if (state) {\r\n        this.selectedRecord = state;\r\n        console.log(this.selectedRecord);\r\n      }\r\n    }\r\n  }\r\n  navigateMainPage(){\r\n    this.router.navigate(['/servicemaster']);\r\n  }\r\n}\r\n","<p-toast></p-toast>\r\n<form  >\r\n    <div class=\"row m-2\">\r\n        <div class=\"field col-12 md:col-3\">\r\n            <label for=\"id\" style=\"color: rgb(11, 37, 139);\">Service Number(ID):</label>\r\n            <input id=\"serviceNumberCode\" name=\"serviceNumberCode\" type=\"number\"\r\n             [value]=\"this.selectedRecord.serviceNumberCode\"\r\n              class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary w-full\"\r\n              [disabled]=\"true\">\r\n          </div>\r\n        <div class=\"field col-12 md:col-3\">\r\n            <label for=\"code\" style=\"color: rgb(11, 37, 139);\">SearchTerm:<span style=\"color: red;\">*</span></label>\r\n            <input id=\"searchTerm\" name=\"searchTerm\" required type=\"text\" \r\n            [value]=\"this.selectedRecord.searchTerm\" [disabled]=\"true\"\r\n                class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary w-full\">\r\n        </div>\r\n        <div class=\"field col-12 md:col-3\">\r\n            <label for=\"description\" style=\"color: rgb(11, 37, 139);\">Description: <span style=\"color: red;\">*</span></label>\r\n            <input id=\"description\" name=\"description\" required type=\"text\" \r\n            [value]=\"this.selectedRecord.description\" [disabled]=\"true\"\r\n                class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary w-full\">\r\n        </div>\r\n        <div class=\"field col-12 md:col-3\">\r\n            <label for=\"serviceText\" style=\"color: rgb(11, 37, 139);\">Service Text:</label>\r\n            <input id=\"serviceText\" name=\"serviceText\"  type=\"text\" \r\n            [value]=\"this.selectedRecord.serviceText\" [disabled]=\"true\"\r\n                class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary w-full\">\r\n\r\n        </div>\r\n    </div>\r\n    <div class=\"row m-2\">\r\n        <div class=\"field col-12 md:col-6\">\r\n            <label for=\"shortTextChangeAllowed\" class=\"mr-1\" style=\"color: rgb(11, 37, 139);\">Short Text Change Allowed:</label>\r\n                <input id=\"shortTextChangeAllowed\" name=\"shortTextChangeAllowed\" [disabled]=\"true\"\r\n                [value]=\"this.selectedRecord.shortTextChangeAllowed\"\r\n                class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary\">\r\n        </div>\r\n        <div class=\"field col-12 md:col-6\">\r\n            <label for=\"deletionIndicator\" class=\"mr-1\" style=\"color: rgb(11, 37, 139);\">Deletion Indicator:</label>\r\n                <input id=\"deletionIndicator\" name=\"deletionIndicator\" type=\"checkbox\"  [disabled]=\"true\"\r\n                [value]=\"this.selectedRecord.deletionIndicator\" \r\n                class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary\" >\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row m-2\">\r\n        <div class=\"field col-12 md:col-6\">\r\n            <label for=\"ServiceTypeCode\" style=\"color: rgb(11, 37, 139);\">Service Type:<span style=\"color: red;\">*</span></label>\r\n            <input id=\"ServiceTypeCode\" name=\"ServiceTypeCode\"   [disabled]=\"true\"\r\n            [value]=\"this.selectedRecord.serviceTypeCode\"\r\n            class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary\">\r\n        </div>\r\n        <div class=\"field col-12 md:col-6\">\r\n            <label for=\"baseUnitOfMeasurement\" style=\"color: rgb(11, 37, 139);\" >Base UnitOfMeasurement:<span style=\"color: red;\">*</span></label>\r\n            <input id=\"baseUnitOfMeasurement\" name=\"baseUnitOfMeasurement\"   [disabled]=\"true\"\r\n                [value]=\"this.selectedRecord.baseUnitOfMeasurement\"\r\n                class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary\">\r\n        </div>\r\n    </div>\r\n\r\n    <h3>Control Data:</h3>\r\n    <hr>\r\n    <div class=\"row m-2\">\r\n        <label for=\"numberToBeConverted\" style=\"color: rgb(11, 37, 139);\">Conversion:</label>\r\n        <div class=\"field  md:col-2\">\r\n            <input id=\"numberToBeConverted\" name=\"numberToBeConverted\"  type=\"number\"\r\n            [value]=\"this.selectedRecord.numberToBeConverted\"  [disabled]=\"true\"\r\n                class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary \">\r\n        </div>\r\n        <div class=\"field  md:col-4\">\r\n            <!-- <label for=\"toBeConvertedUnitOfMeasurement\" style=\"color: rgb(11, 37, 139);\" >ToBe Converted UnitOfMeasurement:</label> -->\r\n            <input id=\"toBeConvertedUnitOfMeasurement\" name=\"toBeConvertedUnitOfMeasurement\"   [disabled]=\"true\"\r\n            [value]=\"this.selectedRecord.toBeConvertedUnitOfMeasurement\"\r\n            class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary\">\r\n        </div>\r\n        <div class=\"field  md:col-2\">\r\n            <input id=\"convertedNumber\" name=\"convertedNumber\"  type=\"number\"\r\n            [value]=\"this.selectedRecord.convertedNumber\" [disabled]=\"true\"\r\n                class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary\">\r\n        </div>\r\n        <div class=\"field  md:col-3\">\r\n            <!-- <label for=\"defaultUnitOfMeasurement\" style=\"color: rgb(11, 37, 139);\"> Converted UnitOfMeasurement:</label> -->\r\n            <input id=\"defaultUnitOfMeasurement\" name=\"defaultUnitOfMeasurement\"   [disabled]=\"true\"\r\n            [value]=\"this.selectedRecord.defaultUnitOfMeasurement\"\r\n            class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary\">\r\n        </div>\r\n    </div>\r\n    <div class=\"row m-2\">\r\n        <div class=\"field col-12 md:col-6\">\r\n            <label for=\"mainItem\" class=\"mr-1\" style=\"color: rgb(11, 37, 139);\" >Main Item:</label>\r\n                <input id=\"mainItem\" name=\"mainItem\"  [value]=\"this.selectedRecord.mainItem\"\r\n                [disabled]=\"true\"\r\n                class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary\" >\r\n        </div>\r\n        <div class=\"field col-12 md:col-6\">\r\n            <label for=\"materialGroupCode\" style=\"color: rgb(11, 37, 139);\" > Material Grp:</label>\r\n            <input id=\"materialGroupCode\" name=\"materialGroupCode\"  [value]=\"this.selectedRecord.materialGroupCode\"\r\n            [disabled]=\"true\"\r\n            class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary\" >\r\n        </div>\r\n    </div>\r\n    <div class=\" text-center m-3\">\r\n        <button pButton pRipple label=\"OK\" (click)=\"navigateMainPage()\" class=\"p-button-rounded m-2 \"></button>\r\n    </div>\r\n</form>\r\n<p-confirmDialog [style]=\"{ width: '450px' }\"></p-confirmDialog>","export class AuthUser {\r\n   // roles: string[]=[];\r\n    constructor(\r\n        public email: string,\r\n        private _token: string,\r\n        public  roles: string[],\r\n       // public role:[],\r\n    ) { }\r\n\r\n    get token() {\r\n        return this._token;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { throwError, BehaviorSubject, of } from 'rxjs';\r\nimport { AuthUser } from './auth-user.model';\r\nimport { environment } from '../../environments/environment';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nexport interface AuthResponseBackend {\r\n  access_token: string;\r\n  refresh_token: string;\r\n  id_token: string;\r\n  token_type: string;\r\n  expires_in: number;\r\n  groups:string[]\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthService {\r\n\r\n  private clientID = environment.clientID\r\n  private clientSecret = environment.clientSecret\r\n\r\n  private authUrl = \"https://proxy-app.cfapps.us10-001.hana.ondemand.com/auth\"\r\n  private registerUrl = \"https://proxy-app.cfapps.us10-001.hana.ondemand.com/api/iasusers\"\r\n\r\n\r\n  loggedInUser = new BehaviorSubject<AuthUser | null>(null);\r\n  private tokenExpirationTimer: any;\r\n\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n   /**\r\n   * Checks if the logged-in user has one or more required roles.\r\n   * @param requiredRoles Array of required roles\r\n   * @returns `true` if the user has the required role, otherwise `false`.\r\n   */\r\n  //  hasRole(requiredRoles: string[]): boolean {\r\n  //   let user = new AuthUser(\"\",\"\");\r\n  //   if(this.loggedInUser.value){\r\n  //    user = this.loggedInUser.value;\r\n  //   }\r\n  //   if (!user || !user.roles) return false;\r\n  //   return requiredRoles.some(role => user.roles.includes(role));\r\n  //   }\r\n\r\n  hasRole(requiredRoles: string[]): boolean {\r\n    const user = this.loggedInUser.value;\r\n    console.log(user);\r\n    console.log(user?.roles);\r\n    \r\n    if (!user || !user.roles) {\r\n      return false;\r\n    }\r\n    return requiredRoles.some(role => user.roles.includes(role));\r\n  }\r\n  \r\n  \r\n\r\n  signUp(value: string, familyName: string, givenName: string, userName: string) {\r\n    const headers = new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    });\r\n\r\n    const data = {\r\n      'value': value,\r\n      'familyName': familyName,\r\n      'givenName': givenName,\r\n      'userName': userName\r\n    }\r\n    const config = {\r\n      maxBodyLength: Infinity,\r\n      headers,\r\n      body: JSON.stringify(data)\r\n    };\r\n    console.log(data)\r\n   return this.http\r\n      .post<any>(\r\n        this.registerUrl,\r\n        data, { headers }\r\n      )\r\n  }\r\n\r\n  signIn(email: string, password: string) {\r\n\r\n    const headers = new HttpHeaders({\r\n      'Authorization': 'Basic ' + btoa(`${this.clientID}:${this.clientSecret}`),\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n    });\r\n\r\n    console.log(headers)\r\n    const data = new URLSearchParams();\r\n    data.set('grant_type', 'password');\r\n    data.set('username', email);\r\n    data.set('password', password);\r\n\r\n    console.log(data)\r\n    console.log(data.toString())\r\n\r\n    return this.http\r\n      .post<AuthResponseBackend>(this.authUrl,\r\n        data.toString(), { headers }\r\n      ).pipe(tap(resData => {\r\n        console.log(resData.id_token)\r\n        //decoding the token:\r\n        let decoded: any;\r\n        decoded = jwtDecode(resData.id_token);\r\n       // const decoded: JwtPayload = jwtDecode(token);\r\n        const userRoles = decoded.groups || [];\r\n        \r\n        const user = new AuthUser(email, resData.id_token,userRoles);\r\n        localStorage.setItem('token', resData.id_token);\r\n        this.loggedInUser.next(user);\r\n        return user;\r\n      }));\r\n  }\r\n\r\n  logout() {\r\n    this.loggedInUser.next(null);\r\n    this.router.navigate(['/login']);\r\n    localStorage.removeItem('token');\r\n    if (this.tokenExpirationTimer) {\r\n      clearTimeout(this.tokenExpirationTimer);\r\n    }\r\n    this.tokenExpirationTimer = null;\r\n  }\r\n\r\n  autoLogout(expirationDuration: number) {\r\n    this.tokenExpirationTimer = setTimeout(() => {\r\n      this.logout();\r\n    }, expirationDuration);\r\n  }\r\n\r\n  private handleError(errorRes: HttpErrorResponse) {\r\n    let errorMessage = 'An unknown error occurred!';\r\n    if (!errorRes.error || !errorRes.error.error) {\r\n      return throwError(errorMessage);\r\n    }\r\n    switch (errorRes.error.error.message) {\r\n      case 'EMAIL_EXISTS':\r\n        errorMessage = 'This email exists already';\r\n        break;\r\n      case 'EMAIL_NOT_FOUND':\r\n        errorMessage = 'This email does not exist.';\r\n        break;\r\n      case 'INVALID_PASSWORD':\r\n        errorMessage = 'This password is not correct.';\r\n        break;\r\n    }\r\n    return throwError(errorMessage);\r\n  }\r\n\r\n}","export const environment = {\r\n    production: true,\r\n    // apiUrl: 'https://sd-dev.c-878bd9e.kyma.ondemand.com',\r\n    apiUrl: 'https://sd-cf.cfapps.us10-001.hana.ondemand.com',\r\n    authUrl: \"https://ajwgvqm4q.trial-accounts.ondemand.com/oauth2/token\",\r\n    clientID: \"1830c61b-9601-4c91-a0c5-901cdbf0c2e4\",\r\n    clientSecret: \"mGV7xPbl[MV51HG-lVeHQV2=LkTg=@\"\r\n};","<!-- <nav class=\"navbar bg-body-tertiary fixed-top\"> -->\r\n<nav class=\"navbar navbar-expand-lg bg-dark navbar-dark  fixed-top\">\r\n  <div class=\"container-fluid\">\r\n    <fd-shellbar-logo>\r\n      <a href=\"#\" class=\"fd-shellbar__logo fd-shellbar__logo--image-replaced\" aria-label=\"SAP\"></a>\r\n      <a class=\"navbar-brand\" href=\"#\"></a>\r\n    </fd-shellbar-logo>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasNavbar\"\r\n      aria-controls=\"offcanvasNavbar\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"offcanvas offcanvas-end\" tabindex=\"-1\" id=\"offcanvasNavbar\" aria-labelledby=\"offcanvasNavbarLabel\">\r\n      <div class=\"offcanvas-header\">\r\n        <h5 class=\"offcanvas-title\" id=\"offcanvasNavbarLabel\">SD App</h5>\r\n        <button type=\"button\" class=\"btn-close \" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"></button>\r\n      </div>\r\n      <div class=\"offcanvas-body\">\r\n        <ul class=\"navbar-nav justify-content-start flex-grow-1 pe-3\">\r\n\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link active\" aria-current=\"page\" routerLink=\"/servicemaster\">Service-Master</a>\r\n          </li>\r\n          <!-- <li class=\"nav-item\">\r\n            <a class=\"nav-link active\" aria-current=\"page\" routerLink=\"/home/servicemaster\">Service-Master</a>\r\n          </li> -->\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link active\" aria-current=\"page\" routerLink=\"/servicetype\">Service-Type</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link active\" aria-current=\"page\" routerLink=\"/model\">Model</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link active\" aria-current=\"page\" routerLink=\"/formulas\">Formula</a>\r\n          </li>\r\n         \r\n        </ul>\r\n\r\n        <ul class=\"navbar-nav justify-content-end flex-grow-1 pe-3\">\r\n \r\n          <ng-container *ngIf=\"isAuthenticated; else loginLink\">\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" style=\"cursor: pointer;\" (click)=\"onLogout()\">Logout</a>\r\n            </li>\r\n          </ng-container>\r\n          <ng-template #loginLink>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" routerLink=\"/home\">Home</a>\r\n            </li>\r\n          </ng-template>\r\n\r\n          <!-- <li class=\"nav-item\"  >\r\n            <a class=\"nav-link active\" aria-current=\"page\" routerLink=\"/tendering\">Exit</a>\r\n          </li> -->\r\n        </ul> \r\n        <!-- <ul class=\"navbar-nav justify-content-end flex-grow-1 pe-3\">\r\n \r\n                <ng-container *ngIf=\"isAuthenticated; else loginLink\">\r\n                  <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" style=\"cursor: pointer;\" (click)=\"onLogout()\">Logout</a>\r\n                  </li>\r\n                </ng-container>\r\n                <ng-template #loginLink>\r\n                  <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" routerLink=\"/login\">Login</a>\r\n                  </li>\r\n                </ng-template>\r\n\r\n                <li class=\"nav-item\"  >\r\n                  <a class=\"nav-link active\" aria-current=\"page\" routerLink=\"/servicetype\">Exit</a>\r\n                </li>\r\n              </ul>  -->\r\n\r\n        <!-- <ul class=\"navbar-nav justify-content-end flex-grow-1 pe-3\">\r\n                  <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" routerLink=\"/login\">NewLogin</a>\r\n                  </li>\r\n              </ul>  -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit,OnDestroy  {\r\n\r\n  isAuthenticated = false;\r\n  private userSub!: Subscription;\r\n\r\n  constructor(\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.userSub = this.authService.loggedInUser.subscribe(user => {\r\n      this.isAuthenticated = !!user;\r\n      console.log(!user);\r\n      console.log(!!user);\r\n    });\r\n  }\r\n\r\n  onLogout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.userSub.unsubscribe();\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'BTP-SD-APP';\r\n}\r\n","<app-header></app-header>\r\n\r\n<div class=\"container-fluid\">\r\n  <div class=\"row \">\r\n      <router-outlet> </router-outlet>\r\n  </div>\r\n</div>\r\n<ng-http-loader></ng-http-loader>","<div class=\"d-flex justify-content-center align-items-center vh-100\">\r\n    <div class=\"card card-style\">\r\n        <h4 class=\"card-header login-header\" style=\"text-align: center;\">Login</h4>\r\n        <div class=\"card-body\">\r\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit(loginForm)\">\r\n                <div class=\"mb-3\">\r\n                    <label class=\"form-label\">Email</label>\r\n                    <input type=\"text\" formControlName=\"username\" class=\"form-control\" />\r\n                    <!--error -->\r\n                    <span *ngIf=\"loginForm.controls['username'].invalid && (loginForm.controls['username'].dirty || \r\n                       loginForm.controls['username'].touched)\" class=\"error\">\r\n                        <span class=\"text-danger\" *ngIf=\"loginForm.controls['username'].errors?.['required']\">\r\n                            Email is required.\r\n                        </span>\r\n                    </span>\r\n                    <span *ngIf=\"loginForm.controls['username'].invalid && (loginForm.controls['username'].dirty || \r\n                       loginForm.controls['username'].touched)\" class=\"error\">\r\n                        <span class=\"text-danger\" *ngIf=\"loginForm.controls['username'].errors?.['username']\">\r\n                            Please Enter Valid Email.\r\n                        </span>\r\n                    </span>\r\n\r\n                </div>\r\n                <div class=\" mb-3\">\r\n                    <label class=\"form-label\">Password</label>\r\n                    <div class=\"input-group\">\r\n                        <!-- <span class=\"input-group-text\" id=\"basic-addon1\">\r\n\r\n                            <i class=\"fa fa-lock\" aria-hidden=\"true\"></i>\r\n                        </span> -->\r\n                        <input [type]=\"isShown?'password' :'text'\" formControlName=\"password\" class=\"form-control\" />\r\n                        <span class=\"input-group-text \" (click)=\"isShown=!isShown\">\r\n                            <i class=\"fa \" [class]=\"isShown? 'fa-eye-slash':'fa-eye'\" aria-hidden=\"true\"></i>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <!--error  for password-->\r\n                <span *ngIf=\"loginForm.controls['password'].invalid && (loginForm.controls['password'].dirty || \r\n                           loginForm.controls['password'].touched)\" class=\"error\">\r\n                    <span class=\"text-danger\" *ngIf=\"loginForm.controls['password'].errors?.['required']\">\r\n                        Password is required.\r\n                    </span>\r\n                </span>\r\n                <div class=\"d-flex justify-content-center my-3\">\r\n                    <button [disabled]=\"loginForm.invalid\" type=\"submit\" class=\"btn btn-primary\">\r\n                        <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm me-1\"></span>\r\n                        Login\r\n                    </button>\r\n                    <a routerLink=\"/register\" class=\"btn btn-link\">New Account?</a>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\nimport { AuthUser } from '../auth-user.model';\r\nimport { jwtDecode } from 'jwt-decode';\r\n//import { AlertService } from 'src/app/shared/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n  providers: []\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n\r\n\r\n  loginForm: FormGroup = new FormGroup({\r\n    username: new FormControl('', [Validators.required,\r\n    Validators.email]),\r\n    password: new FormControl('', [Validators.required\r\n      //Validators.pattern(/^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*\\W)(?!.* ).{8,}$/) \r\n    ])\r\n  });\r\n  isShown: boolean = true;\r\n  loading = false;\r\n  submitted = false;\r\n  error!: string;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSubmit(userData: FormGroup) {\r\n    console.log(userData);\r\n    console.log(userData.value.username);\r\n    this.loading = true;\r\n    this.authService.signIn(userData.value.username, userData.value.password)\r\n      .subscribe({\r\n        next: (res) => {\r\n          console.log(res);\r\n          let decoded: any;\r\n          decoded = jwtDecode(res.id_token);\r\n          const userRoles = decoded.groups || [];\r\n\r\n          const user = new AuthUser(userData.value.username, res.id_token,userRoles);\r\n          localStorage.setItem('token', res.id_token);\r\n          this.authService.loggedInUser.next(user);\r\n          this.loading = false;\r\n          this.router.navigate(['/servicetype']);\r\n        },\r\n        error: (error) => {\r\n          console.log(error);\r\n          alert(error)\r\n          this.loading = false;\r\n        },\r\n        complete: () => {\r\n        }\r\n      });\r\n  }\r\n}\r\n","<!-- <app-alert></app-alert> -->\r\n<div class=\"d-flex justify-content-center align-items-center vh-100\">\r\n    <div class=\"card card-style\">\r\n        <h4 class=\"card-header register-header\">Create a New Account</h4>\r\n        <div class=\"card-body\">\r\n            <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit(registerForm)\">\r\n                <div class=\"mb-3\">\r\n                    <label class=\"form-label\">First Name</label>\r\n                    <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" />\r\n                    <!-- <div *ngIf=\"submitted && f['firstName'].errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"f['firstName'].errors['required']\">First Name is required</div>\r\n                    </div> -->\r\n\r\n                     <!--error -->\r\n                     <span *ngIf=\"registerForm.controls['firstName'].invalid && (registerForm.controls['firstName'].dirty || \r\n                     registerForm.controls['firstName'].touched)\" class=\"error\">\r\n                       <span class=\"text-danger\" *ngIf=\"registerForm.controls['firstName'].errors?.['required']\">\r\n                           FirstName is required.\r\n                       </span>\r\n                   </span>\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <label class=\"form-label\">Last Name</label>\r\n                    <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" />\r\n                    <!-- <div *ngIf=\"submitted && f['lastName'].errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"f['lastName'].errors['required']\">Last Name is required</div>\r\n                    </div> -->\r\n\r\n                      <!--error -->\r\n                      <span *ngIf=\"registerForm.controls['lastName'].invalid && (registerForm.controls['lastName'].dirty || \r\n                      registerForm.controls['lastName'].touched)\" class=\"error\">\r\n                        <span class=\"text-danger\" *ngIf=\"registerForm.controls['lastName'].errors?.['required']\">\r\n                            LastName is required.\r\n                        </span>\r\n                    </span>\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <label class=\"form-label\">Username</label>\r\n                    <input type=\"text\" formControlName=\"username\" class=\"form-control\" />\r\n                    <!-- <div *ngIf=\"submitted && f['username'].errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"f['username'].errors['required']\">Username is required</div>\r\n                    </div> -->\r\n\r\n                    <!--error -->\r\n                    <span *ngIf=\"registerForm.controls['username'].invalid && (registerForm.controls['username'].dirty || \r\n                      registerForm.controls['username'].touched)\" class=\"error\">\r\n                        <span class=\"text-danger\" *ngIf=\"registerForm.controls['username'].errors?.['required']\">\r\n                            UserName is required.\r\n                        </span>\r\n                    </span>\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <label class=\"form-label\">Email</label>\r\n                    <input type=\"email\" formControlName=\"email\" class=\"form-control\" />\r\n                    <!-- <div *ngIf=\"submitted && f['email'].errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"f['email'].errors['required']\">Email is required</div>\r\n                    </div> -->\r\n\r\n                    <!--error -->\r\n                    <span *ngIf=\"registerForm.controls['email'].invalid && (registerForm.controls['email'].dirty || \r\n                      registerForm.controls['email'].touched)\" class=\"error\">\r\n                        <span class=\"text-danger\" *ngIf=\"registerForm.controls['email'].errors?.['required']\">\r\n                            Email is required.\r\n                        </span>\r\n                    </span>\r\n                    <span *ngIf=\"registerForm.controls['email'].invalid && (registerForm.controls['email'].dirty || \r\n                    registerForm.controls['email'].touched)\" class=\"error\">\r\n                        <span class=\"text-danger\" *ngIf=\"registerForm.controls['email'].errors?.['email']\">\r\n                            Please Enter Valid Email.\r\n                        </span>\r\n                    </span>\r\n                </div>\r\n                <div class=\"d-flex justify-content-center my-3\">\r\n                    <button [disabled]=\"registerForm.invalid\" type=\"submit\" class=\"btn btn-primary\">\r\n                        <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm me-1\"></span>\r\n                        Register\r\n                    </button>\r\n                    <a routerLink=\"/login\" class=\"btn btn-link\">Have an Account?</a>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"popup-container\" *ngIf=\"showPopup\">\r\n    <div class=\"popup\">\r\n        <h4>Your Account has been created successfully,</h4>\r\n       <p> plaese check your email to activate your account.Then,You can login </p>\r\n        <button class=\"form-button ok-button\" style=\" border-radius: 8px; \" (click)=\"closePopup()\">OK</button>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n// import { AlertService } from 'src/app/shared/alert.service';\r\n\r\n@Component({\r\n    selector: 'app-register',\r\n    templateUrl: './register.component.html',\r\n    styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n    registerForm: FormGroup = new FormGroup({\r\n        firstName: new FormControl('', [Validators.required]),\r\n        lastName: new FormControl('', [Validators.required]),\r\n        username: new FormControl('', [Validators.required]),\r\n        email: new FormControl('', [Validators.required, Validators.email])\r\n    });\r\n\r\n    loading = false;\r\n    submitted = false;\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private authService: AuthService,\r\n        // private alertService: AlertService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n\r\n    onSubmit(userData: FormGroup) {\r\n        console.log(userData);\r\n        this.submitted = true;\r\n        this.loading = true;\r\n        this.authService.signUp(userData.value.email,userData.value.lastName,userData.value.firstName,userData.value.username)\r\n            .subscribe({\r\n                next: (response) => {\r\n                    console.log(response);\r\n                    this.showPopup=true;\r\n                    this.loading = false;\r\n                    // this.router.navigate(['/login']);\r\n                    // this.alertService.success('Registration Successful', { keepAfterRouteChange: true });\r\n                    //this.router.navigate(['/login'], { relativeTo: this.route });\r\n                },\r\n                error: error => {\r\n                    console.log(error);\r\n                    // this.alertService.error(error);\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n\r\n    showPopup: boolean = false;\r\n      closePopup() {\r\n        this.showPopup = false;\r\n        this.router.navigate(['/login']);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { AuthComponent } from './auth.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AuthInterceptorService } from './auth-interceptor.service';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { AlertComponent } from '../shared/alert/alert.component';\r\nimport { provideClientHydration } from '@angular/platform-browser';\r\n\r\n@NgModule({\r\n    declarations: [AuthComponent, LoginComponent, RegisterComponent,AlertComponent,],\r\n    imports:[\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        RouterModule.forChild([\r\n           // { path: 'auth', component: AuthComponent },\r\n        { path: 'register', component: RegisterComponent },\r\n        { path: 'login', component: LoginComponent }\r\n        ]),\r\n    ],\r\n    // providers: [\r\n    //     provideClientHydration(),\r\n    //     {\r\n    //       provide:HTTP_INTERCEPTORS,\r\n    //       useClass:AuthInterceptorService,\r\n    //       multi:true\r\n    //     }\r\n    //   ],\r\n   \r\n})\r\nexport class AuthModule {}","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpParams,\r\n  HttpHeaders\r\n} from '@angular/common/http';\r\nimport { take, exhaustMap } from 'rxjs/operators';\r\n\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\n\r\nexport class AuthInterceptorService implements HttpInterceptor {\r\n  constructor(private authService: AuthService) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    return this.authService.loggedInUser.pipe(\r\n      take(1),\r\n      exhaustMap(user => {\r\n        if (!user) {\r\n          return next.handle(req);\r\n        }\r\n       // console.log('User found, adding token:', user.token);\r\n        const modifiedReq = req.clone({\r\n          //params: new HttpParams().set('token', user.token)\r\n          headers:new HttpHeaders().set('Authorization',`Bearer ${user.token}`)\r\n        });\r\n        return next.handle(modifiedReq);\r\n      })\r\n    );\r\n  }\r\n}","\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule, provideClientHydration } from '@angular/platform-browser';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FundamentalNgxCoreModule } from '@fundamental-ngx/core';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgHttpLoaderModule } from 'ng-http-loader';\r\n\r\n\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { TableModule } from 'primeng/table';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { ToolbarModule } from 'primeng/toolbar';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\nimport { MessagesModule } from 'primeng/messages';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { StepsModule } from 'primeng/steps';\r\nimport { ChipModule } from 'primeng/chip';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { PaginatorModule } from 'primeng/paginator';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { AnimateModule } from 'primeng/animate';\r\nimport { CardModule } from 'primeng/card';\r\nimport { FieldsetModule } from 'primeng/fieldset';\r\nimport { TreeTableModule } from 'primeng/treetable';\r\n\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { ModelComponent } from './model/model.component';\r\nimport { AddModelComponent } from './model/add-model/add-model.component';\r\nimport { ModelDetailsComponent } from './model-details/model-details.component';\r\nimport { ServiceTypeComponent } from './service-type/service-type.component';\r\nimport { FormulaComponent } from './formula/formula.component';\r\nimport { CreateComponent } from './formula/create/create.component';\r\nimport { ParameterComponent } from './formula/parameter/parameter.component';\r\nimport { RelationComponent } from './formula/relation/relation.component';\r\nimport { TestComponent } from './formula/test/test.component';\r\nimport { FormulasComponent } from './formulas/formulas.component';\r\nimport { AuthModule } from './auth/auth.module';\r\nimport { AuthInterceptorService } from './auth/auth-interceptor.service';\r\nimport { LoadingSpinnerComponent } from './shared/loading-spinner/loading-spinner.component';\r\nimport { AlertComponent } from './shared/alert/alert.component';\r\nimport { AddEditServiceMasterComponent } from './new-service-master/add-edit-service-master/add-edit-service-master.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { NewServiceMasterComponent } from './new-service-master/new-service-master.component';\r\nimport { ServiceMasterDetailComponent } from './new-service-master/service-master-detail/service-master-detail.component';\r\nimport { HasRoleDirective } from './shared/has-role.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HasRoleDirective,\r\n\r\n    AppComponent,\r\n    HeaderComponent,\r\n    ModelComponent,\r\n    AddModelComponent,\r\n    ModelDetailsComponent,\r\n    ServiceTypeComponent,\r\n    FormulaComponent,\r\n    CreateComponent,\r\n    ParameterComponent,\r\n    RelationComponent,\r\n    TestComponent,\r\n    FormulasComponent,\r\n    LoadingSpinnerComponent,\r\n    AddEditServiceMasterComponent,\r\n    HomeComponent,\r\n    NewServiceMasterComponent,\r\n    ServiceMasterDetailComponent,\r\n    HasRoleDirective\r\n  ],\r\n  imports: [\r\n    FundamentalNgxCoreModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    NgbModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    CommonModule,\r\n    AuthModule,\r\n\r\n    ButtonModule,\r\n    TableModule,\r\n    DropdownModule,\r\n    DialogModule,\r\n    ToolbarModule,\r\n    InputTextareaModule,\r\n    MessagesModule,\r\n    ToastModule,\r\n    StepsModule,\r\n    AnimateModule,\r\n    CardModule,\r\n    ChipModule,\r\n    ConfirmDialogModule,\r\n    PaginatorModule,\r\n    MultiSelectModule,\r\n    CheckboxModule,\r\n    FieldsetModule,\r\n    TreeTableModule,\r\n  \r\n    NgHttpLoaderModule.forRoot(),\r\n  ],\r\n // providers: [],\r\n providers: [\r\n  provideClientHydration(),\r\n  {\r\n    provide:HTTP_INTERCEPTORS,\r\n    useClass:AuthInterceptorService,\r\n    multi:true\r\n  }\r\n],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\n\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"x_google_ignoreList":[]}